do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==3) then v23=nil;function v23()local v38=0 -0;local v39;local v40;local v41;local v42;while true do if (v38==(2 -1)) then return (v42 * (5695134 + 11082082)) + (v41 * 65536) + (v40 * ((427 + 1225) -(669 + 727))) + v39;end if ((0 + 0 + 0)==v38) then v39,v40,v41,v42=v1(v15,v18,v18 + (7 -4));v18=v18 + 4 + 0;v38=1 -(147 -(123 + 24));end end end v24=nil;v17=4;end if (4==v17) then function v24()local v43=0 -0;local v44;local v45;while true do if (v43==0) then v44=v23();v45=v23();v43=723 -(27 + 695);end if (v43==(1 + 0)) then return (( -(446 -(114 + (2023 -(1432 + 261)))) * v20(v45,(64 -19) -13)) + ((1608 + 140) -(1317 + 430))) * ((94 -(66 + (90 -64)))^(v20(v45,1451 -(726 + 704),534 -(462 + 41)) -(1383 -360))) * ((((v20(v45,378 -(95 + 282),(13 + 23) -16) * (2^(1135 -(1071 + (1295 -(39 + 1224)))))) + v44)/(2^(45 + 7))) + (1451 -(713 + 737)) + (0 -0));end end end v25=nil;function v25(v30)local v46;if  not v30 then v30=v23();if (v30==(0 + 0)) then return "";end end v46=v3(v15,v18,(v18 + v30) -(1 -0));v18=v18 + v30;local v47={};for v63=1 + 0, #v46 do v47[v63]=v2(v1(v3(v46,v63,v63)));end return v6(v47);end v17=5;end if (0==v17) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v31)if (v1(v31,2)==79) then v19=v0(v3(v31,1,1));return "";else local v66=v2(v0(v31,16));if v19 then local v74=v5(v66,v19);v19=nil;return v74;else return v66;end end end);v17=1;end if (2==v17) then function v21()local v48=0 + 0;local v49;while true do if (v48==(319 -(172 + 147))) then v49=v1(v15,v18,v18);v18=v18 + ((2747 -(668 + 144)) -(1871 + 63));v48=4 -3;end if (v48==1) then return v49;end end end v22=nil;function v22()local v50=0 + 0;local v51;local v52;while true do if (v50==(2 -1)) then return (v52 * (512 -(838 -582))) + v51;end if (v50==(1591 -(1078 + 513))) then v51,v52=v1(v15,v18,v18 + 2);v18=v18 + 1 + 1;v50=3 -(9 -7);end end end v17=3;end if (v17==7) then function v29(v32,v33,v34)local v53=v32[1];local v54=v32[2];local v55=v32[3];return function(...)local v67=1;local v68= -1;local v69={...};local v70=v11("#",...) -1;local function v71()local v75=v53;local v76=Const;local v77=v54;local v78=v55;local v79=v27;local v80={};local v81={};local v82={};for v89=1857 -(1665 + 192),v70 do if ((v89>=v78) or ((2181 -(67 + 694))<793)) then v80[v89-v78]=v69[v89 + 1 + 0 + 0];else v82[v89]=v69[v89 + 1];end end local v83=(v70-v78) + (294 -(80 + 213)) + 0;local v84;local v85;while true do local v90=0;while true do if ((v90==(1 + 0)) or (2059<(1836 -(833 + 469)))) then if ((v85<=(500 -(443 + 37))) or ((426 + 1444)>=(3256 -(79 + 748)))) then if (((4607 -2433)==((1781 + 1953) -1560)) and (v85<=(529 -(55 + 465)))) then if (((990 + 3402)>=(5830 -(537 + 1014))) and (v85<=(1624 -(1313 + 307)))) then if ((v85<=(944 -(915 + 28))) or ((186 + 444)>(5853 -(500 + 1169)))) then if ((2194<=((14288 -(370 + 140)) -8868)) and (v85==(0 + 0 + 0))) then v82[v84[1 + 1]]=v82[v84[2 + 1]][v82[v84[4 + 0]]];else local v117=0;local v118;local v119;local v120;while true do if (((6635 -(1768 + 25))>=(2411 + 829)) and (v117==(0 -0))) then v118=0 -0;v119=nil;v117=1 -0;end if (((5069 -(2458 + 202))<=(2469 + 1260)) and (v117==(1 + 0 + 0))) then v120=nil;while true do if ((v118==(3 -2)) or ((9882 -(443 + 5086))<=(7693 -4885))) then while true do if (((5700 -(209 + 1418))<(6458 -1622)) and (v119==(0 + 0))) then v120=v84[2];v82[v120]=v82[v120](v12(v82,v120 + 1,v68));break;end end break;end if ((v118==(0 + 0)) or ((2788 -(42 + 1393))>(3733 + (2050 -1136)))) then v119=0 + (0 -0);v120=nil;v118=(3760 -2387) -(1009 + 363);end end break;end end end elseif ((v85<=(171 -(98 + 71))) or ((4809 -1174)>=(5004 -1241))) then v82[v84[1 + 1]]=v82[v84[1 + 2]]/v84[4 + 0 + 0];elseif (((2789 -1892)==(195 + (1630 -928))) and (v85>3)) then do return;end else v82[v84[1 + (93 -(42 + 50))]]=v33[v84[5 -2]];end elseif (((4934 -(198 + 326))>2338) and (v85<=(27 -21))) then if ((1239<=(6212 -1631)) and (v85>((3261 -(1184 + 516)) -(535 + 1021)))) then local v122=(2485 -(497 + 303)) -(1479 + 206);local v123;local v124;local v125;while true do if ((v122==((2064 -1520) -(449 + 95))) or (3131<=(6114 -(6001 -(156 + 1400))))) then v123=0;v124=nil;v122=51 -(9 + 41);end if (((2105 + 1240)<(2792 + 1615)) and (v122==1)) then v125=nil;while true do if ((v123==(396 -(390 + (12 -7)))) or ((514 + 326)==(1125 + 209))) then while true do if (((0 -0)==v124) or (3051<1285)) then v125=v84[2];v82[v125](v12(v82,v125 + 1,v84[3 -(0 + 0)]));break;end end break;end if ((((2143 -653) -(481 + 1009))==v123) or ((2055 -1612)<=(1529 -(1082 + 55)))) then local v225=0 -0;while true do if ((v225==(0 + 0)) or ((4582 -1596)==(1030 + 500))) then v124=175 -(136 + 39);v125=nil;v225=1 + 0;end if (((659 + 2864)>1359) and (v225==(2 -1))) then v123=1 + 0;break;end end end end break;end end else local v126=0 -(863 -(7 + 856));local v127;local v128;while true do if (((3188 -(191 + (1578 -(268 + 195))))>=(17 + 1315)) and (v126==((27 -(7 + 19)) + 0))) then while true do if ((v127==(851 -(590 + 261))) or ((1759 + 861)<=(921 + (865 -534)))) then v128=v84[496 -(103 + 391)];v82[v128]=v82[v128]();break;end end break;end if ((v126==(790 -(143 + 647))) or ((2648 -(43 + 1871))==(4581 -(68 + 211)))) then v127=0;v128=nil;v126=1 -0;end end end elseif ((v85<=(1974 -(1398 + 569))) or ((6081 -(391 + 1144))<(1455 + 202))) then if ((v84[7 -5]==v82[v84[4 + 0]]) or (3180<=(8434 -5328))) then v67=v67 + (544 -(78 + (852 -387)));else v67=v84[3];end elseif ((v85>8) or (((5001 -(958 + 520)) -1842)<=(5596 -4312))) then local v162=0;local v163;local v164;local v165;while true do if ((v162==(1 + 0)) or ((1125 -617)==(1326 + 1168))) then v165=nil;while true do if ((v163==(3 -2)) or (((647 + 846) -702)>=(6982 -3117))) then while true do if ((v164==(0 + 0)) or ((11366 -7713)<(19 + 228))) then v165=v84[2];v82[v165]=v82[v165](v82[v165 + (874 -(579 + 294))]);break;end end break;end if (((4059 -(677 + 415))>(3806 -1088)) and (v163==0)) then local v242=0 -0;while true do if ((4688>=(3665 -(696 + (1212 -(966 + 218))))) and (v242==1)) then v163=1 + 0;break;end if ((v242==(1642 -(1641 + (1 -0)))) or (3654<=(2256 + 950))) then v164=751 -(251 + 500);v165=nil;v242=136 -(126 + 9);end end end end break;end if ((v162==(0 + 0)) or (307>4909)) then v163=0 + 0;v164=nil;v162=763 -(707 + 55);end end else for v203=v84[2],v84[3] do v82[v203]=nil;end end elseif ((74<=(12220 -8271)) and (v85<=(46 -(778 -(9 + 737))))) then if ((v85<=11) or (3590==(997 -(675 + 288)))) then if (((2 + 11 + 55)==(13 + 55)) and (v85>(27 -17))) then v82[v84[2]]();else v82[v84[2]]=v34[v84[1 + 2]];end elseif (((3852 -(456 + 5))>=(571 + 932)) and (v85<=((2 + 14) -4))) then local v130=0;local v131;local v132;local v133;while true do if ((v130==(0 -0)) or (4158<(2265 -(971 + 831)))) then v131=v84[(267 -(189 + 77)) + 1];v132=v82[v131];v130=1 + 0;end if ((1==v130) or (4419<(1154 + 2191))) then v133=v84[955 -(760 + 192)];for v216=1,v133 do v132[v216]=v82[v131 + v216];end break;end end elseif ((v85>(832 -(329 + 490))) or ((1045 -(177 + 80))==(1202 -(698 + (1184 -(849 + 229)))))) then local v166=0 + 0 + 0;local v167;local v168;while true do if ((v166==((4 -2) -1)) or ((505 -((1861 -(46 + 1627)) + 269))>(2960 -(1359 + 85)))) then while true do if ((v167==0) or ((2707 -(73 + 1289))<1305)) then v168=v84[2];v82[v168](v12(v82,v168 + 1,v68));break;end end break;end if (((3903 -(91 + 318))==(9587 -6093)) and (v166==((1516 -(58 + 1158)) -(112 + 188)))) then v167=0 + 0;v168=nil;v166=(1940 -1267) -(108 + 564);end end else v82[v84[2]]= #v82[v84[8 -5]];end elseif ((v85<=((42 -31) + (1671 -(1320 + 345)))) or (1966>=(4137 -(90 + 142)))) then if (((2808 -(223 + 1511))<3749) and (v85<=15)) then v33[v84[95 -(60 + 32)]]=v82[v84[2]];elseif (((459 + 846)==(14 + 1291)) and (v85>(56 -40))) then local v170=(1419 + 10) -(1412 + 17);local v171;local v172;local v173;while true do if (((811 + 632)<(4412 -(246 + 97))) and (v170==(442 -(291 + 150)))) then v173=nil;while true do if ((v171==(709 -(209 + (1414 -915)))) or (1623==1932)) then while true do if ((v172==(1837 -(262 + 1575))) or ((648 + 23)>4945)) then v173=v84[2];v82[v173](v82[v173 + 1]);break;end end break;end if ((v171==(0 + 0)) or ((2724 + 1835)<=(978 -(1956 -1369)))) then local v243=0 + 0 + 0;while true do if ((0==v243) or (3929<=(971 -(312 + 15)))) then v172=(0 + 0) -0;v173=nil;v243=2 -(1 + 0);end if ((v243==(1 + 0)) or ((6223 -2982)<(775 + 439))) then v171=3 -2;break;end end end end break;end if ((((1317 + 556) -(122 + 1026))==725) and (v170==0)) then v171=0 -0;v172=nil;v170=(1573 -1120) -(435 + 17);end end else v82[v84[2]]=v84[3];end elseif ((3703<=4446) and (v85<=(507 -(258 + 231)))) then if (v82[v84[115 -(24 + (222 -133))]] or ((3529 -(362 + 981))>(5429 -(87 + 1625)))) then v67=v67 + 1 + 0 + 0;else v67=v84[3];end elseif ((((2973 -(74 + 53)) + (3255 -2383))>2246) and (v85>19)) then v34[v84[3]]=v82[v84[4 -2]];else v82[v84[1 + 1]]=v82[v84[3]] -v82[v84[14 -10]];end elseif ((v85<=(3 + 28)) or ((4409 -3300)>(1343 + 3616))) then if ((v85<=((858 -(209 + 635)) + 11)) or (234>(10835 -6869))) then if (((450 + 1585)>=(670 + 131)) and (v85<=(1880 -(316 + (2763 -(312 + 909)))))) then if ((v85>(83 -62)) or ((14790 -11212)<=(3636 -(121 + 1220)))) then v82[v84[2 + 0]]=v84[3]~=(356 -(212 + 144));else v82[v84[1 + 1]]=v82[v84[4 -(1787 -(1596 + 190))]][v84[1433 -(868 + 561)]];end elseif ((v85<=(66 -43)) or ((1255 + 965 + 1030)>=((841 + 12622) -8821))) then v82[v84[2]]=v82[v84[3 -(0 + 0)]];elseif ((4098>=(4067 -(291 + (1431 -944)))) and (v85>24)) then if (((4 + 12)==(56 -40)) and (v82[v84[1189 -(419 + 630 + 138)]]==v82[v84[4]])) then v67=v67 + 1;else v67=v84[3];end else v67=v84[3];end elseif (((3487 -(674 + 1156))<=(3263 -(636 + 357))) and (v85<=28)) then if ((v85<=(2 + 24)) or ((1881 -642)>=(3641 + 255))) then v82[v84[2]]=v82[v84[1995 -(1368 + 624)]] + v82[v84[2 + 2]];elseif ((v85>27) or (2120==4542)) then local v177=0;local v178;while true do if (((119 + 457)<=(3423 -2245)) and ((0 -0)==v177)) then v178=v84[2 + 0];v82[v178]=v82[v178](v12(v82,v178 + (1 -0),v84[1929 -(65 + 1861)]));break;end end else v82[v84[5 -3]]={};end elseif (((2695 + 2118)>=149) and (v85<=(305 -(217 + 59)))) then local v139=0 -(0 + 0);local v140;local v141;local v142;local v143;while true do if ((v139==((1550 -(108 + 102)) -(270 + 766 + 303))) or ((6168 -2478)<=968)) then local v205=0;while true do if (((2085 -1270)<=(3878 + 946)) and (v205==(209 -(160 + 48)))) then v139=3 -1;break;end if (((1381 -(254 + 1127))==v205) or (((7489 -3292) -2581)>4992)) then v68=(v142 + v140) -(1 -0);v143=0 + 0;v205=700 -((42 -13) + 670);end end end if ((v139==(942 -((2033 -(256 + 1091)) + (1702 -(630 + 816))))) or (4597<(2174 + 983))) then v140=v84[2 + 0];v141,v142=v79(v82[v140](v12(v82,v140 + (3 -2),v84[1567 -(1126 + 438)])));v139=1 -0;end if (((624 + (1367 -(303 + 157)))==(130 + 1401)) and (v139==(4 -2))) then for v218=v140,v68 do local v219=0 -0;local v220;local v221;while true do if ((v219==(0 + 0)) or ((2016 -(100 + 369))<=(71 + 917))) then v220=(1412 -(157 + 217)) -(157 + 881);v221=nil;v219=1678 -(623 + 1054);end if ((v219==(449 -(299 + 149))) or (((50598 -39345) -6782)>(4198 + 563))) then while true do if ((v220==(0 -0)) or ((910 + 1166)<(3239 -(985 + (1913 -(437 + 663)))))) then v221=0 -0;while true do if (((4607 -2571)<2454) and (v221==0)) then v143=v143 + 1;v82[v218]=v141[v143];break;end end break;end end break;end end end break;end end elseif (((5671 -(466 + 979))<4395) and (v85>(27 + 3))) then local v180=0 -0;local v181;local v182;local v183;while true do if ((3333>1394) and ((0 + 0)==v180)) then v181=v84[2];v182={v82[v181](v12(v82,v181 + 1 + 0 + 0,v68))};v180=1;end if ((v180==1) or ((5035 -(80 + 127))<=3080)) then v183=0;for v227=v181,v84[9 -5] do local v228=1460 -(548 + 912);while true do if ((v228==(0 + 0)) or (((1998 -(493 + 724)) -(377 + 73))==(1270 + (1697 -(495 + 492))))) then v183=v183 + (1837 -((2830 -(531 + 720)) + 257));v82[v227]=v182[v183];break;end end end break;end end else v82[v84[2 + 0 + 0]][v84[958 -(172 + 783)]]=v84[2 + 2];end elseif (((33 + 2129)>(1309 + 75)) and (v85<=((867 -(458 + 389)) + 16))) then if (((1915 -1273)<=(672 + (879 -(331 + 487)))) and (v85<=(73 -40))) then if (((1078 + 25)<(1569 + 3164)) and (v85>(13 + 19))) then local v144=0 + 0;local v145;local v146;local v147;local v148;local v149;while true do if ((v144==(7 -4)) or (((395 + 2324) -2133)>4098)) then if (((831 -(26 + 122))<3694) and v149) then local v223=0 -0;local v224;while true do if ((((1096 + 50) -605)<=(2268 + (498 -(16 + 77)))) and ((0 -0)==v223)) then v224=0;while true do if (((1554 + 2579)==(2303 + 1830)) and (v224==(1023 -(96 + 927)))) then v82[v147]=v149;v67=v84[(1729 -(395 + 108)) -(1222 + 1)];break;end end break;end end else v67=v67 + 1;end break;end if (((4314 -(1334 + (2034 -(1175 + 626))))==(4381 -(152 + 1482))) and (v144==(1298 -(994 + 88 + 215)))) then local v206=1519 -(966 + 553);while true do if ((v206==(1018 -(255 + 762))) or ((6069 -(1452 + 131))<(4263 + (1314 -(1128 + 140))))) then v144=7 -5;break;end if ((v206==(0 + 0)) or (((2114 + 2209) -(223 + 969))>(5404 -(978 + 830)))) then v147=v145 + 1 + 1 + 0;v148={v82[v145](v82[v145 + (2 -1)],v82[v147])};v206=1627 -(549 + (1386 -(203 + 106)));end end end if ((v144==(569 -(554 + 15))) or (1597==4098)) then local v207=0 -0;while true do if ((v207==1) or (2866<(3191 -2015))) then v144=3 -2;break;end if ((((13020 -8055) -(256 + 297))>(2015 + 2112)) and ((0 -0)==v207)) then v145=v84[(2 + 1) -1];v146=v84[4];v207=1 + 0;end end end if ((v144==(9 -7)) or (3751<=(118 + 558))) then local v208=0;while true do if (((1133 + 1540)<3498) and (v208==((0 + 0) -0))) then for v234=1 + 0,v146 do v82[v147 + v234]=v148[v234];end v149=v148[1471 -(46 + 1424)];v208=1 + 0;end if ((v208==(231 -(44 + 186))) or ((827 + 3616)==(965 + 3491))) then v144=11 -8;break;end end end end else local v150=48 -(7 + 41);local v151;local v152;local v153;local v154;local v155;while true do if (((3925 -(345 + 565))<=(4771 -(387 + (1021 -(311 + 580))))) and (v150==(924 -(481 + 441)))) then v155=nil;while true do if ((v151==(2 -(0 + 0))) or ((5753 -2496)==((396 -(7 + 26)) -169))) then for v236=v152,v68 do local v237=0 -0;local v238;while true do if (((0 + 0)==v237) or ((162 + 724)<=(2490 -1702))) then v238=322 -(211 + 111);while true do if ((v238==(740 -(149 + 591))) or ((762 + 891)>(6341 -(110 + 1864)))) then v155=v155 + 1;v82[v236]=v153[v155];break;end end break;end end end break;end if ((v151==(1 + 0)) or (2599>(3205 -(109 + 373)))) then v68=(v154 + v152) -1;v155=0 + 0;v151=1 + 1;end if (((9191 -(7280 -(1087 + 883)))>=(2794 -(709 + 793))) and (v151==0)) then local v229=0 -0;while true do if ((1933<2361) and (v229==(1 + 0))) then v151=1;break;end if (((5961 -3767)>=1941) and (v229==0)) then v152=v84[1815 -(1186 + 627)];v153,v154=v79(v82[v152](v82[v152 + 1]));v229=1590 -(1403 + 186);end end end end break;end if ((v150==1) or ((3324 -(10 + 1188))<=(71 + 1058))) then v153=nil;v154=nil;v150=3 -1;end if (((686 + 3696)==(16119 -11737)) and (v150==0)) then v151=(903 + 173) -(273 + (1154 -(116 + 235)));v152=nil;v150=1361 -(71 + 1136 + 153);end end end elseif (((5349 -4159)>=(12 + 219)) and (v85<=34)) then v82[v84[380 -(45 + 333)]][v84[10 -7]]=v82[v84[5 -1]];elseif (((2086 -(1030 + 125))<1247) and (v85>35)) then local v185=0 -(1188 -(49 + 1139));local v186;local v187;local v188;local v189;local v190;while true do if (((918 + 2243)<(12977 -8654)) and (v185==(1 + 0))) then v188=nil;v189=nil;v185=1075 -(614 + 459);end if ((1422<3304) and (v185==(0 + 0))) then v186=1421 -(227 + 515 + 679);v187=nil;v185=1 + 0 + 0;end if (((2570 -(143 + 73))==(4083 -(1183 + 546))) and (v185==(1549 -(82 + 1465)))) then v190=nil;while true do if ((v186==(0 + 0)) or ((2817 -((1938 -(115 + 1307)) + 513))>=(17646 -13102))) then local v244=0 + 0;while true do if ((v244==(2 -1)) or ((141 + 621)==(4471 -(27 + 1350)))) then v186=1;break;end if ((v244==(1642 -(574 + 1068))) or ((3878 -(964 + 426))<=((239 + 3610) -(752 + 1155)))) then v187=0;v188=nil;v244=1 + 0;end end end if ((v186==(1 + 1)) or (((5558 -(528 + 161)) -2531)==(2806 -(400 + 1049)))) then while true do if (((2665 -(720 + 95))==(1593 + 257)) and ((2 + 0)==v187)) then for v261=1 -(1249 -(361 + 888)),v84[415 -(237 + 174)] do local v262=0 -(0 -0);local v263;local v264;while true do if (((5160 -(2440 -(422 + 1016)))==4158) and (v262==1)) then while true do if ((v263==(239 -(4 + 235))) or (3866<=((4276 -(364 + 10)) -2419))) then v67=v67 + 1 + 0;v264=v75[v67];v263=420 -(333 + 86);end if ((v263==(1 -0)) or ((2848 + 946)<(1132 + 77))) then if ((v264[2 -1]==(57 -34)) or ((12090 -(4182 + 3380))<=(194 + 72))) then v190[v261-(1 + 0)]={v82,v264[1187 -(988 + 196)]};else v190[v261-(1 -0)]={v33,v264[(412 -263) -(121 + 25)]};end v81[ #v81 + (779 -(418 + 360))]=v190;break;end end break;end if (((208 + 684)<=(5349 -(300 + 121 + 882))) and (v262==(0 + 0))) then v263=0 + 0;v264=nil;v262=428 -(192 + 235);end end end v82[v84[1 + 0 + 1]]=v29(v188,v189,v34);break;end if (((496 + 1775)<=(4822 -(130 + 757 + 19))) and (v187==(1305 -(802 + 502)))) then local v255=1127 -(86 + 1041);while true do if ((((7392 -2941) -(4426 -3402))>(3002 -(179 + 943))) and (v255==(0 -0))) then v190={};v189=v9({},{__index=function(v279,v280)local v284=0 + (559 -(228 + 331));local v285;local v286;local v287;while true do if ((1219<=(3123 -(102 + 757))) and (v284==(1434 -(1268 + 165)))) then v287=nil;while true do if (((0 + 0)==v285) or ((328 -(43 + 61))==((4881 -1625) -(807 + 62)))) then v286=0 + 0;v287=nil;v285=415 -(320 + 94);end if (((2881 -1868)>908) and (v285==(740 -((1302 -(191 + 505)) + 133)))) then while true do if ((v286==0) or (4770==((530 -337) + (594 -114)))) then local v307=0 + 0;while true do if (((5109 -3531)==(736 + 842)) and (v307==(1310 -(1005 + 305)))) then v287=v190[v280];return v287[2 -1][v287[2]];end end end end break;end end break;end if ((v284==(0 -(0 -0))) or ((3106 -(768 + 936))<=(1672 -1054))) then v285=1538 -(1129 + 409);v286=nil;v284=1340 -(1294 + 45);end end end,__newindex=function(v281,v282,v283)local v288=0 -0;local v289;while true do if (((4819 -(1638 + 142))==3039) and (v288==(1824 -(1007 + 817)))) then v289=v190[v282];v289[170 -(58 + 111)][v289[1 + 1]]=v283;break;end end end});v255=1;end if ((v255==(1871 -(1682 + 188))) or ((8334 -5197)<=1024)) then v187=1 + 1;break;end end end if (((11289 -7776)>(1487 + 129)) and (v187==((1497 -(1343 + 154)) -0))) then local v256=0 -0;local v257;while true do if (((5397 -1780)>(9676 -7069)) and (v256==(0 -0))) then v257=0 -0;while true do if ((v257==(4 -(749 -(233 + 513)))) or ((935 + 148 + 21)==(2009 -1129))) then v187=2 -1;break;end if (((2229 -(42 + 1069))>=(267 + 116)) and (v257==(0 + 0))) then v188=v77[v84[3]];v189=nil;v257=1 -0;end end break;end end end end break;end if ((((1464 -482) -(14 + 967))==v186) or (2562>((55088 -42030) -9624))) then local v245=0 -0;while true do if ((v245==0) or ((4072 + (2021 -(665 + 1029)))<(3063 -(399 + 365)))) then v189=nil;v190=nil;v245=1843 -((4933 -3200) + 109);end if (((1 + 0)==v245) or (1689==2708)) then v186=1 + 1;break;end end end end break;end end else local v191=0 -0;local v192;local v193;local v194;local v195;while true do if ((4902==4902) and (0==v191)) then v192=1578 -(1345 + 233);v193=nil;v191=1;end if ((v191==((1 + 1) -1)) or ((6579 -3184)<=(3804 -(329 + 239)))) then v194=nil;v195=nil;v191=54 -((1814 -(427 + 1367)) + 32);end if (((1223 -(133 + 237))==(294 + 559)) and ((6 -4)==v191)) then while true do if (((1 -0)==v192) or ((12425 -7544)<=(3830 -(236 + 114)))) then v195=nil;while true do if ((2289>679) and (v193==1)) then for v265=1, #v81 do local v266=0 -0;local v267;local v268;while true do if (((2004 + 1353)==(1151 + (6255 -4049))) and (v266==(1694 -(877 + 816)))) then while true do if (((0 -0)==v267) or (2649>=(3523 + 654))) then v268=v81[v265];for v294=0, #v268 do local v295=0;local v296;local v297;local v298;local v299;local v300;while true do if (((478 -(48 + 358))>=(1078 -(821 + 220))) and (v295==(2 + 0))) then v300=nil;while true do if ((4862>=3492) and (v296==(1425 -(534 + 891)))) then local v308=251 -(6 + 245);while true do if (((5203 -2847)>=(350 + 1518)) and (v308==(894 -(667 + 226)))) then v296=2 -1;break;end if ((0==v308) or ((573 + (2518 -(130 + 361)))<=1434)) then v297=0 + 0;v298=nil;v308=1;end end end if ((v296==1) or ((616 -360)==3825)) then local v309=0 + 0;while true do if ((3060<(5268 -(1370 + 8))) and (v309==0)) then v299=nil;v300=nil;v309=(12 -9) -2;end if ((((7011 -(178 + 1237)) -(3653 -(416 + 950)))<=(3354 + 314)) and (v309==(1330 -(1165 + 164)))) then v296=3 -(1629 -(487 + 1141));break;end end end if (((2 + 0)==v296) or ((1461 -(2635 -1716))>(5254 -(1474 + 224 + 39)))) then while true do if (((2467 -710)>(2698 -(151 + 849))) and (v297==((1084 -(204 + 880)) -0))) then local v312=(1455 -(953 + 502)) -0;local v313;while true do if ((v312==(0 + (135 -(121 + 14)))) or ((7210 -5390)>=2157)) then v313=0 + 0;while true do if ((v313==(409 -(375 + 33))) or ((149 + (2004 -(766 + 1159)))>=(13147 -(16445 -7776)))) then v297=1 + 0;break;end if (((5197 -3763)<=(2346 + 467 + 103)) and (0==v313)) then v298=v268[v294];v299=v298[1 + 0];v313=2 -1;end end break;end end end if ((v297==(474 -(198 + 275))) or (4850<(937 + 298 + 1475))) then v300=v298[2];if (((1737 + 2085 + 281)>(12916 -9056)) and (v299==v82) and (v300>=v194)) then local v314=0;local v315;while true do if (((75 + 20)==(166 -71)) and (((1466 -(1300 + 166)) -0)==v314)) then v315=0 + 0;while true do if (((4360 -(217 + (1788 -(476 + 1244))))>(858 + 598)) and (v315==0)) then v195[v300]=v299[v300];v298[1 + 0]=v195;break;end end break;end end end break;end end break;end end break;end if (((5520 -3583)<=(6486 -4475)) and (v295==(628 -(588 + 39)))) then v298=nil;v299=nil;v295=5 -3;end if ((v295==(1963 -(1434 + 529))) or ((4460 -2783)>(5341 -(2391 -1016)))) then v296=0 + 0;v297=nil;v295=1 -0;end end end break;end end break;end if ((v266==(1494 -(1428 + 66))) or ((369 + 1037)>(2367 + 1711))) then v267=0 -0;v268=nil;v266=1263 -(543 + 719);end end end break;end if ((v193==(0 + 0)) or (((882 + 401) -(253 + 744))>=(3770 -(1069 + 734)))) then local v258=0 + 0;local v259;while true do if ((v258==(0 -(0 -0))) or ((1051 + 246)<=((291 -227) + 249))) then v259=0 -0;while true do if (((4224 -(863 + (496 -239)))>=(2171 + 563)) and (v259==(0 -0))) then v194=v84[8 -6];v195={};v259=(1 + 139) -(27 + 112);end if ((((4343 -2618) -(416 + 363))<(6628 -(876 + 860))) and (v259==((3 -2) + 0))) then v193=(1 + 0) -0;break;end end break;end end end end break;end if ((0==v192) or (3732==4326)) then v193=(0 -0) -0;v194=nil;v192=1 + 0 + 0;end end break;end end end elseif ((v85<=39) or ((2297 -1609)>(6744 -2557))) then if ((v85<=(478 -(54 + 387))) or (4791<(400 -(358 -224)))) then local v157=0 + 0;local v158;local v159;while true do if ((4147==(3232 + 915)) and (v157==(0 + 0))) then v158=v84[1996 -(220 + 1260 + 514)];v159=v82[v84[2 + 1]];v157=4 -3;end if ((3871>(1189 -451)) and ((336 -(212 + 123))==v157)) then v82[v158 + 1 + 0]=v159;v82[v158]=v159[v84[10 -6]];break;end end elseif (((1477 -(617 + 819))<=(5007 -(468 + 150))) and (v85>(189 -151))) then if ((v82[v84[7 -(1000 -(552 + 443))]]==v84[1664 -(25 + 1635)]) or (((5578 + 3437) -4019)<(5278 -(728 + 493)))) then v67=v67 + (3 -2);else v67=v84[6 -3];end elseif ( not v82[v84[(25 + 586) -(185 + 424)]] or ((314 + 189)==(4025 -(833 + (1973 -(690 + 911)))))) then v67=v67 + (2 -1);else v67=v84[3 + 0];end elseif ((4748>(4874 -(3516 -2122))) and (v85<=(6 + 34))) then v82[v84[2 + 0]]=v29(v77[v84[3]],nil,v34);elseif ((v85==(3 + 38)) or (4389==(11005 -7721))) then local v196=0 + 0;local v197;local v198;local v199;while true do if ((v196==(2 -1)) or (341>=(14802 -10171))) then v199=0;for v230=v197,v84[4 + 0] do local v231=(0 + 0) -0;local v232;while true do if ((v231==(0 + 0)) or ((19383 -15087)<(2126 -1354))) then v232=0;while true do if ((3448>=(1823 -(820 + 358))) and (v232==(1526 -(1444 + 82)))) then v199=v199 + 1;v82[v230]=v198[v199];break;end end break;end end end break;end if ((v196==((0 -0) + (0 -0))) or ((6046 -3234)<(56 + 55))) then v197=v84[1 + 0 + 1];v198={v82[v197](v82[v197 + 1])};v196=4 -3;end end else local v200=0;local v201;local v202;while true do if ((v200==0) or ((4635 -3074)>((2237 -(956 + 242)) + 2367))) then v201=v84[1 + 1];v202=v82[v201];v200=(1 + 1) -1;end if (((810 -419)<(3486 -1429)) and ((2 -1)==v200)) then for v233=v201 + (2 -1),v84[3 -0] do v7(v202,v82[v233]);end break;end end end v67=v67 + (1 -0);break;end if ((v90==(0 -0)) or ((3557 -(457 + 673))<=(132 + 2203))) then local v95=0 -0;while true do if ((3055>(448 -151)) and (v95==(1278 -(956 + 321)))) then v90=1;break;end if (((5198 -(1027 + 151))<(25 + 4436)) and ((0 -0)==v95)) then v84=v75[v67];v85=v84[1524 -(778 + 745)];v95=1;end end end end end end A,B=v27(v10(v71));if  not A[1] then local v86=0;local v87;while true do if (0==v86) then v87=v32[4][v67] or "?";error("Script error at ["   .. v87   .. "]:"   .. A[2]);break;end end else return v12(A,2,B);end end;end return v29(v28(),{},v16)();end if (v17==6) then v28=nil;function v28()local v56=0 -0;local v57;local v58;local v59;local v60;local v61;local v62;while true do local v65=0 -0;while true do if (v65==(475 -(48 + 427))) then local v88=0 -0;while true do if (v88==(1344 -(1005 + 339))) then if (v56==(1781 -(1414 + 365))) then local v96=0 -0;while true do if (v96==(1270 -(198 + 1071))) then for v100=1,v23() do v59[v100]=v23();end return v60;end if (v96==(0 -0)) then for v102=1,v23() do local v103=0;local v104;local v105;while true do if (v103~=1) then else while true do if (v104==(1621 -(1527 + 94))) then v105=v21();if (v20(v105,1 + 0,1 + 0)~=(0 + 0)) then else local v211=1502 -(1395 + 107);local v212;local v213;local v214;local v215;while true do if (0==v211) then v212=179 -(75 + 104);v213=nil;v211=842 -(221 + 620);end if ((6 -4)~=v211) then else while true do if (v212==(4 -2)) then local v248=0 + 0;while true do if (v248==(1164 -(277 + 887))) then if (v20(v214,2 -1,409 -(237 + 171))==(1182 -(1024 + 157))) then v215[2 -0]=v62[v215[1 + 1]];end if (v20(v214,1853 -(1301 + 550),2 -0)~=(2 -1)) then else v215[7 -4]=v62[v215[1085 -(769 + 313)]];end v248=1;end if (v248==1) then v212=3;break;end end end if (v212==(1 + 0)) then local v249=0 + 0;while true do if (v249==(1 -0)) then v212=526 -(61 + 463);break;end if (v249==(0 + 0)) then v215={v22(),v22(),nil,nil};if (v213==(1081 -(782 + 299))) then local v276=1480 -(1437 + 43);local v277;local v278;while true do if (v276==0) then v277=0 -0;v278=nil;v276=3 -2;end if (v276~=(487 -(107 + 379))) then else while true do if (v277==(0 + 0)) then v278=0 + 0;while true do if (v278==(0 + 0)) then v215[3]=v22();v215[1877 -(899 + 974)]=v22();break;end end break;end end break;end end elseif (v213==(1769 -(775 + 993))) then v215[573 -(230 + 340)]=v23();elseif (v213==2) then v215[1 + 2]=v23() -((5 -3)^(172 -(76 + 80)));elseif (v213==3) then local v303=1761 -(1068 + 693);local v304;while true do if (v303~=(0 -0)) then else v304=0 -0;while true do if (v304==(1462 -(820 + 642))) then v215[3 + 0]=v23() -((1475 -(686 + 787))^(13 + 3));v215[1 + 3]=v22();break;end end break;end end end v249=815 -(595 + 219);end end end if (v212==(5 -2)) then if (v20(v214,33 -(10 + 20),3)==(1237 -(285 + 951))) then v215[3 + 1]=v62[v215[572 -(296 + 272)]];end v57[v102]=v215;break;end if (v212==(1549 -(491 + 1058))) then local v251=432 -(324 + 108);while true do if (v251==0) then v213=v20(v105,1 + 1,4 -1);v214=v20(v105,4,5 + 1);v251=1 + 0;end if ((3 -2)~=v251) then else v212=4 -3;break;end end end end break;end if (v211==(618 -(549 + 68))) then v214=nil;v215=nil;v211=399 -(142 + 255);end end end break;end end break;end if (v103==0) then local v109=1425 -(1354 + 71);while true do if (v109~=(1 -0)) then else v103=1;break;end if (v109==(0 + 0)) then v104=0 -0;v105=nil;v109=2 -1;end end end end end for v106=1,v23() do v58[v106-(1 + 0)]=v28();end v96=21 -(14 + 6);end end end if (v56~=(0 + 0)) then else local v97=757 -(549 + 208);while true do if (v97==(1 + 0)) then v59={};v60={v57,v58,nil,v59};v97=1 + 1;end if (v97~=(1103 -(93 + 1008))) then else v56=1 -0;break;end if ((0 + 0)~=v97) then else v57={};v58={};v97=1 + 0;end end end v88=2 -1;end if ((1 + 0)==v88) then v65=1;break;end end end if (v65==(1874 -(1092 + 781))) then if (v56==(1 -0)) then local v91=0;local v92;while true do if (v91==(1073 -(786 + 287))) then v92=1479 -(888 + 591);while true do if ((1 + 1)~=v92) then else v56=5 -3;break;end if (1~=v92) then else local v98=745 -(651 + 94);while true do if (v98==(0 + 0)) then for v110=3 -2,v61 do local v111=1833 -(1135 + 698);local v112;local v113;local v114;local v115;while true do if (v111==0) then v112=0 -0;v113=nil;v111=1 + 0;end if ((910 -(431 + 478))~=v111) then else v114=nil;v115=nil;v111=2 + 0;end if (v111==(2 + 0)) then while true do if (v112~=(602 -(49 + 552))) then else v115=nil;while true do if (v113==0) then local v239=0;local v240;while true do if (v239==0) then v240=942 -(481 + 461);while true do if (v240==0) then local v272=0;local v273;while true do if ((1078 -(587 + 491))~=v272) then else v273=0;while true do if (v273==(1 -0)) then v240=1741 -(133 + 1607);break;end if (v273==(0 + 0)) then v114=v21();v115=nil;v273=1;end end break;end end end if (v240~=1) then else v113=1 + 0;break;end end break;end end end if (v113~=(514 -(387 + 126))) then else if (v114==(1 -0)) then v115=v21()~=(0 -0);elseif (v114==(1946 -(256 + 1688))) then v115=v24();elseif (v114==(1447 -(838 + 606))) then v115=v25();end v62[v110]=v115;break;end end break;end if (v112==0) then v113=0 -0;v114=nil;v112=1 + 0;end end break;end end end v60[1965 -(918 + 1044)]=v21();v98=1;end if (1==v98) then v92=2 + 0;break;end end end if (v92~=0) then else local v99=0;while true do if (v99==(0 + 0)) then v61=v23();v62={};v99=1 + 0;end if (v99==1) then v92=1 + 0;break;end end end end break;end end end break;end end end end v29=nil;v17=7;end if (5==v17) then v26=v23;v27=nil;function v27(...)return {...},v11("#",...);end v17=6;end if (v17==1) then v20=nil;function v20(v35,v36,v37)if v37 then local v72=(v35/((1262 -(99 + 1161))^(v36-(2 -1))))%((2 -0)^(((v37-1) -(v36-(1000 -(171 + 828)))) + (955 -(342 + 612))));return v72-(v72%(1 + 0));else local v73=2^(v36-1);return (((v35%(v73 + v73))>=v73) and (1 + 0)) or ((568 + 1063) -(75 + 1494 + 62));end end v21=nil;v17=2;end end end vv8());end
